{"version":3,"file":"bundle.node.js","sources":["../src/platform/file-system.ts","../src/debug.ts","../generated/ts/core.ts","../generated/ts/native-node.mjs","../src/binding.ts","../src/platform/node/fs.ts","../src/platform/device-info.ts","../src/platform/node/device-info.ts","../src/platform/sync-proxy-config.ts","../src/platform/node/sync-proxy-config.ts","../src/safeGlobalThis.ts","../../../node_modules/event-target-shim/dist/event-target-shim.mjs","../../../node_modules/abort-controller/dist/abort-controller.mjs","../../realm-network-transport/dist/bundle.mjs","../src/platform/network.ts","../src/flags.ts","../src/bson.ts","../src/errors.ts","../src/decorators.ts","../src/assert.ts","../src/ranges.ts","../src/Listeners.ts","../src/JSONCacheMap.ts","../src/PromiseHandle.ts","../src/TimeoutPromise.ts","../src/PropertyHelpers.ts","../src/PropertyMap.ts","../src/ClassHelpers.ts","../src/ClassMap.ts","../src/TypeHelpers.ts","../src/Object.ts","../src/ObjectListeners.ts","../src/Collection.ts","../src/OrderedCollection.ts","../src/Results.ts","../src/List.ts","../src/Set.ts","../src/Dictionary.ts","../src/Types.ts","../src/GeoSpatial.ts","../src/Logger.ts","../src/app-services/utils.ts","../src/app-services/SyncConfiguration.ts","../src/app-services/Credentials.ts","../src/app-services/User.ts","../src/app-services/NetworkTransport.ts","../src/app-services/SyncSession.ts","../src/app-services/ApiKeyAuth.ts","../src/app-services/EmailPasswordAuth.ts","../src/app-services/PushClient.ts","../src/app-services/MongoDBCollection.ts","../src/app-services/FunctionsFactory.ts","../src/app-services/BaseSubscriptionSet.ts","../src/app-services/MutableSubscriptionSet.ts","../src/app-services/SubscriptionSet.ts","../src/app-services/Subscription.ts","../src/app-services/Sync.ts","../src/app-services/App.ts","../src/Realm.ts","../src/RealmListeners.ts","../src/Configuration.ts","../src/ProgressRealmPromise.ts","../src/schema/from-binding.ts","../src/schema/to-binding.ts","../src/schema/normalize.ts","../src/schema/validate.ts"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\ntype FileSystemType = {\n  isAbsolutePath(path: string): boolean;\n  joinPaths(...segments: string[]): string;\n  removeFile(path: string): void;\n  removeDirectory(path: string): void;\n  ensureDirectoryForFile(path: string): void;\n  setDefaultDirectoryPath(path: string): void;\n  getDefaultDirectoryPath(): string;\n  exists(path: string): boolean;\n  copyBundledRealmFiles(): void;\n  // readDirectory(path: string): Dirent[];\n  removeRealmFilesFromDirectory(path: string): void;\n};\n\nexport type Dirent = {\n  name: string;\n  isFile(): boolean;\n  isDirectory(): boolean;\n};\n\nexport const fs: FileSystemType = {\n  isAbsolutePath() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  joinPaths() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  removeFile() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  setDefaultDirectoryPath() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  getDefaultDirectoryPath() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  exists() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  copyBundledRealmFiles() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  removeDirectory() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  ensureDirectoryForFile() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  /*\n  readDirectory() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  */\n  removeRealmFilesFromDirectory() {\n    throw new Error(\"Not supported on this platform\");\n  },\n};\n\nexport function inject(injected: FileSystemType) {\n  Object.freeze(Object.assign(fs, injected));\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport createDebug from \"debug\";\n\nexport const debug = createDebug(\"realm\");\n\nexport function extendDebug(namespace: string) {\n  return debug.extend(namespace);\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nexport const enum SchemaMode {\n  Automatic = 0,\n  Immutable = 1,\n  ReadOnly = 2,\n  SoftResetFile = 3,\n  HardResetFile = 4,\n  AdditiveDiscovered = 5,\n  AdditiveExplicit = 6,\n  Manual = 7,\n}\nexport const enum PropertyType {\n  Int = 0,\n  Bool = 1,\n  String = 2,\n  Data = 3,\n  Date = 4,\n  Float = 5,\n  Double = 6,\n  Object = 7,\n  LinkingObjects = 8,\n  Mixed = 9,\n  ObjectId = 10,\n  Decimal = 11,\n  Uuid = 12,\n  Required = 0,\n  Nullable = 64,\n  Array = 128,\n  Set = 256,\n  Dictionary = 512,\n  Collection = 896,\n  Flags = 960,\n}\nexport const enum TableType {\n  TopLevel = 0,\n  Embedded = 1,\n  TopLevelAsymmetric = 2,\n}\nexport const enum ClientResetMode {\n  Manual = 0,\n  DiscardLocal = 1,\n  Recover = 2,\n  RecoverOrDiscard = 3,\n}\nexport const enum DataType {\n  Int = 0,\n  Bool = 1,\n  String = 2,\n  Binary = 4,\n  Mixed = 6,\n  Timestamp = 8,\n  Float = 9,\n  Double = 10,\n  Decimal = 11,\n  Link = 12,\n  LinkList = 13,\n  ObjectId = 15,\n  TypedLink = 16,\n  Uuid = 17,\n}\nexport const enum AuthProvider {\n  Anonymous = 0,\n  AnonymousNoReuse = 1,\n  Facebook = 2,\n  Google = 3,\n  Apple = 4,\n  Custom = 5,\n  UsernamePassword = 6,\n  Function = 7,\n  ApiKey = 8,\n}\nexport const enum MetadataMode {\n  NoEncryption = 0,\n  Encryption = 1,\n  NoMetadata = 2,\n}\nexport const enum LoggerLevel {\n  All = 0,\n  Trace = 1,\n  Debug = 2,\n  Detail = 3,\n  Info = 4,\n  Warn = 5,\n  Error = 6,\n  Fatal = 7,\n  Off = 8,\n}\nexport const enum HttpMethod {\n  Get = 0,\n  Post = 1,\n  Patch = 2,\n  Put = 3,\n  Del = 4,\n}\nexport const enum SyncSessionStopPolicy {\n  Immediately = 0,\n  LiveIndefinitely = 1,\n  AfterChangesUploaded = 2,\n}\nexport const enum SyncSessionState {\n  Active = 0,\n  Dying = 1,\n  Inactive = 2,\n  WaitingForAccessToken = 3,\n}\nexport const enum SyncSessionConnectionState {\n  Disconnected = 0,\n  Connecting = 1,\n  Connected = 2,\n}\nexport const enum SyncErrorAction {\n  NoAction = 0,\n  ProtocolViolation = 1,\n  ApplicationBug = 2,\n  Warning = 3,\n  Transient = 4,\n  DeleteRealm = 5,\n  ClientReset = 6,\n  ClientResetNoRecovery = 7,\n}\nexport const enum ProgressDirection {\n  Upload = 0,\n  Download = 1,\n}\nexport const enum SyncUserState {\n  LoggedOut = 0,\n  LoggedIn = 1,\n  Removed = 2,\n}\nexport const enum SyncSubscriptionSetState {\n  Uncommitted = 0,\n  Pending = 1,\n  Bootstrapping = 2,\n  Complete = 3,\n  Error = 4,\n  Superseded = 5,\n  AwaitingMark = 6,\n}\nexport const enum WatchStreamState {\n  NeedData = 0,\n  HaveEvent = 1,\n  HaveError = 2,\n}\nexport const enum ProxyType {\n  Http = 0,\n  Https = 1,\n}\n\n// Wrapped types\nexport class Float {\n  constructor(public value: number) {}\n  valueOf() {\n    return this.value;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/*global global, require */\nimport { createRequire } from \"node:module\";\nconst nodeRequire = typeof require === \"function\" ? require : createRequire(import.meta.url);\nconst nativeModule = nodeRequire(\"./realm.node\");\n\nif (!nativeModule) {\n  throw new Error(\n    \"Could not find the Realm binary. Please consult our troubleshooting guide: https://www.mongodb.com/docs/realm-sdks/js/latest/#md:troubleshooting-missing-binary\",\n  );\n}\n\n// We know that node always has real WeakRefs so just use them.\nexport const WeakRef = global.WeakRef;\n\nconst NativeBigIntSupport = Object.freeze({\n  add(a, b) {\n    return a + b;\n  },\n  equals(a, b) {\n    return a == b;\n  }, // using == rather than === to support number and string RHS!\n  isInt(a) {\n    return typeof a === \"bigint\";\n  },\n  numToInt(a) {\n    return BigInt(a);\n  },\n  strToInt(a) {\n    return BigInt(a);\n  },\n  intToNum(a) {\n    return Number(a);\n  },\n});\n\nexport const Int64 = NativeBigIntSupport; // Node always supports BigInt\n\nimport { Decimal128, EJSON, Long, ObjectId, UUID } from \"bson\";\nimport { Float } from \"./core\";\n\nexport * from \"./core\";\n\n// Copied from lib/utils.js.\n// TODO consider importing instead.\n// Might be slightly faster to make dedicated wrapper for 1 and 2 argument forms, but unlikely to be worth it.\nfunction _promisify(nullAllowed, func) {\n  return new Promise((resolve, reject) => {\n    func((...cbargs) => {\n      // Any errors in this function should flow into the Promise chain, rather than out to the caller,\n      // since callers of async callbacks aren't expecting exceptions.\n      try {\n        if (cbargs.length < 1 || cbargs.length > 2) throw Error(\"invalid cbargs length \" + cbargs.length);\n        let error = cbargs[cbargs.length - 1];\n        if (error) {\n          reject(error);\n        } else if (cbargs.length == 2) {\n          const result = cbargs[0];\n          if (!nullAllowed && (result === null || result === undefined)) {\n            throw new Error(\"Unexpected null or undefined successful result\");\n          }\n          resolve(result);\n        } else {\n          resolve();\n        }\n      } catch (err) {\n        reject(err);\n      }\n    });\n  });\n}\n\nconst _Helpers_Symbol = Symbol(\"Realm.Helpers.external_pointer\");\nconst _native_Helpers_get_table = nativeModule.Helpers_get_table;\nconst _native_Helpers_get_keypath_mapping = nativeModule.Helpers_get_keypath_mapping;\nconst _native_Helpers_results_append_query = nativeModule.Helpers_results_append_query;\nconst _native_Helpers_make_object_notifier = nativeModule.Helpers_make_object_notifier;\nconst _native_Helpers_set_binding_context = nativeModule.Helpers_set_binding_context;\nconst _native_Helpers_get_or_create_object_with_primary_key =\n  nativeModule.Helpers_get_or_create_object_with_primary_key;\nconst _native_Helpers_make_network_transport = nativeModule.Helpers_make_network_transport;\nconst _native_Helpers_delete_data_for_object = nativeModule.Helpers_delete_data_for_object;\nconst _native_Helpers_is_empty_realm = nativeModule.Helpers_is_empty_realm;\nconst _native_Helpers_base64_decode = nativeModule.Helpers_base64_decode;\nconst _native_Helpers_make_logger_factory = nativeModule.Helpers_make_logger_factory;\nconst _native_Helpers_make_logger = nativeModule.Helpers_make_logger;\nconst _native_Helpers_simulate_sync_error = nativeModule.Helpers_simulate_sync_error;\nconst _native_Helpers_consume_thread_safe_reference_to_shared_realm =\n  nativeModule.Helpers_consume_thread_safe_reference_to_shared_realm;\nconst _native_Helpers_file_exists = nativeModule.Helpers_file_exists;\nconst _native_Helpers_erase_subscription = nativeModule.Helpers_erase_subscription;\nconst _native_Helpers_get_results_description = nativeModule.Helpers_get_results_description;\nconst _native_Helpers_feed_buffer = nativeModule.Helpers_feed_buffer;\nconst _native_Helpers_make_ssl_verify_callback = nativeModule.Helpers_make_ssl_verify_callback;\nexport class Helpers {\n  constructor(ptr) {\n    this[_Helpers_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof Helpers)) throw new TypeError(\"Expected a Helpers\");\n    const out = self[_Helpers_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Helpers\");\n    return out;\n  }\n\n  static getTable(r, key) {\n    return _native_Helpers_get_table(r, key);\n  }\n  static getKeypathMapping(r) {\n    return _native_Helpers_get_keypath_mapping(r);\n  }\n  static resultsAppendQuery(results, query) {\n    return _native_Helpers_results_append_query(results, query);\n  }\n  static makeObjectNotifier(r, o) {\n    return _native_Helpers_make_object_notifier(r, o);\n  }\n  static setBindingContext(r, methods) {\n    return _native_Helpers_set_binding_context(r, methods);\n  }\n  static getOrCreateObjectWithPrimaryKey(t, pk) {\n    return _native_Helpers_get_or_create_object_with_primary_key(t, pk);\n  }\n  static makeNetworkTransport(runRequest) {\n    return _native_Helpers_make_network_transport(runRequest);\n  }\n  static deleteDataForObject(realm, object_type) {\n    return _native_Helpers_delete_data_for_object(realm, object_type);\n  }\n  static isEmptyRealm(realm) {\n    return _native_Helpers_is_empty_realm(realm);\n  }\n  static base64Decode(input) {\n    return _native_Helpers_base64_decode(input);\n  }\n  static makeLoggerFactory(log) {\n    return _native_Helpers_make_logger_factory(log);\n  }\n  static makeLogger(log) {\n    return _native_Helpers_make_logger(log);\n  }\n  static simulateSyncError(session, code, message, type, is_fatal) {\n    return _native_Helpers_simulate_sync_error(session, code, message, type, is_fatal);\n  }\n  static consumeThreadSafeReferenceToSharedRealm(tsr) {\n    return _native_Helpers_consume_thread_safe_reference_to_shared_realm(tsr);\n  }\n  static fileExists(path) {\n    return _native_Helpers_file_exists(path);\n  }\n  static eraseSubscription(subs, sub_to_remove) {\n    return _native_Helpers_erase_subscription(subs, sub_to_remove);\n  }\n  static getResultsDescription(results) {\n    return _native_Helpers_get_results_description(results);\n  }\n  static feedBuffer(ws, buffer) {\n    return _native_Helpers_feed_buffer(ws, buffer);\n  }\n  static makeSslVerifyCallback(callback) {\n    return _native_Helpers_make_ssl_verify_callback(callback);\n  }\n}\nconst _Logger_Symbol = Symbol(\"Realm.Logger.external_pointer\");\nconst _native_Logger_set_default_logger = nativeModule.Logger_set_default_logger;\nconst _native_Logger_set_default_level_threshold = nativeModule.Logger_set_default_level_threshold;\nexport class Logger {\n  constructor(ptr) {\n    this[_Logger_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof Logger)) throw new TypeError(\"Expected a Logger\");\n    const out = self[_Logger_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Logger\");\n    return out;\n  }\n\n  static setDefaultLogger(logger) {\n    return _native_Logger_set_default_logger(logger);\n  }\n  static setDefaultLevelThreshold(level) {\n    return _native_Logger_set_default_level_threshold(level);\n  }\n}\nconst _ConstTableRef_Symbol = Symbol(\"Realm.ConstTableRef.external_pointer\");\nconst _native_ConstTableRef_get_column_type = nativeModule.ConstTableRef_get_column_type;\nconst _native_ConstTableRef_get_link_target = nativeModule.ConstTableRef_get_link_target;\nconst _native_ConstTableRef_get_object = nativeModule.ConstTableRef_get_object;\nconst _native_ConstTableRef_try_get_object = nativeModule.ConstTableRef_try_get_object;\nconst _native_ConstTableRef_query = nativeModule.ConstTableRef_query;\nconst _native_ConstTableRef_find_primary_key = nativeModule.ConstTableRef_find_primary_key;\nconst _native_ConstTableRef_get_key = nativeModule.ConstTableRef_get_key;\nconst _native_ConstTableRef_Symbol_iterator = nativeModule.ConstTableRef_Symbol_iterator;\nexport class ConstTableRef {\n  constructor(ptr) {\n    this[_ConstTableRef_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof ConstTableRef)) throw new TypeError(\"Expected a ConstTableRef\");\n    const out = self[_ConstTableRef_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed ConstTableRef\");\n    return out;\n  }\n\n  getColumnType(column) {\n    return _native_ConstTableRef_get_column_type(this[_ConstTableRef_Symbol], column);\n  }\n\n  getLinkTarget(column) {\n    return _native_ConstTableRef_get_link_target(this[_ConstTableRef_Symbol], column);\n  }\n\n  getObject(key) {\n    return _native_ConstTableRef_get_object(this[_ConstTableRef_Symbol], key);\n  }\n\n  tryGetObject(key) {\n    return _native_ConstTableRef_try_get_object(this[_ConstTableRef_Symbol], key);\n  }\n\n  query(query_string, args, mapping) {\n    return _native_ConstTableRef_query(this[_ConstTableRef_Symbol], query_string, args, mapping);\n  }\n\n  findPrimaryKey(pk) {\n    return _native_ConstTableRef_find_primary_key(this[_ConstTableRef_Symbol], pk);\n  }\n\n  get key() {\n    return _native_ConstTableRef_get_key(this[_ConstTableRef_Symbol]);\n  }\n  [Symbol.iterator]() {\n    return _native_ConstTableRef_Symbol_iterator(this[_ConstTableRef_Symbol]);\n  }\n}\nconst _native_TableRef_create_object = nativeModule.TableRef_create_object;\nconst _native_TableRef_remove_object = nativeModule.TableRef_remove_object;\nconst _native_TableRef_get_link_target = nativeModule.TableRef_get_link_target;\nconst _native_TableRef_clear = nativeModule.TableRef_clear;\nexport class TableRef extends ConstTableRef {\n  static _extract(self) {\n    if (!(self instanceof TableRef)) throw new TypeError(\"Expected a TableRef\");\n    const out = self[_ConstTableRef_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed TableRef\");\n    return out;\n  }\n\n  createObject() {\n    return _native_TableRef_create_object(this[_ConstTableRef_Symbol]);\n  }\n\n  removeObject(key) {\n    return _native_TableRef_remove_object(this[_ConstTableRef_Symbol], key);\n  }\n\n  getLinkTarget(column) {\n    return _native_TableRef_get_link_target(this[_ConstTableRef_Symbol], column);\n  }\n\n  clear() {\n    return _native_TableRef_clear(this[_ConstTableRef_Symbol]);\n  }\n}\nconst _Obj_Symbol = Symbol(\"Realm.Obj.external_pointer\");\nconst _native_Obj_get_any = nativeModule.Obj_get_any;\nconst _native_Obj_set_any = nativeModule.Obj_set_any;\nconst _native_Obj_get_linked_object = nativeModule.Obj_get_linked_object;\nconst _native_Obj_get_backlink_count = nativeModule.Obj_get_backlink_count;\nconst _native_Obj_get_backlink_view = nativeModule.Obj_get_backlink_view;\nconst _native_Obj_create_and_set_linked_object = nativeModule.Obj_create_and_set_linked_object;\nconst _native_Obj_is_valid = nativeModule.Obj_is_valid;\nconst _native_Obj_get_table = nativeModule.Obj_get_table;\nconst _native_Obj_get_key = nativeModule.Obj_get_key;\nexport class Obj {\n  constructor(ptr) {\n    this[_Obj_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof Obj)) throw new TypeError(\"Expected a Obj\");\n    const out = self[_Obj_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Obj\");\n    return out;\n  }\n\n  getAny(column) {\n    return _native_Obj_get_any(this[_Obj_Symbol], column);\n  }\n\n  setAny(column, value) {\n    return _native_Obj_set_any(this[_Obj_Symbol], column, value);\n  }\n\n  getLinkedObject(column) {\n    return _native_Obj_get_linked_object(this[_Obj_Symbol], column);\n  }\n\n  getBacklinkCount() {\n    return _native_Obj_get_backlink_count(this[_Obj_Symbol]);\n  }\n\n  getBacklinkView(src_table, src_col_key) {\n    return _native_Obj_get_backlink_view(this[_Obj_Symbol], src_table, src_col_key);\n  }\n\n  createAndSetLinkedObject(column) {\n    return _native_Obj_create_and_set_linked_object(this[_Obj_Symbol], column);\n  }\n\n  get isValid() {\n    return _native_Obj_is_valid(this[_Obj_Symbol]);\n  }\n\n  get table() {\n    return _native_Obj_get_table(this[_Obj_Symbol]);\n  }\n\n  get key() {\n    return _native_Obj_get_key(this[_Obj_Symbol]);\n  }\n}\nconst _Transaction_Symbol = Symbol(\"Realm.Transaction.external_pointer\");\nexport class Transaction {\n  constructor(ptr) {\n    this[_Transaction_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof Transaction)) throw new TypeError(\"Expected a Transaction\");\n    const out = self[_Transaction_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Transaction\");\n    return out;\n  }\n}\nconst _ObjectStore_Symbol = Symbol(\"Realm.ObjectStore.external_pointer\");\nexport class ObjectStore {\n  constructor(ptr) {\n    this[_ObjectStore_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof ObjectStore)) throw new TypeError(\"Expected a ObjectStore\");\n    const out = self[_ObjectStore_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed ObjectStore\");\n    return out;\n  }\n}\nconst _Timestamp_Symbol = Symbol(\"Realm.Timestamp.external_pointer\");\nconst _native_Timestamp_make = nativeModule.Timestamp_make;\nconst _native_Timestamp_get_seconds = nativeModule.Timestamp_get_seconds;\nconst _native_Timestamp_get_nanoseconds = nativeModule.Timestamp_get_nanoseconds;\nexport class Timestamp {\n  constructor(ptr) {\n    this[_Timestamp_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof Timestamp)) throw new TypeError(\"Expected a Timestamp\");\n    const out = self[_Timestamp_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Timestamp\");\n    return out;\n  }\n\n  static make(seconds, nanoseconds) {\n    return _native_Timestamp_make(seconds, nanoseconds);\n  }\n\n  get seconds() {\n    return _native_Timestamp_get_seconds(this[_Timestamp_Symbol]);\n  }\n\n  get nanoseconds() {\n    return _native_Timestamp_get_nanoseconds(this[_Timestamp_Symbol]);\n  }\n}\nconst _Geospatial_Symbol = Symbol(\"Realm.Geospatial.external_pointer\");\nconst _native_Geospatial_make_from_circle = nativeModule.Geospatial_make_from_circle;\nconst _native_Geospatial_make_from_box = nativeModule.Geospatial_make_from_box;\nconst _native_Geospatial_make_from_polygon = nativeModule.Geospatial_make_from_polygon;\nexport class Geospatial {\n  constructor(ptr) {\n    this[_Geospatial_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof Geospatial)) throw new TypeError(\"Expected a Geospatial\");\n    const out = self[_Geospatial_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Geospatial\");\n    return out;\n  }\n\n  static makeFromCircle(circle) {\n    return _native_Geospatial_make_from_circle(circle);\n  }\n  static makeFromBox(box) {\n    return _native_Geospatial_make_from_box(box);\n  }\n  static makeFromPolygon(polygon) {\n    return _native_Geospatial_make_from_polygon(polygon);\n  }\n}\nconst _ObjLink_Symbol = Symbol(\"Realm.ObjLink.external_pointer\");\nconst _native_ObjLink_get_table_key = nativeModule.ObjLink_get_table_key;\nconst _native_ObjLink_get_obj_key = nativeModule.ObjLink_get_obj_key;\nexport class ObjLink {\n  constructor(ptr) {\n    this[_ObjLink_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof ObjLink)) throw new TypeError(\"Expected a ObjLink\");\n    const out = self[_ObjLink_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed ObjLink\");\n    return out;\n  }\n\n  get tableKey() {\n    return _native_ObjLink_get_table_key(this[_ObjLink_Symbol]);\n  }\n\n  get objKey() {\n    return _native_ObjLink_get_obj_key(this[_ObjLink_Symbol]);\n  }\n}\nconst _KeyPathMapping_Symbol = Symbol(\"Realm.KeyPathMapping.external_pointer\");\nexport class KeyPathMapping {\n  constructor(ptr) {\n    this[_KeyPathMapping_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof KeyPathMapping)) throw new TypeError(\"Expected a KeyPathMapping\");\n    const out = self[_KeyPathMapping_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed KeyPathMapping\");\n    return out;\n  }\n}\nconst _Query_Symbol = Symbol(\"Realm.Query.external_pointer\");\nconst _native_Query_get_table = nativeModule.Query_get_table;\nconst _native_Query_get_description = nativeModule.Query_get_description;\nexport class Query {\n  constructor(ptr) {\n    this[_Query_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof Query)) throw new TypeError(\"Expected a Query\");\n    const out = self[_Query_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Query\");\n    return out;\n  }\n\n  get table() {\n    return _native_Query_get_table(this[_Query_Symbol]);\n  }\n\n  get description() {\n    return _native_Query_get_description(this[_Query_Symbol]);\n  }\n}\nconst _SortDescriptor_Symbol = Symbol(\"Realm.SortDescriptor.external_pointer\");\nexport class SortDescriptor {\n  constructor(ptr) {\n    this[_SortDescriptor_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof SortDescriptor)) throw new TypeError(\"Expected a SortDescriptor\");\n    const out = self[_SortDescriptor_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed SortDescriptor\");\n    return out;\n  }\n}\nconst _TableView_Symbol = Symbol(\"Realm.TableView.external_pointer\");\nexport class TableView {\n  constructor(ptr) {\n    this[_TableView_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof TableView)) throw new TypeError(\"Expected a TableView\");\n    const out = self[_TableView_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed TableView\");\n    return out;\n  }\n}\nconst _Results_Symbol = Symbol(\"Realm.Results.external_pointer\");\nconst _native_Results_size = nativeModule.Results_size;\nconst _native_Results_index_of = nativeModule.Results_index_of;\nconst _native_Results_index_of_obj = nativeModule.Results_index_of_obj;\nconst _native_Results_get_obj = nativeModule.Results_get_obj;\nconst _native_Results_get_any = nativeModule.Results_get_any;\nconst _native_Results_sort_by_names = nativeModule.Results_sort_by_names;\nconst _native_Results_snapshot = nativeModule.Results_snapshot;\nconst _native_Results_max = nativeModule.Results_max;\nconst _native_Results_min = nativeModule.Results_min;\nconst _native_Results_average = nativeModule.Results_average;\nconst _native_Results_sum = nativeModule.Results_sum;\nconst _native_Results_clear = nativeModule.Results_clear;\nconst _native_Results_add_notification_callback = nativeModule.Results_add_notification_callback;\nconst _native_Results_from_table = nativeModule.Results_from_table;\nconst _native_Results_from_table_view = nativeModule.Results_from_table_view;\nconst _native_Results_is_valid = nativeModule.Results_is_valid;\nconst _native_Results_get_query = nativeModule.Results_get_query;\nconst _native_Results_get_object_type = nativeModule.Results_get_object_type;\nconst _native_Results_get_type = nativeModule.Results_get_type;\nexport class Results {\n  constructor(ptr) {\n    this[_Results_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof Results)) throw new TypeError(\"Expected a Results\");\n    const out = self[_Results_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Results\");\n    return out;\n  }\n\n  size() {\n    return _native_Results_size(this[_Results_Symbol]);\n  }\n\n  indexOf(value) {\n    return _native_Results_index_of(this[_Results_Symbol], value);\n  }\n\n  indexOfObj(obj) {\n    return _native_Results_index_of_obj(this[_Results_Symbol], obj);\n  }\n\n  getObj(index) {\n    return _native_Results_get_obj(this[_Results_Symbol], index);\n  }\n\n  getAny(index) {\n    return _native_Results_get_any(this[_Results_Symbol], index);\n  }\n\n  sortByNames(order) {\n    return _native_Results_sort_by_names(this[_Results_Symbol], order);\n  }\n\n  snapshot() {\n    return _native_Results_snapshot(this[_Results_Symbol]);\n  }\n\n  max(column) {\n    return _native_Results_max(this[_Results_Symbol], column);\n  }\n\n  min(column) {\n    return _native_Results_min(this[_Results_Symbol], column);\n  }\n\n  average(column) {\n    return _native_Results_average(this[_Results_Symbol], column);\n  }\n\n  sum(column) {\n    return _native_Results_sum(this[_Results_Symbol], column);\n  }\n\n  clear() {\n    return _native_Results_clear(this[_Results_Symbol]);\n  }\n\n  addNotificationCallback(cb, keyPaths) {\n    return _native_Results_add_notification_callback(this[_Results_Symbol], cb, keyPaths);\n  }\n  static fromTable(r, table) {\n    return _native_Results_from_table(r, table);\n  }\n  static fromTableView(r, table) {\n    return _native_Results_from_table_view(r, table);\n  }\n\n  get isValid() {\n    return _native_Results_is_valid(this[_Results_Symbol]);\n  }\n\n  get query() {\n    return _native_Results_get_query(this[_Results_Symbol]);\n  }\n\n  get objectType() {\n    return _native_Results_get_object_type(this[_Results_Symbol]);\n  }\n\n  get type() {\n    return _native_Results_get_type(this[_Results_Symbol]);\n  }\n}\nconst _Realm_Symbol = Symbol(\"Realm.Realm.external_pointer\");\nconst _native_Realm_begin_transaction = nativeModule.Realm_begin_transaction;\nconst _native_Realm_commit_transaction = nativeModule.Realm_commit_transaction;\nconst _native_Realm_cancel_transaction = nativeModule.Realm_cancel_transaction;\nconst _native_Realm_update_schema = nativeModule.Realm_update_schema;\nconst _native_Realm_compact = nativeModule.Realm_compact;\nconst _native_Realm_convert = nativeModule.Realm_convert;\nconst _native_Realm_verify_open = nativeModule.Realm_verify_open;\nconst _native_Realm_close = nativeModule.Realm_close;\nconst _native_Realm_get_shared_realm = nativeModule.Realm_get_shared_realm;\nconst _native_Realm_get_synchronized_realm = nativeModule.Realm_get_synchronized_realm;\nconst _native_Realm_get_schema_version = nativeModule.Realm_get_schema_version;\nconst _native_Realm_config = nativeModule.Realm_config;\nconst _native_Realm_schema = nativeModule.Realm_schema;\nconst _native_Realm_schema_version = nativeModule.Realm_schema_version;\nconst _native_Realm_is_in_transaction = nativeModule.Realm_is_in_transaction;\nconst _native_Realm_is_in_migration = nativeModule.Realm_is_in_migration;\nconst _native_Realm_is_closed = nativeModule.Realm_is_closed;\nconst _native_Realm_sync_session = nativeModule.Realm_sync_session;\nconst _native_Realm_get_latest_subscription_set = nativeModule.Realm_get_latest_subscription_set;\nconst _native_Realm_DOLLAR_addr = nativeModule.Realm_DOLLAR_addr;\nconst _native_Realm_DOLLAR_resetSharedPtr = nativeModule.Realm_DOLLAR_resetSharedPtr;\nexport class Realm {\n  constructor(ptr) {\n    this[_Realm_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof Realm)) throw new TypeError(\"Expected a Realm\");\n    const out = self[_Realm_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Realm\");\n    return out;\n  }\n\n  beginTransaction() {\n    return _native_Realm_begin_transaction(this[_Realm_Symbol]);\n  }\n\n  commitTransaction() {\n    return _native_Realm_commit_transaction(this[_Realm_Symbol]);\n  }\n\n  cancelTransaction() {\n    return _native_Realm_cancel_transaction(this[_Realm_Symbol]);\n  }\n\n  updateSchema(schema, version, migration_function, initialization_function, in_transaction) {\n    return _native_Realm_update_schema(\n      this[_Realm_Symbol],\n      schema,\n      version,\n      migration_function,\n      initialization_function,\n      in_transaction,\n    );\n  }\n\n  compact() {\n    return _native_Realm_compact(this[_Realm_Symbol]);\n  }\n\n  convert(config) {\n    return _native_Realm_convert(this[_Realm_Symbol], config);\n  }\n\n  verifyOpen() {\n    return _native_Realm_verify_open(this[_Realm_Symbol]);\n  }\n\n  close() {\n    return _native_Realm_close(this[_Realm_Symbol]);\n  }\n  static getSharedRealm(config) {\n    return _native_Realm_get_shared_realm(config);\n  }\n  static getSynchronizedRealm(config) {\n    return _native_Realm_get_synchronized_realm(config);\n  }\n  static getSchemaVersion(config) {\n    return _native_Realm_get_schema_version(config);\n  }\n\n  get config() {\n    return _native_Realm_config(this[_Realm_Symbol]);\n  }\n\n  get schema() {\n    return _native_Realm_schema(this[_Realm_Symbol]);\n  }\n\n  get schemaVersion() {\n    return _native_Realm_schema_version(this[_Realm_Symbol]);\n  }\n\n  get isInTransaction() {\n    return _native_Realm_is_in_transaction(this[_Realm_Symbol]);\n  }\n\n  get isInMigration() {\n    return _native_Realm_is_in_migration(this[_Realm_Symbol]);\n  }\n\n  get isClosed() {\n    return _native_Realm_is_closed(this[_Realm_Symbol]);\n  }\n\n  get syncSession() {\n    return _native_Realm_sync_session(this[_Realm_Symbol]);\n  }\n\n  get latestSubscriptionSet() {\n    return _native_Realm_get_latest_subscription_set(this[_Realm_Symbol]);\n  }\n\n  get $addr() {\n    return _native_Realm_DOLLAR_addr(this[_Realm_Symbol]);\n  }\n\n  $resetSharedPtr() {\n    return _native_Realm_DOLLAR_resetSharedPtr(this[_Realm_Symbol]);\n  }\n}\nconst _RealmCoordinator_Symbol = Symbol(\"Realm.RealmCoordinator.external_pointer\");\nconst _native_RealmCoordinator_clear_all_caches = nativeModule.RealmCoordinator_clear_all_caches;\nexport class RealmCoordinator {\n  constructor(ptr) {\n    this[_RealmCoordinator_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof RealmCoordinator)) throw new TypeError(\"Expected a RealmCoordinator\");\n    const out = self[_RealmCoordinator_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed RealmCoordinator\");\n    return out;\n  }\n\n  static clearAllCaches() {\n    return _native_RealmCoordinator_clear_all_caches();\n  }\n}\nconst _ObjectNotifier_Symbol = Symbol(\"Realm.ObjectNotifier.external_pointer\");\nconst _native_ObjectNotifier_add_callback = nativeModule.ObjectNotifier_add_callback;\nexport class ObjectNotifier {\n  constructor(ptr) {\n    this[_ObjectNotifier_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof ObjectNotifier)) throw new TypeError(\"Expected a ObjectNotifier\");\n    const out = self[_ObjectNotifier_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed ObjectNotifier\");\n    return out;\n  }\n\n  addCallback(cb, keyPaths) {\n    return _native_ObjectNotifier_add_callback(this[_ObjectNotifier_Symbol], cb, keyPaths);\n  }\n}\nconst _NotificationToken_Symbol = Symbol(\"Realm.NotificationToken.external_pointer\");\nconst _native_NotificationToken_unregister = nativeModule.NotificationToken_unregister;\nconst _native_NotificationToken_for_object = nativeModule.NotificationToken_for_object;\nexport class NotificationToken {\n  constructor(ptr) {\n    this[_NotificationToken_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof NotificationToken)) throw new TypeError(\"Expected a NotificationToken\");\n    const out = self[_NotificationToken_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed NotificationToken\");\n    return out;\n  }\n\n  unregister() {\n    return _native_NotificationToken_unregister(this[_NotificationToken_Symbol]);\n  }\n  static forObject(notifier, token) {\n    return _native_NotificationToken_for_object(notifier, token);\n  }\n}\nconst _IndexSet_Symbol = Symbol(\"Realm.IndexSet.external_pointer\");\nconst _native_IndexSet_Symbol_iterator = nativeModule.IndexSet_Symbol_iterator;\nexport class IndexSet {\n  constructor(ptr) {\n    this[_IndexSet_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof IndexSet)) throw new TypeError(\"Expected a IndexSet\");\n    const out = self[_IndexSet_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed IndexSet\");\n    return out;\n  }\n\n  [Symbol.iterator]() {\n    return _native_IndexSet_Symbol_iterator(this[_IndexSet_Symbol]);\n  }\n}\nconst _Collection_Symbol = Symbol(\"Realm.Collection.external_pointer\");\nconst _native_Collection_get_any = nativeModule.Collection_get_any;\nconst _native_Collection_as_results = nativeModule.Collection_as_results;\nconst _native_Collection_get_object_schema = nativeModule.Collection_get_object_schema;\nconst _native_Collection_size = nativeModule.Collection_size;\nconst _native_Collection_is_valid = nativeModule.Collection_is_valid;\nexport class Collection {\n  constructor(ptr) {\n    this[_Collection_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof Collection)) throw new TypeError(\"Expected a Collection\");\n    const out = self[_Collection_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Collection\");\n    return out;\n  }\n\n  getAny(ndx) {\n    return _native_Collection_get_any(this[_Collection_Symbol], ndx);\n  }\n\n  asResults() {\n    return _native_Collection_as_results(this[_Collection_Symbol]);\n  }\n\n  get objectSchema() {\n    return _native_Collection_get_object_schema(this[_Collection_Symbol]);\n  }\n\n  get size() {\n    return _native_Collection_size(this[_Collection_Symbol]);\n  }\n\n  get isValid() {\n    return _native_Collection_is_valid(this[_Collection_Symbol]);\n  }\n}\nconst _native_List_move = nativeModule.List_move;\nconst _native_List_remove = nativeModule.List_remove;\nconst _native_List_remove_all = nativeModule.List_remove_all;\nconst _native_List_swap = nativeModule.List_swap;\nconst _native_List_delete_all = nativeModule.List_delete_all;\nconst _native_List_insert_any = nativeModule.List_insert_any;\nconst _native_List_insert_embedded = nativeModule.List_insert_embedded;\nconst _native_List_set_any = nativeModule.List_set_any;\nconst _native_List_make = nativeModule.List_make;\nexport class List extends Collection {\n  static _extract(self) {\n    if (!(self instanceof List)) throw new TypeError(\"Expected a List\");\n    const out = self[_Collection_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed List\");\n    return out;\n  }\n\n  move(source_ndx, dest_ndx) {\n    return _native_List_move(this[_Collection_Symbol], source_ndx, dest_ndx);\n  }\n\n  remove(ndx) {\n    return _native_List_remove(this[_Collection_Symbol], ndx);\n  }\n\n  removeAll() {\n    return _native_List_remove_all(this[_Collection_Symbol]);\n  }\n\n  swap(ndx1, ndx2) {\n    return _native_List_swap(this[_Collection_Symbol], ndx1, ndx2);\n  }\n\n  deleteAll() {\n    return _native_List_delete_all(this[_Collection_Symbol]);\n  }\n\n  insertAny(list_ndx, value) {\n    return _native_List_insert_any(this[_Collection_Symbol], list_ndx, value);\n  }\n\n  insertEmbedded(ndx) {\n    return _native_List_insert_embedded(this[_Collection_Symbol], ndx);\n  }\n\n  setAny(list_ndx, value) {\n    return _native_List_set_any(this[_Collection_Symbol], list_ndx, value);\n  }\n  static make(r, parent, col) {\n    return _native_List_make(r, parent, col);\n  }\n}\nconst _native_Set_insert_any = nativeModule.Set_insert_any;\nconst _native_Set_remove_any = nativeModule.Set_remove_any;\nconst _native_Set_remove_all = nativeModule.Set_remove_all;\nconst _native_Set_delete_all = nativeModule.Set_delete_all;\nconst _native_Set_make = nativeModule.Set_make;\nexport class Set extends Collection {\n  static _extract(self) {\n    if (!(self instanceof Set)) throw new TypeError(\"Expected a Set\");\n    const out = self[_Collection_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Set\");\n    return out;\n  }\n\n  insertAny(val) {\n    return _native_Set_insert_any(this[_Collection_Symbol], val);\n  }\n\n  removeAny(val) {\n    return _native_Set_remove_any(this[_Collection_Symbol], val);\n  }\n\n  removeAll() {\n    return _native_Set_remove_all(this[_Collection_Symbol]);\n  }\n\n  deleteAll() {\n    return _native_Set_delete_all(this[_Collection_Symbol]);\n  }\n  static make(r, parent, col) {\n    return _native_Set_make(r, parent, col);\n  }\n}\nconst _native_Dictionary_contains = nativeModule.Dictionary_contains;\nconst _native_Dictionary_add_key_based_notification_callback =\n  nativeModule.Dictionary_add_key_based_notification_callback;\nconst _native_Dictionary_insert_any = nativeModule.Dictionary_insert_any;\nconst _native_Dictionary_insert_embedded = nativeModule.Dictionary_insert_embedded;\nconst _native_Dictionary_try_get_any = nativeModule.Dictionary_try_get_any;\nconst _native_Dictionary_remove_all = nativeModule.Dictionary_remove_all;\nconst _native_Dictionary_try_erase = nativeModule.Dictionary_try_erase;\nconst _native_Dictionary_make = nativeModule.Dictionary_make;\nconst _native_Dictionary_get_keys = nativeModule.Dictionary_get_keys;\nconst _native_Dictionary_get_values = nativeModule.Dictionary_get_values;\nconst _native_Dictionary_Symbol_iterator = nativeModule.Dictionary_Symbol_iterator;\nexport class Dictionary extends Collection {\n  static _extract(self) {\n    if (!(self instanceof Dictionary)) throw new TypeError(\"Expected a Dictionary\");\n    const out = self[_Collection_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Dictionary\");\n    return out;\n  }\n\n  contains(key) {\n    return _native_Dictionary_contains(this[_Collection_Symbol], key);\n  }\n\n  addKeyBasedNotificationCallback(cb, keyPaths) {\n    return _native_Dictionary_add_key_based_notification_callback(this[_Collection_Symbol], cb, keyPaths);\n  }\n\n  insertAny(key, value) {\n    return _native_Dictionary_insert_any(this[_Collection_Symbol], key, value);\n  }\n\n  insertEmbedded(key) {\n    return _native_Dictionary_insert_embedded(this[_Collection_Symbol], key);\n  }\n\n  tryGetAny(key) {\n    return _native_Dictionary_try_get_any(this[_Collection_Symbol], key);\n  }\n\n  removeAll() {\n    return _native_Dictionary_remove_all(this[_Collection_Symbol]);\n  }\n\n  tryErase(key) {\n    return _native_Dictionary_try_erase(this[_Collection_Symbol], key);\n  }\n  static make(r, parent, col) {\n    return _native_Dictionary_make(r, parent, col);\n  }\n\n  get keys() {\n    return _native_Dictionary_get_keys(this[_Collection_Symbol]);\n  }\n\n  get values() {\n    return _native_Dictionary_get_values(this[_Collection_Symbol]);\n  }\n  [Symbol.iterator]() {\n    return _native_Dictionary_Symbol_iterator(this[_Collection_Symbol]);\n  }\n}\nconst _GoogleAuthCode_Symbol = Symbol(\"Realm.GoogleAuthCode.external_pointer\");\nconst _native_GoogleAuthCode_make = nativeModule.GoogleAuthCode_make;\nexport class GoogleAuthCode {\n  constructor(ptr) {\n    this[_GoogleAuthCode_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof GoogleAuthCode)) throw new TypeError(\"Expected a GoogleAuthCode\");\n    const out = self[_GoogleAuthCode_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed GoogleAuthCode\");\n    return out;\n  }\n\n  static make(code) {\n    return _native_GoogleAuthCode_make(code);\n  }\n}\nconst _GoogleIdToken_Symbol = Symbol(\"Realm.GoogleIdToken.external_pointer\");\nconst _native_GoogleIdToken_make = nativeModule.GoogleIdToken_make;\nexport class GoogleIdToken {\n  constructor(ptr) {\n    this[_GoogleIdToken_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof GoogleIdToken)) throw new TypeError(\"Expected a GoogleIdToken\");\n    const out = self[_GoogleIdToken_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed GoogleIdToken\");\n    return out;\n  }\n\n  static make(token) {\n    return _native_GoogleIdToken_make(token);\n  }\n}\nconst _AppCredentials_Symbol = Symbol(\"Realm.AppCredentials.external_pointer\");\nconst _native_AppCredentials_facebook = nativeModule.AppCredentials_facebook;\nconst _native_AppCredentials_anonymous = nativeModule.AppCredentials_anonymous;\nconst _native_AppCredentials_apple = nativeModule.AppCredentials_apple;\nconst _native_AppCredentials_google_auth = nativeModule.AppCredentials_google_auth;\nconst _native_AppCredentials_google_id = nativeModule.AppCredentials_google_id;\nconst _native_AppCredentials_custom = nativeModule.AppCredentials_custom;\nconst _native_AppCredentials_username_password = nativeModule.AppCredentials_username_password;\nconst _native_AppCredentials_function = nativeModule.AppCredentials_function;\nconst _native_AppCredentials_api_key = nativeModule.AppCredentials_api_key;\nexport class AppCredentials {\n  constructor(ptr) {\n    this[_AppCredentials_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof AppCredentials)) throw new TypeError(\"Expected a AppCredentials\");\n    const out = self[_AppCredentials_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed AppCredentials\");\n    return out;\n  }\n\n  static facebook(access_token) {\n    return _native_AppCredentials_facebook(access_token);\n  }\n  static anonymous(reuse_anonymous_credentials) {\n    return _native_AppCredentials_anonymous(reuse_anonymous_credentials);\n  }\n  static apple(id_token) {\n    return _native_AppCredentials_apple(id_token);\n  }\n  static googleAuth(id_token) {\n    return _native_AppCredentials_google_auth(id_token);\n  }\n  static googleId(id_token) {\n    return _native_AppCredentials_google_id(id_token);\n  }\n  static custom(token) {\n    return _native_AppCredentials_custom(token);\n  }\n  static usernamePassword(username, password) {\n    return _native_AppCredentials_username_password(username, password);\n  }\n  static function(serialized_payload) {\n    return _native_AppCredentials_function(serialized_payload);\n  }\n  static apiKey(api_key) {\n    return _native_AppCredentials_api_key(api_key);\n  }\n}\nconst _SyncUserSubscriptionToken_Symbol = Symbol(\"Realm.SyncUserSubscriptionToken.external_pointer\");\nexport class SyncUserSubscriptionToken {\n  constructor(ptr) {\n    this[_SyncUserSubscriptionToken_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof SyncUserSubscriptionToken)) throw new TypeError(\"Expected a SyncUserSubscriptionToken\");\n    const out = self[_SyncUserSubscriptionToken_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed SyncUserSubscriptionToken\");\n    return out;\n  }\n}\nconst _SyncUser_Symbol = Symbol(\"Realm.SyncUser.external_pointer\");\nconst _native_SyncUser_session_for_on_disk_path = nativeModule.SyncUser_session_for_on_disk_path;\nconst _native_SyncUser_subscribe = nativeModule.SyncUser_subscribe;\nconst _native_SyncUser_unsubscribe = nativeModule.SyncUser_unsubscribe;\nconst _native_SyncUser_all_sessions = nativeModule.SyncUser_all_sessions;\nconst _native_SyncUser_is_logged_in = nativeModule.SyncUser_is_logged_in;\nconst _native_SyncUser_identity = nativeModule.SyncUser_identity;\nconst _native_SyncUser_provider_type = nativeModule.SyncUser_provider_type;\nconst _native_SyncUser_access_token = nativeModule.SyncUser_access_token;\nconst _native_SyncUser_refresh_token = nativeModule.SyncUser_refresh_token;\nconst _native_SyncUser_device_id = nativeModule.SyncUser_device_id;\nconst _native_SyncUser_user_profile = nativeModule.SyncUser_user_profile;\nconst _native_SyncUser_identities = nativeModule.SyncUser_identities;\nconst _native_SyncUser_custom_data = nativeModule.SyncUser_custom_data;\nconst _native_SyncUser_sync_manager = nativeModule.SyncUser_sync_manager;\nconst _native_SyncUser_state = nativeModule.SyncUser_state;\nexport class SyncUser {\n  constructor(ptr) {\n    this[_SyncUser_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof SyncUser)) throw new TypeError(\"Expected a SyncUser\");\n    const out = self[_SyncUser_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed SyncUser\");\n    return out;\n  }\n\n  sessionForOnDiskPath(path) {\n    return _native_SyncUser_session_for_on_disk_path(this[_SyncUser_Symbol], path);\n  }\n\n  subscribe(observer) {\n    return _native_SyncUser_subscribe(this[_SyncUser_Symbol], observer);\n  }\n\n  unsubscribe(token) {\n    return _native_SyncUser_unsubscribe(this[_SyncUser_Symbol], token);\n  }\n\n  get allSessions() {\n    return _native_SyncUser_all_sessions(this[_SyncUser_Symbol]);\n  }\n\n  get isLoggedIn() {\n    return _native_SyncUser_is_logged_in(this[_SyncUser_Symbol]);\n  }\n\n  get identity() {\n    return _native_SyncUser_identity(this[_SyncUser_Symbol]);\n  }\n\n  get providerType() {\n    return _native_SyncUser_provider_type(this[_SyncUser_Symbol]);\n  }\n\n  get accessToken() {\n    return _native_SyncUser_access_token(this[_SyncUser_Symbol]);\n  }\n\n  get refreshToken() {\n    return _native_SyncUser_refresh_token(this[_SyncUser_Symbol]);\n  }\n\n  get deviceId() {\n    return _native_SyncUser_device_id(this[_SyncUser_Symbol]);\n  }\n\n  get userProfile() {\n    return _native_SyncUser_user_profile(this[_SyncUser_Symbol]);\n  }\n\n  get identities() {\n    return _native_SyncUser_identities(this[_SyncUser_Symbol]);\n  }\n\n  get customData() {\n    return _native_SyncUser_custom_data(this[_SyncUser_Symbol]);\n  }\n\n  get syncManager() {\n    return _native_SyncUser_sync_manager(this[_SyncUser_Symbol]);\n  }\n\n  get state() {\n    return _native_SyncUser_state(this[_SyncUser_Symbol]);\n  }\n}\nconst _UserProfile_Symbol = Symbol(\"Realm.UserProfile.external_pointer\");\nconst _native_UserProfile_data = nativeModule.UserProfile_data;\nexport class UserProfile {\n  constructor(ptr) {\n    this[_UserProfile_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof UserProfile)) throw new TypeError(\"Expected a UserProfile\");\n    const out = self[_UserProfile_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed UserProfile\");\n    return out;\n  }\n\n  data() {\n    return _native_UserProfile_data(this[_UserProfile_Symbol]);\n  }\n}\nconst _AppSubscriptionToken_Symbol = Symbol(\"Realm.AppSubscriptionToken.external_pointer\");\nexport class AppSubscriptionToken {\n  constructor(ptr) {\n    this[_AppSubscriptionToken_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof AppSubscriptionToken)) throw new TypeError(\"Expected a AppSubscriptionToken\");\n    const out = self[_AppSubscriptionToken_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed AppSubscriptionToken\");\n    return out;\n  }\n}\nconst _App_Symbol = Symbol(\"Realm.App.external_pointer\");\nconst _native_App_log_in_with_credentials = nativeModule.App_log_in_with_credentials;\nconst _native_App_log_out_user = nativeModule.App_log_out_user;\nconst _native_App_refresh_custom_data = nativeModule.App_refresh_custom_data;\nconst _native_App_link_user = nativeModule.App_link_user;\nconst _native_App_switch_user = nativeModule.App_switch_user;\nconst _native_App_remove_user = nativeModule.App_remove_user;\nconst _native_App_delete_user = nativeModule.App_delete_user;\nconst _native_App_usernamePasswordProviderClient = nativeModule.App_usernamePasswordProviderClient;\nconst _native_App_userAPIKeyProviderClient = nativeModule.App_userAPIKeyProviderClient;\nconst _native_App_push_notification_client = nativeModule.App_push_notification_client;\nconst _native_App_subscribe = nativeModule.App_subscribe;\nconst _native_App_unsubscribe = nativeModule.App_unsubscribe;\nconst _native_App_call_function = nativeModule.App_call_function;\nconst _native_App_make_streaming_request = nativeModule.App_make_streaming_request;\nconst _native_App_get_uncached_app = nativeModule.App_get_uncached_app;\nconst _native_App_clear_cached_apps = nativeModule.App_clear_cached_apps;\nconst _native_App_config = nativeModule.App_config;\nconst _native_App_current_user = nativeModule.App_current_user;\nconst _native_App_all_users = nativeModule.App_all_users;\nconst _native_App_sync_manager = nativeModule.App_sync_manager;\nexport class App {\n  constructor(ptr) {\n    this[_App_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof App)) throw new TypeError(\"Expected a App\");\n    const out = self[_App_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed App\");\n    return out;\n  }\n\n  logInWithCredentials(credentials) {\n    return _promisify(false, (_cb) => _native_App_log_in_with_credentials(this[_App_Symbol], credentials, _cb));\n  }\n\n  logOutUser(user) {\n    return _promisify(false, (_cb) => _native_App_log_out_user(this[_App_Symbol], user, _cb));\n  }\n\n  refreshCustomData(user) {\n    return _promisify(false, (_cb) => _native_App_refresh_custom_data(this[_App_Symbol], user, _cb));\n  }\n\n  linkUser(user, credentials) {\n    return _promisify(false, (_cb) => _native_App_link_user(this[_App_Symbol], user, credentials, _cb));\n  }\n\n  switchUser(user) {\n    return _native_App_switch_user(this[_App_Symbol], user);\n  }\n\n  removeUser(user) {\n    return _promisify(false, (_cb) => _native_App_remove_user(this[_App_Symbol], user, _cb));\n  }\n\n  deleteUser(user) {\n    return _promisify(false, (_cb) => _native_App_delete_user(this[_App_Symbol], user, _cb));\n  }\n\n  usernamePasswordProviderClient() {\n    return _native_App_usernamePasswordProviderClient(this[_App_Symbol]);\n  }\n\n  userApiKeyProviderClient() {\n    return _native_App_userAPIKeyProviderClient(this[_App_Symbol]);\n  }\n\n  pushNotificationClient(service_name) {\n    return _native_App_push_notification_client(this[_App_Symbol], service_name);\n  }\n\n  subscribe(observer) {\n    return _native_App_subscribe(this[_App_Symbol], observer);\n  }\n\n  unsubscribe(token) {\n    return _native_App_unsubscribe(this[_App_Symbol], token);\n  }\n\n  callFunction(user, name, args, service_name) {\n    return _promisify(true, (_cb) => _native_App_call_function(this[_App_Symbol], user, name, args, service_name, _cb));\n  }\n\n  makeStreamingRequest(user, name, args, service_name) {\n    return _native_App_make_streaming_request(this[_App_Symbol], user, name, args, service_name);\n  }\n  static getUncachedApp(config, sync_client_config) {\n    return _native_App_get_uncached_app(config, sync_client_config);\n  }\n  static clearCachedApps() {\n    return _native_App_clear_cached_apps();\n  }\n\n  get config() {\n    return _native_App_config(this[_App_Symbol]);\n  }\n\n  get currentUser() {\n    return _native_App_current_user(this[_App_Symbol]);\n  }\n\n  get allUsers() {\n    return _native_App_all_users(this[_App_Symbol]);\n  }\n\n  get syncManager() {\n    return _native_App_sync_manager(this[_App_Symbol]);\n  }\n}\nconst _WatchStream_Symbol = Symbol(\"Realm.WatchStream.external_pointer\");\nconst _native_WatchStream_next_event = nativeModule.WatchStream_next_event;\nconst _native_WatchStream_make = nativeModule.WatchStream_make;\nconst _native_WatchStream_state = nativeModule.WatchStream_state;\nconst _native_WatchStream_error = nativeModule.WatchStream_error;\nexport class WatchStream {\n  constructor(ptr) {\n    this[_WatchStream_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof WatchStream)) throw new TypeError(\"Expected a WatchStream\");\n    const out = self[_WatchStream_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed WatchStream\");\n    return out;\n  }\n\n  nextEvent() {\n    return _native_WatchStream_next_event(this[_WatchStream_Symbol]);\n  }\n  static make() {\n    return _native_WatchStream_make();\n  }\n\n  get state() {\n    return _native_WatchStream_state(this[_WatchStream_Symbol]);\n  }\n\n  get error() {\n    return _native_WatchStream_error(this[_WatchStream_Symbol]);\n  }\n}\nconst _PushClient_Symbol = Symbol(\"Realm.PushClient.external_pointer\");\nconst _native_PushClient_register_device = nativeModule.PushClient_register_device;\nconst _native_PushClient_deregister_device = nativeModule.PushClient_deregister_device;\nexport class PushClient {\n  constructor(ptr) {\n    this[_PushClient_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof PushClient)) throw new TypeError(\"Expected a PushClient\");\n    const out = self[_PushClient_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed PushClient\");\n    return out;\n  }\n\n  registerDevice(registration_token, sync_user) {\n    return _promisify(false, (_cb) =>\n      _native_PushClient_register_device(this[_PushClient_Symbol], registration_token, sync_user, _cb),\n    );\n  }\n\n  deregisterDevice(sync_user) {\n    return _promisify(false, (_cb) => _native_PushClient_deregister_device(this[_PushClient_Symbol], sync_user, _cb));\n  }\n}\nconst _UsernamePasswordProviderClient_Symbol = Symbol(\"Realm.UsernamePasswordProviderClient.external_pointer\");\nconst _native_UsernamePasswordProviderClient_register_email =\n  nativeModule.UsernamePasswordProviderClient_register_email;\nconst _native_UsernamePasswordProviderClient_retry_custom_confirmation =\n  nativeModule.UsernamePasswordProviderClient_retry_custom_confirmation;\nconst _native_UsernamePasswordProviderClient_confirm_user = nativeModule.UsernamePasswordProviderClient_confirm_user;\nconst _native_UsernamePasswordProviderClient_resend_confirmation_email =\n  nativeModule.UsernamePasswordProviderClient_resend_confirmation_email;\nconst _native_UsernamePasswordProviderClient_reset_password =\n  nativeModule.UsernamePasswordProviderClient_reset_password;\nconst _native_UsernamePasswordProviderClient_send_reset_password_email =\n  nativeModule.UsernamePasswordProviderClient_send_reset_password_email;\nconst _native_UsernamePasswordProviderClient_call_reset_password_function =\n  nativeModule.UsernamePasswordProviderClient_call_reset_password_function;\nexport class UsernamePasswordProviderClient {\n  constructor(ptr) {\n    this[_UsernamePasswordProviderClient_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof UsernamePasswordProviderClient))\n      throw new TypeError(\"Expected a UsernamePasswordProviderClient\");\n    const out = self[_UsernamePasswordProviderClient_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed UsernamePasswordProviderClient\");\n    return out;\n  }\n\n  registerEmail(email, password) {\n    return _promisify(false, (_cb) =>\n      _native_UsernamePasswordProviderClient_register_email(\n        this[_UsernamePasswordProviderClient_Symbol],\n        email,\n        password,\n        _cb,\n      ),\n    );\n  }\n\n  retryCustomConfirmation(email) {\n    return _promisify(false, (_cb) =>\n      _native_UsernamePasswordProviderClient_retry_custom_confirmation(\n        this[_UsernamePasswordProviderClient_Symbol],\n        email,\n        _cb,\n      ),\n    );\n  }\n\n  confirmUser(token, token_id) {\n    return _promisify(false, (_cb) =>\n      _native_UsernamePasswordProviderClient_confirm_user(\n        this[_UsernamePasswordProviderClient_Symbol],\n        token,\n        token_id,\n        _cb,\n      ),\n    );\n  }\n\n  resendConfirmationEmail(email) {\n    return _promisify(false, (_cb) =>\n      _native_UsernamePasswordProviderClient_resend_confirmation_email(\n        this[_UsernamePasswordProviderClient_Symbol],\n        email,\n        _cb,\n      ),\n    );\n  }\n\n  resetPassword(password, token, token_id) {\n    return _promisify(false, (_cb) =>\n      _native_UsernamePasswordProviderClient_reset_password(\n        this[_UsernamePasswordProviderClient_Symbol],\n        password,\n        token,\n        token_id,\n        _cb,\n      ),\n    );\n  }\n\n  sendResetPasswordEmail(email) {\n    return _promisify(false, (_cb) =>\n      _native_UsernamePasswordProviderClient_send_reset_password_email(\n        this[_UsernamePasswordProviderClient_Symbol],\n        email,\n        _cb,\n      ),\n    );\n  }\n\n  callResetPasswordFunction(email, password, args) {\n    return _promisify(false, (_cb) =>\n      _native_UsernamePasswordProviderClient_call_reset_password_function(\n        this[_UsernamePasswordProviderClient_Symbol],\n        email,\n        password,\n        args,\n        _cb,\n      ),\n    );\n  }\n}\nconst _UserApiKeyProviderClient_Symbol = Symbol(\"Realm.UserApiKeyProviderClient.external_pointer\");\nconst _native_UserAPIKeyProviderClient_create_api_key = nativeModule.UserAPIKeyProviderClient_create_api_key;\nconst _native_UserAPIKeyProviderClient_fetch_api_key = nativeModule.UserAPIKeyProviderClient_fetch_api_key;\nconst _native_UserAPIKeyProviderClient_fetch_api_keys = nativeModule.UserAPIKeyProviderClient_fetch_api_keys;\nconst _native_UserAPIKeyProviderClient_delete_api_key = nativeModule.UserAPIKeyProviderClient_delete_api_key;\nconst _native_UserAPIKeyProviderClient_enable_api_key = nativeModule.UserAPIKeyProviderClient_enable_api_key;\nconst _native_UserAPIKeyProviderClient_disable_api_key = nativeModule.UserAPIKeyProviderClient_disable_api_key;\nexport class UserApiKeyProviderClient {\n  constructor(ptr) {\n    this[_UserApiKeyProviderClient_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof UserApiKeyProviderClient)) throw new TypeError(\"Expected a UserApiKeyProviderClient\");\n    const out = self[_UserApiKeyProviderClient_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed UserApiKeyProviderClient\");\n    return out;\n  }\n\n  createApiKey(name, user) {\n    return _promisify(false, (_cb) =>\n      _native_UserAPIKeyProviderClient_create_api_key(this[_UserApiKeyProviderClient_Symbol], name, user, _cb),\n    );\n  }\n\n  fetchApiKey(id, user) {\n    return _promisify(false, (_cb) =>\n      _native_UserAPIKeyProviderClient_fetch_api_key(this[_UserApiKeyProviderClient_Symbol], id, user, _cb),\n    );\n  }\n\n  fetchApiKeys(user) {\n    return _promisify(false, (_cb) =>\n      _native_UserAPIKeyProviderClient_fetch_api_keys(this[_UserApiKeyProviderClient_Symbol], user, _cb),\n    );\n  }\n\n  deleteApiKey(id, user) {\n    return _promisify(false, (_cb) =>\n      _native_UserAPIKeyProviderClient_delete_api_key(this[_UserApiKeyProviderClient_Symbol], id, user, _cb),\n    );\n  }\n\n  enableApiKey(id, user) {\n    return _promisify(false, (_cb) =>\n      _native_UserAPIKeyProviderClient_enable_api_key(this[_UserApiKeyProviderClient_Symbol], id, user, _cb),\n    );\n  }\n\n  disableApiKey(id, user) {\n    return _promisify(false, (_cb) =>\n      _native_UserAPIKeyProviderClient_disable_api_key(this[_UserApiKeyProviderClient_Symbol], id, user, _cb),\n    );\n  }\n}\nconst _LoggerFactory_Symbol = Symbol(\"Realm.LoggerFactory.external_pointer\");\nexport class LoggerFactory {\n  constructor(ptr) {\n    this[_LoggerFactory_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof LoggerFactory)) throw new TypeError(\"Expected a LoggerFactory\");\n    const out = self[_LoggerFactory_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed LoggerFactory\");\n    return out;\n  }\n}\nconst _SyncManager_Symbol = Symbol(\"Realm.SyncManager.external_pointer\");\nconst _native_SyncManager_immediately_run_file_actions = nativeModule.SyncManager_immediately_run_file_actions;\nconst _native_SyncManager_set_session_multiplexing = nativeModule.SyncManager_set_session_multiplexing;\nconst _native_SyncManager_set_log_level = nativeModule.SyncManager_set_log_level;\nconst _native_SyncManager_set_logger_factory = nativeModule.SyncManager_set_logger_factory;\nconst _native_SyncManager_set_user_agent = nativeModule.SyncManager_set_user_agent;\nconst _native_SyncManager_reconnect = nativeModule.SyncManager_reconnect;\nconst _native_SyncManager_path_for_realm = nativeModule.SyncManager_path_for_realm;\nconst _native_SyncManager_has_existing_sessions = nativeModule.SyncManager_has_existing_sessions;\nexport class SyncManager {\n  constructor(ptr) {\n    this[_SyncManager_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof SyncManager)) throw new TypeError(\"Expected a SyncManager\");\n    const out = self[_SyncManager_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed SyncManager\");\n    return out;\n  }\n\n  immediatelyRunFileActions(original_name) {\n    return _native_SyncManager_immediately_run_file_actions(this[_SyncManager_Symbol], original_name);\n  }\n\n  setSessionMultiplexing(allowed) {\n    return _native_SyncManager_set_session_multiplexing(this[_SyncManager_Symbol], allowed);\n  }\n\n  setLogLevel(level) {\n    return _native_SyncManager_set_log_level(this[_SyncManager_Symbol], level);\n  }\n\n  setLoggerFactory(factory) {\n    return _native_SyncManager_set_logger_factory(this[_SyncManager_Symbol], factory);\n  }\n\n  setUserAgent(user_agent) {\n    return _native_SyncManager_set_user_agent(this[_SyncManager_Symbol], user_agent);\n  }\n\n  reconnect() {\n    return _native_SyncManager_reconnect(this[_SyncManager_Symbol]);\n  }\n\n  pathForRealm(config, custom_file_name) {\n    return _native_SyncManager_path_for_realm(this[_SyncManager_Symbol], config, custom_file_name);\n  }\n\n  get hasExistingSessions() {\n    return _native_SyncManager_has_existing_sessions(this[_SyncManager_Symbol]);\n  }\n}\nconst _ThreadSafeReference_Symbol = Symbol(\"Realm.ThreadSafeReference.external_pointer\");\nexport class ThreadSafeReference {\n  constructor(ptr) {\n    this[_ThreadSafeReference_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof ThreadSafeReference)) throw new TypeError(\"Expected a ThreadSafeReference\");\n    const out = self[_ThreadSafeReference_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed ThreadSafeReference\");\n    return out;\n  }\n}\nconst _AsyncOpenTask_Symbol = Symbol(\"Realm.AsyncOpenTask.external_pointer\");\nconst _native_AsyncOpenTask_start = nativeModule.AsyncOpenTask_start;\nconst _native_AsyncOpenTask_cancel = nativeModule.AsyncOpenTask_cancel;\nconst _native_AsyncOpenTask_register_download_progress_notifier =\n  nativeModule.AsyncOpenTask_register_download_progress_notifier;\nconst _native_AsyncOpenTask_DOLLAR_resetSharedPtr = nativeModule.AsyncOpenTask_DOLLAR_resetSharedPtr;\nexport class AsyncOpenTask {\n  constructor(ptr) {\n    this[_AsyncOpenTask_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof AsyncOpenTask)) throw new TypeError(\"Expected a AsyncOpenTask\");\n    const out = self[_AsyncOpenTask_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed AsyncOpenTask\");\n    return out;\n  }\n\n  start() {\n    return _promisify(false, (_cb) => _native_AsyncOpenTask_start(this[_AsyncOpenTask_Symbol], _cb));\n  }\n\n  cancel() {\n    return _native_AsyncOpenTask_cancel(this[_AsyncOpenTask_Symbol]);\n  }\n\n  registerDownloadProgressNotifier(callback) {\n    return _native_AsyncOpenTask_register_download_progress_notifier(this[_AsyncOpenTask_Symbol], callback);\n  }\n\n  $resetSharedPtr() {\n    return _native_AsyncOpenTask_DOLLAR_resetSharedPtr(this[_AsyncOpenTask_Symbol]);\n  }\n}\nconst _SyncSession_Symbol = Symbol(\"Realm.SyncSession.external_pointer\");\nconst _native_SyncSession_wait_for_upload_completion = nativeModule.SyncSession_wait_for_upload_completion;\nconst _native_SyncSession_wait_for_download_completion = nativeModule.SyncSession_wait_for_download_completion;\nconst _native_SyncSession_register_progress_notifier = nativeModule.SyncSession_register_progress_notifier;\nconst _native_SyncSession_unregister_progress_notifier = nativeModule.SyncSession_unregister_progress_notifier;\nconst _native_SyncSession_register_connection_change_callback =\n  nativeModule.SyncSession_register_connection_change_callback;\nconst _native_SyncSession_unregister_connection_change_callback =\n  nativeModule.SyncSession_unregister_connection_change_callback;\nconst _native_SyncSession_revive_if_needed = nativeModule.SyncSession_revive_if_needed;\nconst _native_SyncSession_force_close = nativeModule.SyncSession_force_close;\nconst _native_SyncSession_state = nativeModule.SyncSession_state;\nconst _native_SyncSession_connection_state = nativeModule.SyncSession_connection_state;\nconst _native_SyncSession_user = nativeModule.SyncSession_user;\nconst _native_SyncSession_config = nativeModule.SyncSession_config;\nconst _native_SyncSession_full_realm_url = nativeModule.SyncSession_full_realm_url;\nconst _native_SyncSession_DOLLAR_resetSharedPtr = nativeModule.SyncSession_DOLLAR_resetSharedPtr;\nexport class SyncSession {\n  constructor(ptr) {\n    this[_SyncSession_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof SyncSession)) throw new TypeError(\"Expected a SyncSession\");\n    const out = self[_SyncSession_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed SyncSession\");\n    return out;\n  }\n\n  waitForUploadCompletion() {\n    return _promisify(false, (_cb) => _native_SyncSession_wait_for_upload_completion(this[_SyncSession_Symbol], _cb));\n  }\n\n  waitForDownloadCompletion() {\n    return _promisify(false, (_cb) => _native_SyncSession_wait_for_download_completion(this[_SyncSession_Symbol], _cb));\n  }\n\n  registerProgressNotifier(callback, direction, is_streaming) {\n    return _native_SyncSession_register_progress_notifier(this[_SyncSession_Symbol], callback, direction, is_streaming);\n  }\n\n  unregisterProgressNotifier(token) {\n    return _native_SyncSession_unregister_progress_notifier(this[_SyncSession_Symbol], token);\n  }\n\n  registerConnectionChangeCallback(callback) {\n    return _native_SyncSession_register_connection_change_callback(this[_SyncSession_Symbol], callback);\n  }\n\n  unregisterConnectionChangeCallback(token) {\n    return _native_SyncSession_unregister_connection_change_callback(this[_SyncSession_Symbol], token);\n  }\n\n  reviveIfNeeded() {\n    return _native_SyncSession_revive_if_needed(this[_SyncSession_Symbol]);\n  }\n\n  forceClose() {\n    return _native_SyncSession_force_close(this[_SyncSession_Symbol]);\n  }\n\n  get state() {\n    return _native_SyncSession_state(this[_SyncSession_Symbol]);\n  }\n\n  get connectionState() {\n    return _native_SyncSession_connection_state(this[_SyncSession_Symbol]);\n  }\n\n  get user() {\n    return _native_SyncSession_user(this[_SyncSession_Symbol]);\n  }\n\n  get config() {\n    return _native_SyncSession_config(this[_SyncSession_Symbol]);\n  }\n\n  get fullRealmUrl() {\n    return _native_SyncSession_full_realm_url(this[_SyncSession_Symbol]);\n  }\n\n  $resetSharedPtr() {\n    return _native_SyncSession_DOLLAR_resetSharedPtr(this[_SyncSession_Symbol]);\n  }\n}\nconst _SslVerifyCallback_Symbol = Symbol(\"Realm.SslVerifyCallback.external_pointer\");\nexport class SslVerifyCallback {\n  constructor(ptr) {\n    this[_SslVerifyCallback_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof SslVerifyCallback)) throw new TypeError(\"Expected a SslVerifyCallback\");\n    const out = self[_SslVerifyCallback_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed SslVerifyCallback\");\n    return out;\n  }\n}\nconst _SyncSubscriptionSet_Symbol = Symbol(\"Realm.SyncSubscriptionSet.external_pointer\");\nconst _native_SyncSubscriptionSet_make_mutable_copy = nativeModule.SyncSubscriptionSet_make_mutable_copy;\nconst _native_SyncSubscriptionSet_get_state_change_notification =\n  nativeModule.SyncSubscriptionSet_get_state_change_notification;\nconst _native_SyncSubscriptionSet_find_by_name = nativeModule.SyncSubscriptionSet_find_by_name;\nconst _native_SyncSubscriptionSet_find_by_query = nativeModule.SyncSubscriptionSet_find_by_query;\nconst _native_SyncSubscriptionSet_refresh = nativeModule.SyncSubscriptionSet_refresh;\nconst _native_SyncSubscriptionSet_version = nativeModule.SyncSubscriptionSet_version;\nconst _native_SyncSubscriptionSet_state = nativeModule.SyncSubscriptionSet_state;\nconst _native_SyncSubscriptionSet_error_str = nativeModule.SyncSubscriptionSet_error_str;\nconst _native_SyncSubscriptionSet_size = nativeModule.SyncSubscriptionSet_size;\nconst _native_SyncSubscriptionSet_Symbol_iterator = nativeModule.SyncSubscriptionSet_Symbol_iterator;\nexport class SyncSubscriptionSet {\n  constructor(ptr) {\n    this[_SyncSubscriptionSet_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof SyncSubscriptionSet)) throw new TypeError(\"Expected a SyncSubscriptionSet\");\n    const out = self[_SyncSubscriptionSet_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed SyncSubscriptionSet\");\n    return out;\n  }\n\n  makeMutableCopy() {\n    return _native_SyncSubscriptionSet_make_mutable_copy(this[_SyncSubscriptionSet_Symbol]);\n  }\n\n  getStateChangeNotification(notify_when) {\n    return _promisify(false, (_cb) =>\n      _native_SyncSubscriptionSet_get_state_change_notification(this[_SyncSubscriptionSet_Symbol], notify_when, _cb),\n    );\n  }\n\n  findByName(name) {\n    return _native_SyncSubscriptionSet_find_by_name(this[_SyncSubscriptionSet_Symbol], name);\n  }\n\n  findByQuery(query) {\n    return _native_SyncSubscriptionSet_find_by_query(this[_SyncSubscriptionSet_Symbol], query);\n  }\n\n  refresh() {\n    return _native_SyncSubscriptionSet_refresh(this[_SyncSubscriptionSet_Symbol]);\n  }\n\n  get version() {\n    return _native_SyncSubscriptionSet_version(this[_SyncSubscriptionSet_Symbol]);\n  }\n\n  get state() {\n    return _native_SyncSubscriptionSet_state(this[_SyncSubscriptionSet_Symbol]);\n  }\n\n  get errorStr() {\n    return _native_SyncSubscriptionSet_error_str(this[_SyncSubscriptionSet_Symbol]);\n  }\n\n  get size() {\n    return _native_SyncSubscriptionSet_size(this[_SyncSubscriptionSet_Symbol]);\n  }\n  [Symbol.iterator]() {\n    return _native_SyncSubscriptionSet_Symbol_iterator(this[_SyncSubscriptionSet_Symbol]);\n  }\n}\nconst _native_MutableSyncSubscriptionSet_clear = nativeModule.MutableSyncSubscriptionSet_clear;\nconst _native_MutableSyncSubscriptionSet_insert_or_assign_by_name =\n  nativeModule.MutableSyncSubscriptionSet_insert_or_assign_by_name;\nconst _native_MutableSyncSubscriptionSet_insert_or_assign_by_query =\n  nativeModule.MutableSyncSubscriptionSet_insert_or_assign_by_query;\nconst _native_MutableSyncSubscriptionSet_erase_by_name = nativeModule.MutableSyncSubscriptionSet_erase_by_name;\nconst _native_MutableSyncSubscriptionSet_erase_by_query = nativeModule.MutableSyncSubscriptionSet_erase_by_query;\nconst _native_MutableSyncSubscriptionSet_commit = nativeModule.MutableSyncSubscriptionSet_commit;\nexport class MutableSyncSubscriptionSet extends SyncSubscriptionSet {\n  static _extract(self) {\n    if (!(self instanceof MutableSyncSubscriptionSet)) throw new TypeError(\"Expected a MutableSyncSubscriptionSet\");\n    const out = self[_SyncSubscriptionSet_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed MutableSyncSubscriptionSet\");\n    return out;\n  }\n\n  clear() {\n    return _native_MutableSyncSubscriptionSet_clear(this[_SyncSubscriptionSet_Symbol]);\n  }\n\n  insertOrAssignByName(name, query) {\n    return _native_MutableSyncSubscriptionSet_insert_or_assign_by_name(this[_SyncSubscriptionSet_Symbol], name, query);\n  }\n\n  insertOrAssignByQuery(query) {\n    return _native_MutableSyncSubscriptionSet_insert_or_assign_by_query(this[_SyncSubscriptionSet_Symbol], query);\n  }\n\n  eraseByName(name) {\n    return _native_MutableSyncSubscriptionSet_erase_by_name(this[_SyncSubscriptionSet_Symbol], name);\n  }\n\n  eraseByQuery(query) {\n    return _native_MutableSyncSubscriptionSet_erase_by_query(this[_SyncSubscriptionSet_Symbol], query);\n  }\n\n  commit() {\n    return _native_MutableSyncSubscriptionSet_commit(this[_SyncSubscriptionSet_Symbol]);\n  }\n}\nconst _Scheduler_Symbol = Symbol(\"Realm.Scheduler.external_pointer\");\nexport class Scheduler {\n  constructor(ptr) {\n    this[_Scheduler_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof Scheduler)) throw new TypeError(\"Expected a Scheduler\");\n    const out = self[_Scheduler_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed Scheduler\");\n    return out;\n  }\n}\nconst _GenericNetworkTransport_Symbol = Symbol(\"Realm.GenericNetworkTransport.external_pointer\");\nexport class GenericNetworkTransport {\n  constructor(ptr) {\n    this[_GenericNetworkTransport_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof GenericNetworkTransport)) throw new TypeError(\"Expected a GenericNetworkTransport\");\n    const out = self[_GenericNetworkTransport_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed GenericNetworkTransport\");\n    return out;\n  }\n}\nconst _JsPlatformHelpers_Symbol = Symbol(\"Realm.JsPlatformHelpers.external_pointer\");\nconst _native_JsPlatformHelpers_set_default_realm_file_directory =\n  nativeModule.JsPlatformHelpers_set_default_realm_file_directory;\nconst _native_JsPlatformHelpers_default_realm_file_directory =\n  nativeModule.JsPlatformHelpers_default_realm_file_directory;\nconst _native_JsPlatformHelpers_ensure_directory_exists_for_file =\n  nativeModule.JsPlatformHelpers_ensure_directory_exists_for_file;\nconst _native_JsPlatformHelpers_copy_bundled_realm_files = nativeModule.JsPlatformHelpers_copy_bundled_realm_files;\nconst _native_JsPlatformHelpers_remove_realm_files_from_directory =\n  nativeModule.JsPlatformHelpers_remove_realm_files_from_directory;\nconst _native_JsPlatformHelpers_remove_file = nativeModule.JsPlatformHelpers_remove_file;\nconst _native_JsPlatformHelpers_remove_directory = nativeModule.JsPlatformHelpers_remove_directory;\nconst _native_JsPlatformHelpers_get_cpu_arch = nativeModule.JsPlatformHelpers_get_cpu_arch;\nexport class JsPlatformHelpers {\n  constructor(ptr) {\n    this[_JsPlatformHelpers_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof JsPlatformHelpers)) throw new TypeError(\"Expected a JsPlatformHelpers\");\n    const out = self[_JsPlatformHelpers_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed JsPlatformHelpers\");\n    return out;\n  }\n\n  static setDefaultRealmFileDirectory(dir) {\n    return _native_JsPlatformHelpers_set_default_realm_file_directory(dir);\n  }\n  static defaultRealmFileDirectory() {\n    return _native_JsPlatformHelpers_default_realm_file_directory();\n  }\n  static ensureDirectoryExistsForFile(file) {\n    return _native_JsPlatformHelpers_ensure_directory_exists_for_file(file);\n  }\n  static copyBundledRealmFiles() {\n    return _native_JsPlatformHelpers_copy_bundled_realm_files();\n  }\n  static removeRealmFilesFromDirectory(directory) {\n    return _native_JsPlatformHelpers_remove_realm_files_from_directory(directory);\n  }\n  static removeFile(path) {\n    return _native_JsPlatformHelpers_remove_file(path);\n  }\n  static removeDirectory(path) {\n    return _native_JsPlatformHelpers_remove_directory(path);\n  }\n  static getCpuArch() {\n    return _native_JsPlatformHelpers_get_cpu_arch();\n  }\n}\nconst _WeakSyncSession_Symbol = Symbol(\"Realm.WeakSyncSession.external_pointer\");\nconst _native_WeakSyncSession_raw_dereference = nativeModule.WeakSyncSession_raw_dereference;\nconst _native_WeakSyncSession_weak_copy_of = nativeModule.WeakSyncSession_weak_copy_of;\nexport class WeakSyncSession {\n  constructor(ptr) {\n    this[_WeakSyncSession_Symbol] = ptr;\n  }\n  static _extract(self) {\n    if (!(self instanceof WeakSyncSession)) throw new TypeError(\"Expected a WeakSyncSession\");\n    const out = self[_WeakSyncSession_Symbol];\n    if (!out) throw new TypeError(\"received an improperly constructed WeakSyncSession\");\n    return out;\n  }\n\n  rawDereference() {\n    return _native_WeakSyncSession_raw_dereference(this[_WeakSyncSession_Symbol]);\n  }\n  static weakCopyOf(shared) {\n    return _native_WeakSyncSession_weak_copy_of(shared);\n  }\n}\nnativeModule.injectInjectables({\n  Long,\n  ArrayBuffer,\n  Float,\n  ObjectId,\n  UUID,\n  Decimal128,\n  EJSON_parse: EJSON.parse,\n  EJSON_stringify: EJSON.stringify,\n  Helpers,\n  Logger,\n  ConstTableRef,\n  TableRef,\n  Obj,\n  Transaction,\n  ObjectStore,\n  Timestamp,\n  Geospatial,\n  ObjLink,\n  KeyPathMapping,\n  Query,\n  SortDescriptor,\n  TableView,\n  Results,\n  Realm,\n  RealmCoordinator,\n  ObjectNotifier,\n  NotificationToken,\n  IndexSet,\n  Collection,\n  List,\n  Set,\n  Dictionary,\n  GoogleAuthCode,\n  GoogleIdToken,\n  AppCredentials,\n  SyncUserSubscriptionToken,\n  SyncUser,\n  UserProfile,\n  AppSubscriptionToken,\n  App,\n  WatchStream,\n  PushClient,\n  UsernamePasswordProviderClient,\n  UserApiKeyProviderClient,\n  LoggerFactory,\n  SyncManager,\n  ThreadSafeReference,\n  AsyncOpenTask,\n  SyncSession,\n  SslVerifyCallback,\n  SyncSubscriptionSet,\n  MutableSyncSubscriptionSet,\n  Scheduler,\n  GenericNetworkTransport,\n  JsPlatformHelpers,\n  WeakSyncSession,\n});\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { IndexSet, Int64, ObjKey, SyncSession, Timestamp, WeakSyncSession } from \"realm/binding\";\n\n/** @internal */\nexport * from \"realm/binding\";\n\n/** @internal */\ndeclare module \"realm/binding\" {\n  interface IndexSet {\n    asIndexes(): Iterator<number>;\n  }\n  interface Timestamp {\n    toDate(): Date;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace Timestamp {\n    export function fromDate(d: Date): Timestamp;\n  }\n\n  interface SyncSession {\n    /** Returns a WeakSyncSession and releases the strong reference held by this SyncSession */\n    weaken(): WeakSyncSession;\n  }\n\n  interface WeakSyncSession {\n    /**\n     * Similar to WeakRef.deref(), but takes a callback so that the strong reference can be\n     * automatically released when the callback exists (either by returning or throwing).\n     * It is not legal to hold on to the SyncSession after this returns because its\n     * strong reference will have been deleted.\n     */\n    withDeref<Ret = void>(callback: (shared: SyncSession | null) => Ret): Ret;\n  }\n}\n\nIndexSet.prototype.asIndexes = function* (this: IndexSet) {\n  for (const [from, to] of this) {\n    let i = from;\n    while (i < to) {\n      yield i;\n      i++;\n    }\n  }\n};\n\nTimestamp.fromDate = (d: Date) =>\n  Timestamp.make(Int64.numToInt(Math.floor(d.valueOf() / 1000)), (d.valueOf() % 1000) * 1000_000);\n\nTimestamp.prototype.toDate = function () {\n  return new Date(Number(this.seconds) * 1000 + this.nanoseconds / 1000_000);\n};\n\nSyncSession.prototype.weaken = function () {\n  try {\n    return WeakSyncSession.weakCopyOf(this);\n  } finally {\n    this.$resetSharedPtr();\n  }\n};\n\nWeakSyncSession.prototype.withDeref = function <Ret = void>(callback: (shared: SyncSession | null) => Ret) {\n  const shared = this.rawDereference();\n  try {\n    return callback(shared);\n  } finally {\n    shared?.$resetSharedPtr();\n  }\n};\n\n/** @internal */\nexport class InvalidObjKey extends TypeError {\n  constructor(input: string) {\n    super(`Cannot convert '${input}' to an ObjKey`);\n  }\n}\n\n/** @internal */\nexport function stringToObjKey(input: string): ObjKey {\n  try {\n    return Int64.strToInt(input) as unknown as ObjKey;\n  } catch {\n    throw new InvalidObjKey(input);\n  }\n}\n\n/** @internal */\nexport function isEmptyObjKey(objKey: ObjKey) {\n  // This relies on the JS representation of an ObjKey being a bigint\n  return Int64.equals(objKey as unknown as Int64, -1);\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { existsSync, mkdirSync, readdirSync, rmSync, unlinkSync } from \"node:fs\";\nimport { dirname, isAbsolute, join } from \"node:path\";\n\nimport { inject } from \"../file-system\";\nimport { extendDebug } from \"../../debug\";\nimport { JsPlatformHelpers } from \"../../binding\";\n\nconst debug = extendDebug(\"fs\");\n\ninject({\n  isAbsolutePath(path) {\n    return isAbsolute(path);\n  },\n  joinPaths(...segments) {\n    return join(...segments);\n  },\n  removeFile(path) {\n    debug(\"removeFile\", path);\n    if (existsSync(path)) {\n      unlinkSync(path);\n    }\n  },\n  removeDirectory(path) {\n    debug(\"removeDirectory\", path);\n    rmSync(path, { recursive: true, force: true });\n  },\n  ensureDirectoryForFile(path) {\n    const parentPath = dirname(path);\n    mkdirSync(parentPath, { recursive: true });\n  },\n  setDefaultDirectoryPath(path) {\n    debug(\"setDefaultDirectoryPath\", path);\n    return JsPlatformHelpers.setDefaultRealmFileDirectory(path);\n  },\n  getDefaultDirectoryPath() {\n    return JsPlatformHelpers.defaultRealmFileDirectory();\n  },\n  exists(path) {\n    debug(\"exists\", path);\n    return existsSync(path);\n  },\n  copyBundledRealmFiles() {\n    throw new Error(\"Realm for Node does not support this method.\");\n  },\n  /*\n  readDirectory(path) {\n    return readdirSync(path, { encoding: \"utf8\", withFileTypes: true });\n  },\n  */\n  removeRealmFilesFromDirectory(path: string) {\n    debug(\"removeRealmFilesFromDirectory\", path);\n    for (const dirent of readdirSync(path, { encoding: \"utf8\", withFileTypes: true })) {\n      const direntPath = join(path, dirent.name);\n      if (dirent.isDirectory() && dirent.name.endsWith(\".realm.management\")) {\n        rmSync(direntPath, { recursive: true, force: true });\n      } else if (\n        dirent.name.endsWith(\".realm\") ||\n        dirent.name.endsWith(\".realm.note\") ||\n        dirent.name.endsWith(\".realm.lock\") ||\n        dirent.name.endsWith(\".realm.fresh.lock\") ||\n        dirent.name.endsWith(\".realm.log\")\n      ) {\n        unlinkSync(direntPath);\n      }\n    }\n  },\n});\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { DeviceInfo } from \"../binding\";\n\ntype DeviceInfoType = {\n  create(): DeviceInfo;\n};\n\nexport const deviceInfo: DeviceInfoType = {\n  create() {\n    throw new Error(\"Not supported on this platform\");\n  },\n};\n\nexport function inject(injected: DeviceInfoType) {\n  Object.freeze(Object.assign(deviceInfo, injected));\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport os from \"node:os\";\nimport process from \"node:process\";\n\nimport { version } from \"realm/package.json\";\nimport { REALM_ANONYMIZED_BUNDLE_ID } from \"realm/realm-constants.json\";\n\nimport { inject } from \"../device-info\";\n\ninject({\n  create() {\n    return {\n      sdk: \"JS\",\n      sdkVersion: version,\n\n      platform: os.type(),\n      platformVersion: os.release(),\n\n      deviceName: \"unknown\",\n      deviceVersion: \"unknown\",\n\n      cpuArch: os.arch(),\n\n      frameworkName: typeof process.versions.electron === \"string\" ? \"Electron\" : \"Node.js\",\n      frameworkVersion: process.versions.electron || process.version,\n\n      bundleId: REALM_ANONYMIZED_BUNDLE_ID,\n    };\n  },\n});\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { SyncProxyConfig } from \"../binding\";\n\ntype SyncProxyConfigType = {\n  create(): SyncProxyConfig | undefined;\n};\n\nexport const syncProxyConfig: SyncProxyConfigType = {\n  create() {\n    throw new Error(\"proxyConfig is not supported on this platform\");\n  },\n};\n\nexport function inject(injected: SyncProxyConfigType) {\n  Object.freeze(Object.assign(syncProxyConfig, injected));\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport process from \"node:process\";\nimport { URL } from \"node:url\";\n\nimport { ProxyType } from \"realm/binding\";\nimport { inject } from \"../sync-proxy-config\";\n\ninject({\n  create() {\n    for (const envVar of [\"HTTPS_PROXY\", \"https_proxy\", \"HTTP_PROXY\", \"http_proxy\"]) {\n      const proxyUrlAsString = process.env[envVar];\n      if (proxyUrlAsString) {\n        let type: ProxyType;\n        const proxyUrl = new URL(proxyUrlAsString);\n        const protocol = proxyUrl.protocol;\n        if (protocol === \"http:\") {\n          type = ProxyType.Http;\n        } else if (protocol === \"https:\") {\n          type = ProxyType.Https;\n        } else {\n          throw new Error(`Expected either 'http' or 'https' as protocol for ${envVar} (got ${protocol})`);\n        }\n\n        const config = {\n          address: proxyUrl.hostname,\n          type,\n          port: parseInt(proxyUrl.port, 10),\n        };\n        return config;\n      }\n    }\n\n    // no environment variable found, and we skip the proxy configuration\n    return undefined;\n  },\n});\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n// Exports a globalThis which is polyfilled for iOS 11/12\n// From https://github.com/zloirock/core-js/blob/v3.27.2/packages/core-js/internals/global.js\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst check = function (it: any) {\n  return it && it.Math === Math && it;\n};\n\n/** @internal */\n// eslint-disable-next-line no-restricted-globals\nexport const safeGlobalThis: typeof globalThis & Record<string, unknown> =\n  // eslint-disable-next-line no-restricted-globals\n  check(typeof globalThis === \"object\" && globalThis) ||\n  // @ts-expect-error We're relying on an identifier that might not be there\n  check(typeof window === \"object\" && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore allow `self`\n  check(typeof self === \"object\" && self) ||\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore allow `global`\n  check(typeof global === \"object\" && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore allow `this`\n    return this;\n  })() ||\n  Function(\"return this\")();\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\nexport default EventTarget;\nexport { defineEventAttribute, EventTarget };\n//# sourceMappingURL=event-target-shim.mjs.map\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\nimport { EventTarget, defineEventAttribute } from 'event-target-shim';\n\n/**\n * The signal class.\n * @see https://dom.spec.whatwg.org/#abortsignal\n */\nclass AbortSignal extends EventTarget {\n    /**\n     * AbortSignal cannot be constructed directly.\n     */\n    constructor() {\n        super();\n        throw new TypeError(\"AbortSignal cannot be constructed directly\");\n    }\n    /**\n     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.\n     */\n    get aborted() {\n        const aborted = abortedFlags.get(this);\n        if (typeof aborted !== \"boolean\") {\n            throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? \"null\" : typeof this}`);\n        }\n        return aborted;\n    }\n}\ndefineEventAttribute(AbortSignal.prototype, \"abort\");\n/**\n * Create an AbortSignal object.\n */\nfunction createAbortSignal() {\n    const signal = Object.create(AbortSignal.prototype);\n    EventTarget.call(signal);\n    abortedFlags.set(signal, false);\n    return signal;\n}\n/**\n * Abort a given signal.\n */\nfunction abortSignal(signal) {\n    if (abortedFlags.get(signal) !== false) {\n        return;\n    }\n    abortedFlags.set(signal, true);\n    signal.dispatchEvent({ type: \"abort\" });\n}\n/**\n * Aborted flag for each instances.\n */\nconst abortedFlags = new WeakMap();\n// Properties should be enumerable.\nObject.defineProperties(AbortSignal.prototype, {\n    aborted: { enumerable: true },\n});\n// `toString()` should return `\"[object AbortSignal]\"`\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortSignal\",\n    });\n}\n\n/**\n * The AbortController.\n * @see https://dom.spec.whatwg.org/#abortcontroller\n */\nclass AbortController {\n    /**\n     * Initialize this controller.\n     */\n    constructor() {\n        signals.set(this, createAbortSignal());\n    }\n    /**\n     * Returns the `AbortSignal` object associated with this object.\n     */\n    get signal() {\n        return getSignal(this);\n    }\n    /**\n     * Abort and signal to any observers that the associated activity is to be aborted.\n     */\n    abort() {\n        abortSignal(getSignal(this));\n    }\n}\n/**\n * Associated signals.\n */\nconst signals = new WeakMap();\n/**\n * Get the associated signal of a given controller.\n */\nfunction getSignal(controller) {\n    const signal = signals.get(controller);\n    if (signal == null) {\n        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? \"null\" : typeof controller}`);\n    }\n    return signal;\n}\n// Properties should be enumerable.\nObject.defineProperties(AbortController.prototype, {\n    signal: { enumerable: true },\n    abort: { enumerable: true },\n});\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortController\",\n    });\n}\n\nexport default AbortController;\nexport { AbortController, AbortSignal };\n//# sourceMappingURL=abort-controller.mjs.map\n","import fetch from 'node-fetch';\nimport NodeAbortController from 'abort-controller';\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// Falling back on a known string used in code transpiled by Babel\nconst asyncIteratorSymbol = Symbol.asyncIterator || \"@@asyncIterator\";\nconst READABLE_STREAM_HANDLER = {\n    get(target, prop, receiver) {\n        if (prop === asyncIteratorSymbol) {\n            return () => {\n                const reader = target.getReader();\n                return {\n                    next() {\n                        return reader.read();\n                    },\n                    async return() {\n                        await reader.cancel();\n                        return { done: true, value: null };\n                    },\n                };\n            };\n        }\n        return Reflect.get(target, prop, receiver);\n    },\n};\n/**\n * This method ensures that a ReadableStream is iterable, wraps in a proxy with the {@link Symbol.asyncIterator} if missing.\n * @param response\n * @returns An async iterator.\n */\nfunction makeStreamIterable(stream) {\n    if (asyncIteratorSymbol in stream) {\n        return stream;\n    }\n    else if (\"getReader\" in stream) {\n        return new Proxy(stream, READABLE_STREAM_HANDLER);\n    }\n    else {\n        throw new Error(\"Expected a `getReader` method on ReadableStream\");\n    }\n}\nconst RESPONSE_HANDLER = {\n    get(target, prop, receiver) {\n        if (prop === \"body\") {\n            const body = target.body;\n            if (body) {\n                return makeStreamIterable(body);\n            }\n            return body;\n        }\n        return Reflect.get(target, prop, receiver);\n    },\n};\n/**\n * This method ensures that a ReadableStream is iterable, wraps in a proxy with the {@link Symbol.asyncIterator} if missing.\n * @param response\n * @returns An async iterator.\n */\nfunction makeRequestBodyIterable(response) {\n    return new Proxy(response, RESPONSE_HANDLER);\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\n */\nconst HTTP_STATUS_TEXTS = {\n    100: \"Continue\",\n    101: \"Switching Protocols\",\n    102: \"Processing\",\n    200: \"OK\",\n    201: \"Created\",\n    202: \"Accepted\",\n    203: \"Non-Authoritative Information\",\n    204: \"No Content\",\n    205: \"Reset Content\",\n    206: \"Partial Content\",\n    300: \"Multiple Choices\",\n    301: \"Moved Permanently\",\n    302: \"Found\",\n    303: \"See Other\",\n    304: \"Not Modified\",\n    307: \"Temporary Redirect\",\n    308: \"Permanent Redirect\",\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    402: \"Payment Required\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    405: \"Method Not Allowed\",\n    406: \"Not Acceptable\",\n    407: \"Proxy Authentication Required\",\n    408: \"Request Timeout\",\n    409: \"Conflict\",\n    410: \"Gone\",\n    411: \"Length Required\",\n    412: \"Precondition Failed\",\n    413: \"Payload Too Large\",\n    414: \"URI Too Long\",\n    415: \"Unsupported Media Type\",\n    416: \"Range Not Satisfiable\",\n    417: \"Expectation Failed\",\n    418: \"I'm a teapot\",\n    422: \"Unprocessable Entity\",\n    425: \"Too Early\",\n    426: \"Upgrade Required\",\n    429: \"Too Many Requests\",\n    431: \"Request Header Fields Too Large\",\n    451: \"Unavailable For Legal Reasons\",\n    500: \"Internal Server Error\",\n    501: \"Not Implemented\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    504: \"Gateway Timeout\",\n    505: \"HTTP Version Not Supported\",\n    506: \"Variant Also Negotiates\",\n    507: \"Insufficient Storage\",\n    508: \"Loop Detected\",\n    510: \"Not Extended\",\n    511: \"Network Authentication Required\",\n};\nfunction deriveStatusText(status) {\n    return HTTP_STATUS_TEXTS[status];\n}\n\n////////////////////////////////////////////////////////////////////////////\nclass DefaultNetworkTransport {\n    static createTimeoutSignal(timeoutMs) {\n        if (typeof timeoutMs === \"number\") {\n            const controller = new DefaultNetworkTransport.AbortController();\n            // Call abort after a specific number of milliseconds\n            const timeout = setTimeout(() => {\n                controller.abort();\n            }, timeoutMs);\n            return {\n                signal: controller.signal,\n                cancelTimeout: () => {\n                    clearTimeout(timeout);\n                },\n            };\n        }\n        else {\n            return {\n                signal: undefined,\n                cancelTimeout: () => {\n                    /* No-op */\n                },\n            };\n        }\n    }\n    constructor() {\n        if (!DefaultNetworkTransport.fetch) {\n            throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n        }\n        if (!DefaultNetworkTransport.AbortController) {\n            throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n        }\n    }\n    /** @deprecated Not used by the `bindgen` SDK and can be deleted */\n    fetchWithCallbacks(request, handler) {\n        // tslint:disable-next-line: no-console\n        this.fetch(request)\n            .then(async (response) => {\n            const decodedBody = await response.text();\n            // Pull out the headers of the response\n            const responseHeaders = {};\n            response.headers.forEach((value, key) => {\n                responseHeaders[key] = value;\n            });\n            return {\n                statusCode: response.status,\n                headers: responseHeaders,\n                body: decodedBody,\n            };\n        })\n            .then((r) => handler.onSuccess(r))\n            .catch((e) => handler.onError(e));\n    }\n    async fetch(request) {\n        const { timeoutMs, url, ...rest } = request;\n        const { signal, cancelTimeout } = DefaultNetworkTransport.createTimeoutSignal(timeoutMs);\n        try {\n            // Awaiting the response to cancel timeout on errors\n            const response = await DefaultNetworkTransport.fetch(url, {\n                ...DefaultNetworkTransport.extraFetchOptions,\n                signal,\n                ...rest,\n            });\n            // A bug in the React Native fetch polyfill leaves the statusText empty\n            if (response.statusText === \"\") {\n                const statusText = deriveStatusText(response.status);\n                // @ts-expect-error Assigning to a read-only property\n                response.statusText = statusText;\n            }\n            // Wraps the body of the request in an iterable interface\n            return makeRequestBodyIterable(response);\n        }\n        finally {\n            // Whatever happens, cancel any timeout\n            cancelTimeout();\n        }\n    }\n}\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n    \"Content-Type\": \"application/json\",\n};\n\n////////////////////////////////////////////////////////////////////////////\nDefaultNetworkTransport.fetch = fetch;\nDefaultNetworkTransport.AbortController = NodeAbortController;\n\nexport { DefaultNetworkTransport };\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { DefaultNetworkTransport, FetchHeaders, FetchResponse, Method, Request } from \"@realm/network-transport\";\n\nimport { extendDebug } from \"../debug\";\nimport * as binding from \"../binding\";\n\nexport type { FetchHeaders, Request };\n\nconst debug = extendDebug(\"network\");\nconst transport = new DefaultNetworkTransport();\n\ntype NetworkType = {\n  fetch(request: Request): Promise<FetchResponse>;\n  fetch(request: binding.Request): Promise<FetchResponse>;\n};\n\nconst HTTP_METHOD: Record<binding.HttpMethod, Method> = {\n  [binding.HttpMethod.Get]: \"GET\",\n  [binding.HttpMethod.Post]: \"POST\",\n  [binding.HttpMethod.Put]: \"PUT\",\n  [binding.HttpMethod.Patch]: \"PATCH\",\n  [binding.HttpMethod.Del]: \"DELETE\",\n};\n\nfunction toFetchRequest({ method, timeoutMs, body, headers, url }: binding.Request_Relaxed) {\n  return {\n    url,\n    headers,\n    method: HTTP_METHOD[method],\n    timeoutMs: Number(timeoutMs),\n    body: body !== \"\" ? body : undefined,\n  };\n}\n\nexport const network: NetworkType = {\n  async fetch(request) {\n    debug(\"Requesting %O\", request);\n    const fetchRequest = typeof request.method === \"string\" ? request : toFetchRequest(request);\n    const response = await transport.fetch(fetchRequest);\n    debug(\"Responded %O\", response);\n    return response;\n  },\n};\n\nexport function inject(injected: NetworkType) {\n  Object.freeze(Object.assign(network, injected));\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nexport const flags = {\n  /**\n   * When enabled, objects can be created by providing an array of values (in the order that they were declared in the object schema) in addition to of an object of property values.\n   */\n  ALLOW_VALUES_ARRAYS: false,\n  /**\n   * When enabled, accessing the `Realm` without first importing it from the Realm package, will throw.\n   * Helps finding places where the app is depending on the now deprecated way of using the package.\n   */\n  THROW_ON_GLOBAL_REALM: false,\n  /**\n   * Enables calling internal, test-only functions like `Realm.clearTestState`.\n   * This is disabled by default, mainly because the data-structures needed to support this, introduce minor memory leaks if clearTestState() is not called regularly and are not intended for production use.\n   */\n  ALLOW_CLEAR_TEST_STATE: false,\n};\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport * as bson from \"bson\";\n\n/**\n * Re-export a subset of the \"bson\" package, enabling access to the BSON types without requiring an explicit dependency on the \"bson\" package.\n * @see {@link https://www.npmjs.com/package/bson#documentation|the BSON documentation} for more information.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace BSON {\n  export const ObjectId = bson.ObjectId;\n  export type ObjectId = bson.ObjectId;\n  export const ObjectID = bson.ObjectID;\n  export type ObjectID = bson.ObjectID;\n  export const Decimal128 = bson.Decimal128;\n  export type Decimal128 = bson.Decimal128;\n  export const UUID = bson.UUID;\n  export type UUID = bson.UUID;\n  export const Binary = bson.Binary;\n  export type Binary = bson.Binary;\n  export const EJSON = bson.EJSON;\n  export type EJSON = typeof bson.EJSON;\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { ClientResetMode, Configuration, PrimaryKey, assert, binding } from \"./internal\";\n\nexport class AssertionError extends Error {\n  /** @internal */\n  constructor(message = \"Assertion failed!\") {\n    super(message);\n  }\n}\n\nexport class TypeAssertionError extends AssertionError {\n  /** @internal */\n  public static deriveType(value: unknown) {\n    if (typeof value === \"object\") {\n      if (value === null) {\n        return \"null\";\n      } else {\n        const name = value.constructor.name;\n        if (name === \"Object\") {\n          return \"an object\";\n        } else if (name === \"Array\") {\n          return \"an array\";\n        } else {\n          return \"an instance of \" + name;\n        }\n      }\n    } else if (typeof value === \"undefined\") {\n      return typeof value;\n    } else if (typeof value === \"function\") {\n      return `a function or class named ${value.name}`;\n    } else {\n      return \"a \" + typeof value;\n    }\n  }\n\n  /**\n   * Get an error message for when the target's value is of\n   * the wrong type. Single quotes are added around the target\n   * string if it does not already contain one.\n   * @internal\n   */\n  private static message(expected: string, value: unknown, target?: string) {\n    const actual = TypeAssertionError.deriveType(value);\n    if (target) {\n      target = target.includes(\"'\") ? target : `'${target}'`;\n    } else {\n      target = \"value\";\n    }\n    return `Expected ${target} to be ${expected}, got ${actual}`;\n  }\n\n  /** @internal */\n  constructor(/** @internal */ private expected: string, /** @internal */ private value: unknown, target?: string) {\n    super(TypeAssertionError.message(expected, value, target));\n  }\n\n  /** @internal */\n  public rename(name: string) {\n    this.message = TypeAssertionError.message(this.expected, this.value, name);\n  }\n}\n\nexport class IllegalConstructorError extends Error {\n  constructor(type: string) {\n    super(`Illegal constructor: ${type} objects are read from managed objects only.`);\n  }\n}\n\nexport class TimeoutError extends Error {\n  constructor(message: string) {\n    super(`Timed out: ${message}`);\n  }\n}\n\nexport class SchemaParseError extends Error {\n  /** @internal */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\nexport class ObjectSchemaParseError extends SchemaParseError {\n  objectName: string;\n\n  /** @internal */\n  constructor(message: string, info: { objectName: string }) {\n    const displayName = info.objectName ? `object '${info.objectName}'` : \"unnamed object\";\n    super(`Invalid schema for ${displayName}: ${message}`);\n    this.objectName = info.objectName;\n  }\n}\n\nexport class PropertySchemaParseError extends SchemaParseError {\n  objectName: string;\n  propertyName: string;\n\n  /** @internal */\n  constructor(message: string, info: { objectName: string; propertyName: string }) {\n    super(`Invalid type declaration for property '${info.propertyName}' on '${info.objectName}': ${message}`);\n    this.objectName = info.objectName;\n    this.propertyName = info.propertyName;\n  }\n}\n\n/** @internal */\nexport function fromBindingSyncError(error: binding.SyncError) {\n  if (error.systemError.code === 231) {\n    return new CompensatingWriteError(error);\n  } else if (error.isClientResetRequested) {\n    return new ClientResetError(error);\n  } else {\n    return new SyncError(error);\n  }\n}\n\n/**\n * An class describing a sync error.\n */\nexport class SyncError extends Error {\n  public name = \"SyncError\";\n\n  /**\n   * The error code that represents this error.\n   */\n  public code: number;\n\n  /**\n   * The category of this error.\n   */\n  public category: string;\n\n  /**\n   * The URL to the associated server log, if available. The string will be empty\n   * if the sync error is not initiated by the server.\n   */\n  public logUrl: string;\n\n  /**\n   * A record of extra user information associated with this error.\n   */\n  public userInfo: Record<string, string>;\n\n  /**\n   * @deprecated Check the error message instead.\n   */\n  public isFatal: boolean;\n\n  /** @internal */\n  constructor(error: binding.SyncError) {\n    super(error.simpleMessage);\n    const { systemError } = error;\n    this.code = systemError.code;\n    this.category = systemError.category;\n    this.logUrl = error.logUrl;\n    this.userInfo = error.userInfo;\n    this.isFatal = error.isFatal;\n  }\n}\n\nconst RECOVERY_FILE_PATH_KEY = \"RECOVERY_FILE_PATH\";\n\n/**\n * @deprecated Use the another {@link ClientResetMode} than {@link ClientResetMode.Manual}.\n * @see https://github.com/realm/realm-js/blob/main/CHANGELOG.md#1110-2022-11-01\n * @see https://github.com/realm/realm-js/issues/4135\n */\nexport class ClientResetError extends SyncError {\n  public name = \"ClientReset\";\n  public config: Configuration;\n\n  /** @internal */\n  constructor(error: binding.SyncError) {\n    super(error);\n    this.config = {\n      path: error.userInfo[RECOVERY_FILE_PATH_KEY],\n      readOnly: true,\n    };\n  }\n}\n\n/**\n * An error class that indicates that one or more object changes have been reverted by the server.\n * This can happen when the client creates/updates objects that do not match any subscription, or performs writes on\n * an object it didn't have permission to access.\n */\nexport class CompensatingWriteError extends SyncError {\n  /**\n   * The array of information about each object that caused the compensating write.\n   */\n  public writes: CompensatingWriteInfo[] = [];\n\n  /** @internal */\n  constructor(error: binding.SyncError) {\n    super(error);\n    for (const { objectName, primaryKey, reason } of error.compensatingWritesInfo) {\n      assert.primaryKey(primaryKey);\n      this.writes.push({ objectName, reason, primaryKey });\n    }\n  }\n}\n\n/**\n * The details of a compensating write performed by the server.\n */\nexport type CompensatingWriteInfo = {\n  /**\n   * The type of the object that caused the compensating write.\n   */\n  objectName: string;\n\n  /**\n   * The reason for the compensating write.\n   */\n  reason: string;\n\n  /**\n   * The primary key of the object that caused the compensating write.\n   */\n  primaryKey: PrimaryKey;\n};\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * Decorators are not intended to be used at runtime and are removed from the source\n * by @realm/babel-plugin. Therefore, if a decorator is called, this means it is being\n * used outside of @realm/babel-plugin (or the plugin is incorrectly configured), so\n * we should throw\n */\nclass DecoratorError extends Error {\n  constructor(name: string) {\n    super(\n      `The @${name} decorator cannot be used without the \\`@realm/babel-plugin\\` Babel plugin. Please check that you have installed and configured the Babel plugin.`,\n    );\n  }\n}\n\nexport type IndexDecorator = (target: unknown, memberName: string) => void;\n\n/**\n * Specify that the decorated field should be indexed by Realm.\n * See: [documentation](https://www.mongodb.com/docs/realm/sdk/react-native/examples/define-a-realm-object-model/#index-a-property)\n */\nexport const index: IndexDecorator = () => {\n  throw new DecoratorError(\"index\");\n};\n\nexport type MapToDecorator = (propertyName: string) => (target: unknown, memberName: string) => void;\n\n/**\n * Specify that the decorated field should be remapped to a different property name in the Realm database.\n * See: [documentation](https://www.mongodb.com/docs/realm/sdk/react-native/examples/define-a-realm-object-model/#remap-a-property)\n * @param propertyName The name of the property in the Realm database\n */\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars -- We don't read this at runtime */\nexport const mapTo: MapToDecorator = (propertyName: string) => {\n  throw new DecoratorError(\"mapTo\");\n};\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { AssertionError, BSON, DefaultObject, PrimaryKey, Realm, TypeAssertionError, binding } from \"./internal\";\n\n/**\n * Expects the condition to be truthy\n * @throws an {@link Error} If the condition is not truthy. Throws either the {@link err} given as param if it's an {@link Error},\n * an {@link AssertionError} wrapping {@link err} if it's a string or undefined, or uses the result of invoking {@link err} if it's a function.\n * @param condition The condition that must be truthy to avoid throwing.\n * @param err Optional message or error to throw.\n * Or a function producing this, which is useful to avoid computing the error message in case it's not needed.\n */\nexport function assert(\n  condition: unknown,\n  err?: string | Error | (() => undefined | string | Error),\n): asserts condition {\n  if (!condition) {\n    // Call any function to generate the error lazily\n    err = typeof err === \"function\" ? err() : err;\n    if (err instanceof Error) {\n      throw err;\n    } else if (typeof err === \"string\" || typeof err === \"undefined\") {\n      throw new AssertionError(err);\n    } else {\n      throw new Error(\"Expected err to be an Err, string, undefined or a function returning either.\");\n    }\n  }\n}\n\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nassert.instanceOf = <T extends Function>(\n  value: unknown,\n  constructor: T,\n  target?: string,\n): asserts value is T[\"prototype\"] => {\n  assert(\n    value instanceof constructor,\n    () => new TypeAssertionError(`an instance of ${constructor.name}`, value, target),\n  );\n};\n\nassert.string = (value: unknown, target?: string): asserts value is string => {\n  assert(typeof value === \"string\", () => new TypeAssertionError(\"a string\", value, target));\n};\n\nassert.number = (value: unknown, target?: string): asserts value is number => {\n  assert(typeof value === \"number\", () => new TypeAssertionError(\"a number\", value, target));\n};\n\nassert.numericString = (value: unknown, target?: string) => {\n  assert.string(value);\n  assert(/^-?\\d+$/.test(value), () => new TypeAssertionError(\"a numeric string\", value, target));\n};\n\nassert.boolean = (value: unknown, target?: string): asserts value is boolean => {\n  assert(typeof value === \"boolean\", () => new TypeAssertionError(\"a boolean\", value, target));\n};\n\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nassert.function = (value: unknown, target?: string): asserts value is (...args: unknown[]) => unknown => {\n  assert(typeof value === \"function\", () => new TypeAssertionError(\"a function\", value, target));\n};\n\nassert.symbol = (value: unknown, target?: string): asserts value is symbol => {\n  assert(typeof value === \"symbol\", () => new TypeAssertionError(\"a symbol\", value, target));\n};\n\nassert.object = <K extends string | number | symbol = string, V = unknown>(\n  value: unknown,\n  target?: string,\n  { allowArrays } = { allowArrays: true },\n): asserts value is Record<K, V> => {\n  assert(\n    typeof value === \"object\" && value !== null && (allowArrays || !Array.isArray(value)),\n    () => new TypeAssertionError(\"an object\", value, target),\n  );\n};\n\nassert.undefined = (value: unknown, target?: string): asserts value is undefined => {\n  assert(typeof value === \"undefined\", () => new TypeAssertionError(\"undefined\", value, target));\n};\n\nassert.null = (value: unknown, target?: string): asserts value is null => {\n  assert(value === null, () => new TypeAssertionError(\"null\", value, target));\n};\n\nassert.array = (value: unknown, target?: string): asserts value is Array<unknown> => {\n  assert(Array.isArray(value), () => new TypeAssertionError(\"an array\", value, target));\n};\n\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nassert.extends = <T extends Function>(\n  value: unknown,\n  constructor: T,\n  target?: string,\n): asserts value is T & DefaultObject => {\n  assert.function(value, target);\n  assert(\n    value.prototype instanceof constructor,\n    () => new TypeAssertionError(`a class extending ${constructor.name}`, value, target),\n  );\n};\n\nassert.iterable = (value: unknown, target?: string): asserts value is Iterable<unknown> => {\n  assert.object(value, target);\n  assert(Symbol.iterator in value, () => new TypeAssertionError(\"iterable\", value, target));\n};\n\n// * Use arg type `value: never` rather than `value: unknown` to get a compile time\n//   error when e.g. not including if-checks for all enum values.\n// * Use return type `never` rather than `asserts value is never` to remove the\n//   need for callers to explicitly throw (i.e. `throw assert.never()`) as a way\n//   for TS to detect unreachable code.\nassert.never = (value: never, target?: string): never => {\n  throw new TypeAssertionError(\"never\", value, target);\n};\n\n// SDK specific\n\nassert.primaryKey = (value: unknown, target?: string): asserts value is PrimaryKey => {\n  assert(\n    value === null ||\n      typeof value === \"number\" ||\n      typeof value === \"string\" ||\n      value instanceof BSON.UUID ||\n      value instanceof BSON.ObjectId,\n    () => new TypeAssertionError(\"a primary key\", value, target),\n  );\n};\n\nassert.open = (realm: Realm) => {\n  assert(!realm.isClosed, \"Cannot access realm that has been closed.\");\n};\n\nassert.inTransaction = (realm: Realm, message = \"Cannot modify managed objects outside of a write transaction.\") => {\n  assert.open(realm);\n  assert(realm.isInTransaction, message);\n};\n\nassert.outTransaction = (realm: Realm, message = \"Expected realm to be outside of a write transaction\") => {\n  assert.open(realm);\n  assert(!realm.isInTransaction, message);\n};\n\nassert.isValid = (obj: binding.Obj, message = \"Accessing object which has been invalidated or deleted\") => {\n  assert(obj.isValid, message);\n};\n\nassert.isSameRealm = (realm1: binding.Realm, realm2: binding.Realm, message = \"Expected the Realms to be the same\") => {\n  assert(realm1.$addr == realm2.$addr, message);\n};\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\ntype IndexSet = [number, number];\n\nexport function unwind(ranges: IndexSet[] | Iterable<IndexSet>): number[] {\n  if (Array.isArray(ranges)) {\n    return ranges.flatMap(([start, end]) => new Array(end - start).fill(0).map((_, index) => start + index));\n  } else {\n    return unwind([...ranges]);\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport type CallbackAdder<CallbackType, TokenType, Args extends unknown[] = []> = (\n  callback: CallbackType,\n  ...args: Args\n) => TokenType;\n/** @internal */\nexport type CallbackRemover<TokenType> = (token: TokenType) => void;\n\nexport type ListenersOptions<CallbackType, TokenType, Args extends unknown[]> = {\n  add: CallbackAdder<CallbackType, TokenType, Args>;\n  remove: CallbackRemover<TokenType>;\n  throwOnReAdd?: boolean;\n};\n\n/** @internal */\nexport class Listeners<CallbackType, TokenType, Args extends unknown[] = []> {\n  constructor(private options: ListenersOptions<CallbackType, TokenType, Args>) {}\n  /**\n   * Mapping of registered listener callbacks onto the their token in the bindings ObjectNotifier.\n   */\n  private listeners = new Map<CallbackType, TokenType>();\n\n  add(callback: CallbackType, ...args: Args): void {\n    if (this.listeners.has(callback)) {\n      // No need to add a listener twice\n      if (this.options.throwOnReAdd) {\n        throw new Error(\"Remove callback before adding it again\");\n      }\n      return;\n    }\n    const token = this.options.add(callback, ...args);\n    // Store the notification token by the callback to enable later removal.\n    this.listeners.set(callback, token);\n  }\n\n  remove(callback: CallbackType): void {\n    const token = this.listeners.get(callback);\n    if (typeof token !== \"undefined\") {\n      this.options.remove(token);\n      this.listeners.delete(callback);\n    }\n  }\n\n  removeAll(): void {\n    for (const [, token] of this.listeners) {\n      this.options.remove(token);\n    }\n    this.listeners.clear();\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { DefaultObject, INTERNAL, RealmObject } from \"./internal\";\n\n/** @internal */\nexport class JSONCacheMap extends Map<number, Map<string, DefaultObject>> {\n  add<T>(object: RealmObject<T>, value: DefaultObject) {\n    const tableKey = object[INTERNAL].table.key;\n    let cachedMap = this.get(tableKey);\n    if (!cachedMap) {\n      cachedMap = new Map();\n      this.set(tableKey, cachedMap);\n    }\n    cachedMap.set(object._objectKey(), value);\n  }\n  find<T>(object: RealmObject<T>) {\n    return this.get(object[INTERNAL].table.key)?.get(object._objectKey());\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { assert } from \"./internal\";\n\ntype ResolveType<T> = (value: T | PromiseLike<T>) => void;\ntype RejectType<T = unknown> = (reason?: T) => void;\n\nexport class PromiseHandle<T> {\n  resolve!: ResolveType<T>;\n  reject!: RejectType;\n  promise: Promise<T>;\n\n  constructor() {\n    this.promise = new Promise<T>((arg0, arg1) => {\n      this.resolve = (arg) => {\n        arg0(arg);\n      };\n      this.reject = arg1;\n    });\n    assert(this.resolve, \"Expected promise executor to be called synchronously\");\n    assert(this.reject, \"Expected promise executor to be called synchronously\");\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { TimeoutError } from \"./errors\";\nimport { PromiseHandle } from \"./PromiseHandle\";\n\nexport type TimeoutPromiseOptions = {\n  ms?: number;\n  message?: string;\n  rejectOnTimeout?: boolean;\n};\n\nexport class TimeoutPromise<T = unknown> implements Promise<T | void> {\n  private timer: Timer | undefined;\n  private handle = new PromiseHandle<T | void>();\n\n  constructor(\n    inner: Promise<T>,\n    { ms, message = `Waited ${ms}ms`, rejectOnTimeout = true }: TimeoutPromiseOptions = {},\n  ) {\n    if (typeof ms === \"number\") {\n      this.timer = setTimeout(() => {\n        if (rejectOnTimeout) {\n          this.handle.reject(new TimeoutError(message));\n        } else {\n          this.handle.resolve();\n        }\n      }, ms);\n    }\n    inner.then(this.handle.resolve, this.handle.reject).finally(() => {\n      this.cancel();\n    });\n  }\n\n  cancel() {\n    if (this.timer !== undefined) {\n      clearTimeout(this.timer);\n      delete this.timer;\n    }\n  }\n\n  then = this.handle.promise.then.bind(this.handle.promise);\n  catch = this.handle.promise.catch.bind(this.handle.promise);\n  finally = this.handle.promise.finally.bind(this.handle.promise);\n\n  get [Symbol.toStringTag]() {\n    return TimeoutPromise.name;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  ClassHelpers,\n  Dictionary,\n  OrderedCollectionHelpers,\n  Realm,\n  RealmSet,\n  Results,\n  TypeAssertionError,\n  TypeHelpers,\n  TypeOptions,\n  assert,\n  binding,\n  getTypeHelpers,\n} from \"./internal\";\n\ntype PropertyContext = binding.Property & {\n  type: binding.PropertyType;\n  objectSchemaName: string;\n  embedded: boolean;\n  default?: unknown;\n};\n\nfunction getObj(results: binding.Results, index: number) {\n  return results.getObj(index);\n}\nfunction getAny(results: binding.Results, index: number) {\n  return results.getAny(index);\n}\n\nexport type HelperOptions = {\n  realm: Realm;\n  getClassHelpers: (name: string) => ClassHelpers;\n};\n\ntype PropertyOptions = {\n  typeHelpers: TypeHelpers;\n  columnKey: binding.ColKey;\n  optional: boolean;\n  embedded: boolean;\n} & HelperOptions &\n  binding.Property_Relaxed;\n\ntype PropertyAccessors = {\n  get(obj: binding.Obj): unknown;\n  set(obj: binding.Obj, value: unknown): unknown;\n  collectionHelpers?: OrderedCollectionHelpers;\n};\n\nexport type PropertyHelpers = TypeHelpers &\n  PropertyAccessors & {\n    type: binding.PropertyType;\n    columnKey: binding.ColKey;\n    embedded: boolean;\n    default?: unknown;\n    objectType?: string;\n  };\n\nconst defaultGet =\n  ({ typeHelpers: { fromBinding }, columnKey }: PropertyOptions) =>\n  (obj: binding.Obj) => {\n    try {\n      return fromBinding(obj.getAny(columnKey));\n    } catch (err) {\n      assert.isValid(obj);\n      throw err;\n    }\n  };\n\nconst defaultSet =\n  ({ realm, typeHelpers: { toBinding }, columnKey }: PropertyOptions) =>\n  (obj: binding.Obj, value: unknown) => {\n    assert.inTransaction(realm);\n    try {\n      obj.setAny(columnKey, toBinding(value));\n    } catch (err) {\n      assert.isValid(obj);\n      throw err;\n    }\n  };\n\nfunction embeddedSet({ typeHelpers: { toBinding }, columnKey }: PropertyOptions) {\n  return (obj: binding.Obj, value: unknown) => {\n    // Asking for the toBinding will create the object and link it to the parent in one operation\n    // no need to actually set the value on the `obj`\n    toBinding(value, { createObj: () => [obj.createAndSetLinkedObject(columnKey), true] });\n  };\n}\n\ntype AccessorFactory = (options: PropertyOptions) => PropertyAccessors;\n\nconst ACCESSOR_FACTORIES: Partial<Record<binding.PropertyType, AccessorFactory>> = {\n  [binding.PropertyType.Object](options) {\n    const {\n      columnKey,\n      typeHelpers: { fromBinding },\n      embedded,\n    } = options;\n    assert(options.optional, \"Objects are always nullable\");\n    return {\n      get(this: PropertyHelpers, obj) {\n        return fromBinding(obj.getLinkedObject(columnKey));\n      },\n      set: embedded ? embeddedSet(options) : defaultSet(options),\n    };\n  },\n  [binding.PropertyType.LinkingObjects]() {\n    return {\n      get() {\n        throw new Error(\"Getting linking objects happens through Array\");\n      },\n      set() {\n        throw new Error(\"Setting linking objects happens through Array\");\n      },\n    };\n  },\n  [binding.PropertyType.Array]({\n    realm,\n    type,\n    name,\n    columnKey,\n    objectType,\n    embedded,\n    linkOriginPropertyName,\n    getClassHelpers,\n    optional,\n    typeHelpers: { fromBinding },\n  }) {\n    const realmInternal = realm.internal;\n    const itemType = type & ~binding.PropertyType.Flags;\n\n    const itemHelpers = getTypeHelpers(itemType, {\n      realm,\n      name: `element of ${name}`,\n      optional,\n      getClassHelpers,\n      objectType,\n      objectSchemaName: undefined,\n    });\n\n    // Properties of items are only available on lists of objects\n    const isObjectItem = itemType === binding.PropertyType.Object || itemType === binding.PropertyType.LinkingObjects;\n    const collectionHelpers: OrderedCollectionHelpers = {\n      ...itemHelpers,\n      get: isObjectItem ? getObj : getAny,\n    };\n\n    if (itemType === binding.PropertyType.LinkingObjects) {\n      // Locate the table of the targeted object\n      assert.string(objectType, \"object type\");\n      assert(objectType !== \"\", \"Expected a non-empty string\");\n      const targetClassHelpers = getClassHelpers(objectType);\n      const {\n        objectSchema: { tableKey, persistedProperties },\n      } = targetClassHelpers;\n      // TODO: Check if we want to match with the `p.name` or `p.publicName` here\n      const targetProperty = persistedProperties.find((p) => p.name === linkOriginPropertyName);\n      assert(targetProperty, `Expected a '${linkOriginPropertyName}' property on ${objectType}`);\n      const tableRef = binding.Helpers.getTable(realmInternal, tableKey);\n\n      return {\n        get(obj: binding.Obj) {\n          const tableView = obj.getBacklinkView(tableRef, targetProperty.columnKey);\n          const results = binding.Results.fromTableView(realmInternal, tableView);\n          return new Results(realm, results, collectionHelpers);\n        },\n        set() {\n          throw new Error(\"Not supported\");\n        },\n      };\n    } else {\n      const { toBinding: itemToBinding } = itemHelpers;\n      return {\n        collectionHelpers,\n        get(obj: binding.Obj) {\n          const internal = binding.List.make(realm.internal, obj, columnKey);\n          assert.instanceOf(internal, binding.List);\n          return fromBinding(internal);\n        },\n        set(obj, values) {\n          assert.inTransaction(realm);\n          // Implements https://github.com/realm/realm-core/blob/v12.0.0/src/realm/object-store/list.hpp#L258-L286\n          assert.iterable(values);\n          const bindingValues = [];\n          const internal = binding.List.make(realm.internal, obj, columnKey);\n\n          // In case of embedded objects, they're added as they're transformed\n          // So we need to ensure an empty list before\n          if (embedded) {\n            internal.removeAll();\n          }\n          // Transform all values to mixed before inserting into the list\n          {\n            let index = 0;\n            for (const value of values) {\n              try {\n                if (embedded) {\n                  itemToBinding(value, { createObj: () => [internal.insertEmbedded(index), true] });\n                } else {\n                  bindingValues.push(itemToBinding(value));\n                }\n              } catch (err) {\n                if (err instanceof TypeAssertionError) {\n                  err.rename(`${name}[${index}]`);\n                }\n                throw err;\n              }\n              index++;\n            }\n          }\n          // Move values into the internal list - embedded objects are added as they're transformed\n          if (!embedded) {\n            internal.removeAll();\n            let index = 0;\n            for (const value of bindingValues) {\n              internal.insertAny(index++, value);\n            }\n          }\n        },\n      };\n    }\n  },\n  [binding.PropertyType.Dictionary]({ columnKey, realm, name, type, optional, objectType, getClassHelpers, embedded }) {\n    const itemType = type & ~binding.PropertyType.Flags;\n    const itemHelpers = getTypeHelpers(itemType, {\n      realm,\n      name: `value in ${name}`,\n      getClassHelpers,\n      objectType,\n      optional,\n      objectSchemaName: undefined,\n    });\n    return {\n      get(obj) {\n        const internal = binding.Dictionary.make(realm.internal, obj, columnKey);\n        return new Dictionary(realm, internal, itemHelpers);\n      },\n      set(obj, value) {\n        const internal = binding.Dictionary.make(realm.internal, obj, columnKey);\n        // Clear the dictionary before adding new values\n        internal.removeAll();\n        assert.object(value, `values of ${name}`);\n        for (const [k, v] of Object.entries(value)) {\n          try {\n            if (embedded) {\n              itemHelpers.toBinding(v, { createObj: () => [internal.insertEmbedded(k), true] });\n            } else {\n              internal.insertAny(k, itemHelpers.toBinding(v));\n            }\n          } catch (err) {\n            if (err instanceof TypeAssertionError) {\n              err.rename(`${name}[\"${k}\"]`);\n            }\n            throw err;\n          }\n        }\n      },\n    };\n  },\n  [binding.PropertyType.Set]({ columnKey, realm, name, type, optional, objectType, getClassHelpers }) {\n    const itemType = type & ~binding.PropertyType.Flags;\n    const itemHelpers = getTypeHelpers(itemType, {\n      realm,\n      name: `value in ${name}`,\n      getClassHelpers,\n      objectType,\n      optional,\n      objectSchemaName: undefined,\n    });\n    assert.string(objectType);\n    const collectionHelpers: OrderedCollectionHelpers = {\n      get: itemType === binding.PropertyType.Object ? getObj : getAny,\n      fromBinding: itemHelpers.fromBinding,\n      toBinding: itemHelpers.toBinding,\n    };\n    return {\n      get(obj) {\n        const internal = binding.Set.make(realm.internal, obj, columnKey);\n        return new RealmSet(realm, internal, collectionHelpers);\n      },\n      set(obj, value) {\n        const internal = binding.Set.make(realm.internal, obj, columnKey);\n        // Clear the set before adding new values\n        internal.removeAll();\n        assert.array(value, \"values\");\n        for (const v of value) {\n          internal.insertAny(itemHelpers.toBinding(v));\n        }\n      },\n    };\n  },\n};\n\nfunction getPropertyHelpers(type: binding.PropertyType, options: PropertyOptions): PropertyHelpers {\n  const { typeHelpers, columnKey, embedded, objectType } = options;\n  const accessorFactory = ACCESSOR_FACTORIES[type];\n  if (accessorFactory) {\n    const accessors = accessorFactory(options);\n    return { ...accessors, ...typeHelpers, type: options.type, columnKey, embedded, objectType };\n  } else {\n    return {\n      get: defaultGet(options),\n      set: defaultSet(options),\n      ...typeHelpers,\n      type: options.type,\n      columnKey,\n      embedded,\n      objectType,\n    };\n  }\n}\n\nexport function createPropertyHelpers(property: PropertyContext, options: HelperOptions): PropertyHelpers {\n  const collectionType = property.type & binding.PropertyType.Collection;\n  const typeOptions: TypeOptions = {\n    realm: options.realm,\n    name: property.name,\n    getClassHelpers: options.getClassHelpers,\n    objectType: property.objectType,\n    objectSchemaName: property.objectSchemaName,\n    optional: !!(property.type & binding.PropertyType.Nullable),\n  };\n  if (collectionType) {\n    return getPropertyHelpers(collectionType, {\n      ...property,\n      ...options,\n      ...typeOptions,\n      typeHelpers: getTypeHelpers(collectionType, typeOptions),\n    });\n  } else {\n    const baseType = property.type & ~binding.PropertyType.Flags;\n    return getPropertyHelpers(baseType, {\n      ...property,\n      ...options,\n      ...typeOptions,\n      typeHelpers: getTypeHelpers(baseType, typeOptions),\n    });\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { HelperOptions, PropertyHelpers, binding, createPropertyHelpers } from \"./internal\";\n\nclass UninitializedPropertyMapError extends Error {\n  constructor() {\n    super(\"Property Map was accessed before it got initialized\");\n  }\n}\n\n/** @internal */\nexport class PropertyMap {\n  private objectSchemaName: string | null = null;\n  private initialized = false;\n  private mapping: Record<string, PropertyHelpers | undefined> = {};\n  /**\n   * Note: Cannot key by the binding.ColKey directly, as this is `Long` on JSC (which does not pass equality checks like `bigint` does)\n   */\n  private nameByColumnKeyString: Map<string, string> = new Map();\n  private _names: string[] = [];\n\n  public initialize(objectSchema: binding.ObjectSchema, defaults: Record<string, unknown>, options: HelperOptions) {\n    const { name: objectSchemaName, persistedProperties, computedProperties } = objectSchema;\n    this.objectSchemaName = objectSchemaName;\n    const properties = [...persistedProperties, ...computedProperties];\n    this.mapping = Object.fromEntries(\n      properties.map((property) => {\n        const propertyName = property.publicName || property.name;\n        const embedded = property.objectType\n          ? options.getClassHelpers(property.objectType).objectSchema.tableType === binding.TableType.Embedded\n          : false;\n        const helpers = createPropertyHelpers({ ...property, embedded, objectSchemaName }, options);\n        // Allow users to override the default value of properties\n        const defaultValue = defaults[propertyName];\n        helpers.default = typeof defaultValue !== \"undefined\" ? defaultValue : helpers.default;\n        return [propertyName, helpers];\n      }),\n    );\n    this.nameByColumnKeyString = new Map(properties.map((p) => [p.columnKey.toString(), p.publicName || p.name]));\n    this._names = properties.map((p) => p.publicName || p.name);\n    this.initialized = true;\n  }\n\n  public get = (property: string): PropertyHelpers => {\n    if (this.initialized) {\n      const helpers = this.mapping[property];\n      if (!helpers) {\n        throw new Error(`Property '${property}' does not exist on '${this.objectSchemaName}' objects`);\n      }\n      return helpers;\n    } else {\n      throw new UninitializedPropertyMapError();\n    }\n  };\n\n  public getName = <T>(columnKey: binding.ColKey): keyof T => {\n    if (this.initialized) {\n      return this.nameByColumnKeyString.get(columnKey.toString()) as keyof T;\n    } else {\n      throw new UninitializedPropertyMapError();\n    }\n  };\n\n  public get names(): string[] {\n    if (this.initialized) {\n      return this._names;\n    } else {\n      throw new UninitializedPropertyMapError();\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  CanonicalObjectSchema,\n  DefaultObject,\n  INTERNAL_HELPERS,\n  PropertyMap,\n  RealmObject,\n  RealmObjectConstructor,\n  binding,\n} from \"./internal\";\n\ntype ObjectWrapper = (obj: binding.Obj) => (RealmObject & DefaultObject) | null;\n\n/** @internal */\nexport type ClassHelpers = {\n  constructor: RealmObjectConstructor;\n  objectSchema: binding.ObjectSchema;\n  properties: PropertyMap;\n  wrapObject: ObjectWrapper;\n  canonicalObjectSchema: CanonicalObjectSchema;\n};\n\nexport function setClassHelpers(constructor: RealmObjectConstructor, value: ClassHelpers): void {\n  // Store the properties map on the object class\n  Object.defineProperty(constructor, INTERNAL_HELPERS, {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value,\n  });\n}\n\n/**\n * Get internal helpers.\n * NOTE: This is a free function instead of a member of RealmObject to limit conflicts with user defined properties.\n * @param arg The object or constructor to get a helpers for.\n * @returns Helpers injected onto the class by the `ClassMap`.\n */\nexport function getClassHelpers(arg: typeof RealmObject): ClassHelpers {\n  const helpers = arg[INTERNAL_HELPERS];\n  if (helpers) {\n    return helpers as ClassHelpers;\n  } else {\n    throw new Error(`Expected INTERNAL_HELPERS to be set on the '${arg.name}' class`);\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  CanonicalObjectSchema,\n  Constructor,\n  INTERNAL,\n  KEY_ARRAY,\n  KEY_SET,\n  PropertyMap,\n  REALM,\n  Realm,\n  RealmObject,\n  RealmObjectConstructor,\n  assert,\n  binding,\n  getClassHelpers,\n  setClassHelpers,\n} from \"./internal\";\n\n/** @internal */\nexport class ClassMap {\n  private mapping: Record<string, Constructor<unknown>>;\n  private nameByTableKey: Record<binding.TableKey, string>;\n\n  private static createNamedConstructor<T extends Constructor>(name: string): T {\n    const result = function () {\n      /* no-op */\n    };\n    // Need to use `defineProperty` since it isn't writable\n    Object.defineProperty(result, \"name\", { value: name });\n    return result as unknown as T;\n  }\n\n  private static createClass<T extends RealmObjectConstructor = RealmObjectConstructor>(\n    schema: binding.ObjectSchema,\n    constructor: Constructor | undefined,\n  ): T {\n    const result = ClassMap.createNamedConstructor<T>(schema.name);\n    // Make the new constructor extend RealmObject\n    // TODO: Use the end-users constructor, instead of `RealmObject` if provided\n    if (constructor) {\n      Object.setPrototypeOf(result, constructor);\n      Object.setPrototypeOf(result.prototype, constructor.prototype);\n    } else {\n      Object.setPrototypeOf(result, RealmObject);\n      Object.setPrototypeOf(result.prototype, RealmObject.prototype);\n    }\n    return result;\n  }\n\n  private static defineProperties(\n    constructor: Constructor,\n    schema: binding.ObjectSchema,\n    propertyMap: PropertyMap,\n    realm: Realm,\n  ) {\n    // Create bound functions for getting and setting properties\n    const properties = [...schema.persistedProperties, ...schema.computedProperties];\n    const propertyNames = properties.map((p) => p.publicName || p.name);\n\n    // Set up accessors for the properties declared in the schema\n    for (const property of properties) {\n      const propertyName = property.publicName || property.name;\n      const { get, set } = propertyMap.get(propertyName);\n      Object.defineProperty(constructor.prototype, propertyName, {\n        enumerable: true,\n        get(this: RealmObject) {\n          return get(this[INTERNAL]);\n        },\n        set(this: RealmObject, value: unknown) {\n          set(this[INTERNAL], value);\n        },\n      });\n    }\n\n    Object.defineProperty(constructor.prototype, REALM, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: realm,\n    });\n    Object.defineProperty(constructor.prototype, KEY_ARRAY, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: propertyNames,\n    });\n    Object.defineProperty(constructor.prototype, KEY_SET, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: new Set(propertyNames),\n    });\n  }\n\n  constructor(\n    realm: Realm,\n    realmSchema: readonly binding.ObjectSchema[],\n    canonicalRealmSchema: CanonicalObjectSchema[],\n  ) {\n    this.mapping = Object.fromEntries(\n      realmSchema.map((objectSchema, index) => {\n        const canonicalObjectSchema: CanonicalObjectSchema = canonicalRealmSchema[index];\n        assert.object(canonicalObjectSchema);\n        // Create the wrapping class first\n        const constructor = ClassMap.createClass(objectSchema, canonicalObjectSchema.ctor);\n        // Create property getters and setters\n        const properties = new PropertyMap();\n        // Setting the helpers on the class\n        setClassHelpers(constructor, {\n          constructor,\n          objectSchema,\n          canonicalObjectSchema,\n          properties,\n          wrapObject(obj) {\n            if (obj.isValid) {\n              return RealmObject.createWrapper(obj, constructor);\n            } else {\n              return null;\n            }\n          },\n        });\n        return [objectSchema.name, constructor];\n      }),\n    );\n\n    this.nameByTableKey = Object.fromEntries(realmSchema.map(({ name, tableKey }) => [tableKey, name]));\n\n    for (const [index, objectSchema] of realmSchema.entries()) {\n      const canonicalObjectSchema = canonicalRealmSchema[index];\n      const defaults = Object.fromEntries(\n        Object.entries(canonicalObjectSchema.properties).map(([name, property]) => {\n          return [name, property.default];\n        }),\n      );\n      const constructor = this.mapping[objectSchema.name];\n      // Get the uninitialized property map\n      const { properties } = getClassHelpers(constructor as typeof RealmObject);\n      // Initialize the property map, now that all classes have helpers set\n      properties.initialize(objectSchema, defaults, {\n        realm,\n        getClassHelpers: (name: string) => this.getHelpers(name),\n      });\n      // Transfer property getters and setters onto the prototype of the class\n      ClassMap.defineProperties(constructor, objectSchema, properties, realm);\n    }\n  }\n\n  public get<T>(arg: string | binding.TableKey | RealmObject<T> | Constructor<RealmObject<T>>): Constructor<T> {\n    if (typeof arg === \"string\") {\n      const constructor = this.mapping[arg];\n      if (!constructor) {\n        throw new Error(`Object type '${arg}' not found in schema.`);\n      }\n      return constructor as Constructor<T>;\n    } else if (arg instanceof RealmObject) {\n      return this.get(arg.constructor.name) as Constructor<T>;\n    } else if (typeof arg === \"function\") {\n      assert.extends(arg, RealmObject);\n      assert.object(arg.schema, \"schema static\");\n      assert.string(arg.schema.name, \"name\");\n      const result = this.get(arg.schema.name);\n      assert(\n        result === arg || Object.getPrototypeOf(result) === arg,\n        \"Constructor was not registered in the schema for this Realm\",\n      );\n      return result as Constructor<T>;\n    } else if (arg in this.nameByTableKey) {\n      const name = this.nameByTableKey[arg];\n      return this.get(name);\n    } else {\n      throw new Error(\"Expected an object schema name, object instance or class\");\n    }\n  }\n\n  public getHelpers<T>(arg: string | binding.TableKey | RealmObject<T> | Constructor<RealmObject<T>>) {\n    const constructor = this.get(arg);\n    return getClassHelpers(constructor as unknown as typeof RealmObject);\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  BSON,\n  ClassHelpers,\n  Collection,\n  GeoBox,\n  GeoCircle,\n  GeoPolygon,\n  INTERNAL,\n  List,\n  ObjCreator,\n  REALM,\n  Realm,\n  RealmObject,\n  TypeAssertionError,\n  UpdateMode,\n  assert,\n  binding,\n  boxToBindingGeospatial,\n  circleToBindingGeospatial,\n  polygonToBindingGeospatial,\n  safeGlobalThis,\n} from \"./internal\";\n\nconst TYPED_ARRAY_CONSTRUCTORS = new Set(\n  [\n    DataView,\n    Int8Array,\n    Uint8Array,\n    Uint8ClampedArray,\n    Int16Array,\n    Uint16Array,\n    Int32Array,\n    Uint32Array,\n    Float32Array,\n    Float64Array,\n    // These will not be present on old versions of JSC without BigInt support.\n    safeGlobalThis.BigInt64Array,\n    safeGlobalThis.BigUint64Array,\n  ].filter((ctor) => ctor !== undefined),\n);\n\nexport function toArrayBuffer(value: unknown, stringToBase64 = true) {\n  if (typeof value === \"string\" && stringToBase64) {\n    return binding.Helpers.base64Decode(value);\n  }\n  for (const TypedArray of TYPED_ARRAY_CONSTRUCTORS) {\n    if (value instanceof TypedArray) {\n      return value.buffer.slice(value.byteOffset, value.byteOffset + value.byteLength);\n    }\n  }\n  assert.instanceOf(value, ArrayBuffer);\n  return value;\n}\n\n/** @internal */\nexport type TypeHelpers<T = unknown> = {\n  toBinding(value: T, options?: { createObj?: ObjCreator; updateMode?: UpdateMode }): binding.MixedArg;\n  fromBinding(value: unknown): T;\n};\n\nexport type TypeOptions = {\n  realm: Realm;\n  name: string;\n  optional: boolean;\n  objectType: string | undefined;\n  objectSchemaName: string | undefined;\n  getClassHelpers(nameOrTableKey: string | binding.TableKey): ClassHelpers;\n};\n\n// TODO: Consider testing for expected object instance types and throw something similar to the legacy SDK:\n// \"Only Realm instances are supported.\" (which should probably have been \"RealmObject\")\n// instead of relying on the binding to throw.\nexport function mixedToBinding(realm: binding.Realm, value: unknown): binding.MixedArg {\n  if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\" || value === null) {\n    // Fast track pass through for the most commonly used types\n    return value;\n  } else if (value === undefined) {\n    return null;\n  } else if (value instanceof Date) {\n    return binding.Timestamp.fromDate(value);\n  } else if (value instanceof RealmObject) {\n    const otherRealm = value[REALM].internal;\n    assert.isSameRealm(realm, otherRealm, \"Realm object is from another Realm\");\n    return value[INTERNAL];\n  } else if (value instanceof Collection) {\n    throw new Error(`Using a ${value.constructor.name} as Mixed value, is not yet supported`);\n  } else if (Array.isArray(value)) {\n    throw new TypeError(\"A mixed property cannot contain an array of values.\");\n  } else {\n    if (typeof value === \"object\" && value !== null) {\n      if (isGeoCircle(value)) {\n        return circleToBindingGeospatial(value);\n      } else if (isGeoBox(value)) {\n        return boxToBindingGeospatial(value);\n      } else if (isGeoPolygon(value)) {\n        return polygonToBindingGeospatial(value);\n      }\n    }\n    // Convert typed arrays to an `ArrayBuffer`\n    for (const TypedArray of TYPED_ARRAY_CONSTRUCTORS) {\n      if (value instanceof TypedArray) {\n        return value.buffer.slice(value.byteOffset, value.byteOffset + value.byteLength);\n      }\n    }\n    // Rely on the binding for any other value\n    return value as binding.MixedArg;\n  }\n}\nfunction isGeoCircle(value: object): value is GeoCircle {\n  return \"distance\" in value && \"center\" in value && typeof value[\"distance\"] === \"number\";\n}\n\nfunction isGeoBox(value: object): value is GeoBox {\n  return \"bottomLeft\" in value && \"topRight\" in value;\n}\n\nfunction isGeoPolygon(value: object): value is GeoPolygon {\n  return (\n    (\"type\" in value && value[\"type\"] === \"Polygon\" && \"coordinates\" in value && Array.isArray(value[\"coordinates\"])) ||\n    (\"outerRing\" in value && Array.isArray(value[\"outerRing\"]))\n  );\n}\n\nfunction defaultToBinding(value: unknown): binding.MixedArg {\n  return value as binding.MixedArg;\n}\n\nfunction defaultFromBinding(value: unknown) {\n  return value;\n}\n\n/**\n * Adds a branch to a function, which checks for the argument to be null, in which case it returns early.\n */\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any -- Using `unknown` here breaks type inference in `binding.PropertyType.Object` `toBinding` from for some reason */\nfunction nullPassthrough<T, R extends any[], F extends (value: unknown, ...rest: R) => unknown>(\n  this: T,\n  fn: F,\n  enabled: boolean,\n): F {\n  if (enabled) {\n    return ((value, ...rest) =>\n      typeof value === \"undefined\" || value === null ? null : fn.call(this, value, ...rest)) as F;\n  } else {\n    return fn;\n  }\n}\n\nconst TYPES_MAPPING: Record<binding.PropertyType, (options: TypeOptions) => TypeHelpers> = {\n  [binding.PropertyType.Int]({ optional }) {\n    return {\n      toBinding: nullPassthrough((value) => {\n        if (typeof value === \"number\") {\n          return binding.Int64.numToInt(value);\n        } else if (binding.Int64.isInt(value)) {\n          return value;\n        } else {\n          throw new TypeAssertionError(\"a number or bigint\", value);\n        }\n      }, optional),\n      // TODO: Support returning bigints to end-users\n      fromBinding: nullPassthrough((value) => Number(value), optional),\n    };\n  },\n  [binding.PropertyType.Bool]({ optional }) {\n    return {\n      toBinding: nullPassthrough((value) => {\n        assert.boolean(value);\n        return value;\n      }, optional),\n      fromBinding: defaultFromBinding,\n    };\n  },\n  [binding.PropertyType.String]({ optional }) {\n    return {\n      toBinding: nullPassthrough((value) => {\n        assert.string(value);\n        return value;\n      }, optional),\n      fromBinding: defaultFromBinding,\n    };\n  },\n  [binding.PropertyType.Data]({ optional }) {\n    return {\n      toBinding: nullPassthrough((value) => {\n        return toArrayBuffer(value);\n      }, optional),\n      fromBinding: defaultFromBinding,\n    };\n  },\n  [binding.PropertyType.Date]({ optional }) {\n    return {\n      toBinding: nullPassthrough((value) => {\n        if (typeof value === \"string\") {\n          // TODO: Consider deprecating this undocumented type coercion\n          return binding.Timestamp.fromDate(new Date(value));\n        } else {\n          assert.instanceOf(value, Date);\n          return binding.Timestamp.fromDate(value);\n        }\n      }, optional),\n      fromBinding: nullPassthrough((value) => {\n        assert.instanceOf(value, binding.Timestamp);\n        return value.toDate();\n      }, optional),\n    };\n  },\n  [binding.PropertyType.Float]({ optional }) {\n    return {\n      toBinding: nullPassthrough((value) => {\n        assert.number(value);\n        return new binding.Float(value);\n      }, optional),\n      fromBinding: nullPassthrough((value) => {\n        assert.instanceOf(value, binding.Float);\n        return value.value;\n      }, optional),\n    };\n  },\n  [binding.PropertyType.Double]({ optional }) {\n    return {\n      toBinding: nullPassthrough((value) => {\n        assert.number(value);\n        return value;\n      }, optional),\n      fromBinding: defaultFromBinding,\n    };\n  },\n  [binding.PropertyType.Object]({ realm, name, objectType, optional, getClassHelpers }) {\n    assert(objectType);\n    const helpers = getClassHelpers(objectType);\n    const { wrapObject } = helpers;\n    return {\n      toBinding: nullPassthrough((value, options) => {\n        if (\n          value instanceof RealmObject &&\n          value.constructor.name === objectType &&\n          value[REALM].internal.$addr === realm.internal.$addr\n        ) {\n          return value[INTERNAL];\n        } else {\n          // TODO: Consider exposing a way for calling code to disable object creation\n          assert.object(value, name);\n          // Use the update mode if set; otherwise, the object is assumed to be an\n          // unmanaged object that the user wants to create.\n          // TODO: Ideally use `options?.updateMode` instead of `realm.currentUpdateMode`.\n          const createdObject = RealmObject.create(realm, value, realm.currentUpdateMode ?? UpdateMode.Never, {\n            helpers,\n            createObj: options?.createObj,\n          });\n          return createdObject[INTERNAL];\n        }\n      }, optional),\n      fromBinding: nullPassthrough((value) => {\n        if (value instanceof binding.ObjLink) {\n          const table = binding.Helpers.getTable(realm.internal, value.tableKey);\n          const linkedObj = table.getObject(value.objKey);\n          return wrapObject(linkedObj);\n        } else {\n          assert.instanceOf(value, binding.Obj);\n          return wrapObject(value);\n        }\n      }, optional),\n    };\n  },\n  [binding.PropertyType.LinkingObjects]({ objectType, getClassHelpers }) {\n    assert(objectType);\n    const { wrapObject } = getClassHelpers(objectType);\n    return {\n      toBinding: defaultToBinding,\n      fromBinding(value) {\n        assert.instanceOf(value, binding.Obj);\n        return wrapObject(value);\n      },\n    };\n  },\n  [binding.PropertyType.Mixed]({ realm, getClassHelpers }) {\n    return {\n      toBinding: mixedToBinding.bind(null, realm.internal),\n      fromBinding(value) {\n        if (binding.Int64.isInt(value)) {\n          return binding.Int64.intToNum(value);\n        } else if (value instanceof binding.Timestamp) {\n          return value.toDate();\n        } else if (value instanceof binding.Float) {\n          return value.value;\n        } else if (value instanceof binding.ObjLink) {\n          const table = binding.Helpers.getTable(realm.internal, value.tableKey);\n          const linkedObj = table.getObject(value.objKey);\n          const { wrapObject } = getClassHelpers(value.tableKey);\n          return wrapObject(linkedObj);\n        } else {\n          return value;\n        }\n      },\n    };\n  },\n  [binding.PropertyType.ObjectId]({ optional }) {\n    return {\n      toBinding: nullPassthrough((value) => {\n        assert.instanceOf(value, BSON.ObjectId);\n        return value;\n      }, optional),\n      fromBinding: defaultFromBinding,\n    };\n  },\n  [binding.PropertyType.Decimal]({ optional }) {\n    return {\n      toBinding: nullPassthrough((value) => {\n        assert.instanceOf(value, BSON.Decimal128);\n        return value;\n      }, optional),\n      fromBinding: defaultFromBinding,\n    };\n  },\n  [binding.PropertyType.Uuid]({ optional }) {\n    return {\n      toBinding: nullPassthrough((value) => {\n        assert.instanceOf(value, BSON.UUID);\n        return value;\n      }, optional),\n      fromBinding: defaultFromBinding,\n    };\n  },\n  [binding.PropertyType.Array]({ realm, getClassHelpers, name, objectSchemaName }) {\n    assert.string(objectSchemaName, \"objectSchemaName\");\n    const classHelpers = getClassHelpers(objectSchemaName);\n    return {\n      fromBinding(value: unknown) {\n        assert.instanceOf(value, binding.List);\n        const propertyHelpers = classHelpers.properties.get(name);\n        const collectionHelpers = propertyHelpers.collectionHelpers;\n        assert.object(collectionHelpers);\n        return new List(realm, value, collectionHelpers);\n      },\n      toBinding() {\n        throw new Error(\"Not supported\");\n      },\n    };\n  },\n  [binding.PropertyType.Set]() {\n    return {\n      fromBinding() {\n        throw new Error(\"Not yet supported\");\n      },\n      toBinding() {\n        throw new Error(\"Not yet supported\");\n      },\n    };\n  },\n  [binding.PropertyType.Dictionary]() {\n    return {\n      fromBinding() {\n        throw new Error(\"Not supported\");\n      },\n      toBinding() {\n        throw new Error(\"Not supported\");\n      },\n    };\n  },\n  [binding.PropertyType.Nullable]() {\n    throw new Error(\"Not directly mappable\");\n  },\n  [binding.PropertyType.Collection]() {\n    throw new Error(\"Not directly mappable\");\n  },\n  [binding.PropertyType.Flags]() {\n    throw new Error(\"Not directly mappable\");\n  },\n};\n\nexport function getTypeHelpers(type: binding.PropertyType, options: TypeOptions): TypeHelpers {\n  const helpers = TYPES_MAPPING[type];\n  assert(helpers, `Unexpected type ${type}`);\n  return helpers(options);\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  AssertionError,\n  BSON,\n  CanonicalObjectSchema,\n  ClassHelpers,\n  Constructor,\n  DefaultObject,\n  Dictionary,\n  JSONCacheMap,\n  ObjectChangeCallback,\n  ObjectListeners,\n  OmittedRealmTypes,\n  OrderedCollection,\n  OrderedCollectionHelpers,\n  Realm,\n  RealmObjectConstructor,\n  Results,\n  TypeAssertionError,\n  Unmanaged,\n  assert,\n  binding,\n  flags,\n  getTypeName,\n} from \"./internal\";\n\n/**\n * The update mode to use when creating an object that already exists.\n */\nexport enum UpdateMode {\n  /**\n   * Objects are only created. If an existing object exists, an exception is thrown.\n   */\n  Never = \"never\",\n  /**\n   * If an existing object exists, only properties where the value has actually\n   * changed will be updated. This improves notifications and server side\n   * performance but also have implications for how changes across devices are\n   * merged. For most use cases, the behavior will match the intuitive behavior\n   * of how changes should be merged, but if updating an entire object is\n   * considered an atomic operation, this mode should not be used.\n   */\n  Modified = \"modified\",\n  /**\n   * If an existing object is found, all properties provided will be updated,\n   * any other properties will remain unchanged.\n   */\n  All = \"all\",\n}\n\n/** @internal */\nexport type ObjCreator = () => [binding.Obj, boolean];\n\ntype CreationContext = {\n  helpers: ClassHelpers;\n  createObj?: ObjCreator;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type AnyRealmObject = RealmObject<any>;\n\nexport const KEY_ARRAY = Symbol(\"Object#keys\");\nexport const KEY_SET = Symbol(\"Object#keySet\");\nexport const REALM = Symbol(\"Object#realm\");\nexport const INTERNAL = Symbol(\"Object#internal\");\nconst INTERNAL_LISTENERS = Symbol(\"Object#listeners\");\nexport const INTERNAL_HELPERS = Symbol(\"Object.helpers\");\nconst DEFAULT_PROPERTY_DESCRIPTOR: PropertyDescriptor = { configurable: true, enumerable: true, writable: true };\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst PROXY_HANDLER: ProxyHandler<RealmObject<any>> = {\n  ownKeys(target) {\n    return Reflect.ownKeys(target).concat(target[KEY_ARRAY]);\n  },\n  getOwnPropertyDescriptor(target, prop) {\n    if (typeof prop === \"string\" && target[KEY_SET].has(prop)) {\n      return DEFAULT_PROPERTY_DESCRIPTOR;\n    }\n    const result = Reflect.getOwnPropertyDescriptor(target, prop);\n    if (result && typeof prop === \"symbol\") {\n      if (prop === INTERNAL) {\n        result.enumerable = false;\n        result.writable = false;\n      } else if (prop === INTERNAL_LISTENERS) {\n        result.enumerable = false;\n      }\n    }\n    return result;\n  },\n};\n\n/**\n * Base class for a Realm Object.\n * @example\n * To define a class `Person` with required `name` and `age`\n * properties, define a `static schema`:\n * ```\n * class Person extends Realm.Object<Person> {\n *   _id!: Realm.BSON.ObjectId;\n *   name!: string;\n *   age!: number;\n *   static schema: Realm.ObjectSchema = {\n *     name: \"Person\",\n *     primaryKey: \"_id\",\n *     properties: {\n *       _id: \"objectId\",\n *       name: \"string\",\n *       age: \"int\",\n *     },\n *   };\n * }\n * ```\n * @example\n * If using the [@realm/babel-plugin](https://www.npmjs.com/package/@realm/babel-plugin):\n * To define a class `Person` with required `name` and `age` properties, they would\n * need to be specified in the type argument when it is being constructed to allow\n * Typescript-only model definitions:\n * ```\n * class Person extends Realm.Object<Person, \"name\" | \"age\"> {\n *   _id = new Realm.Types.ObjectId();\n *   name: Realm.Types.String;\n *   age: Realm.Types.Int;\n *   static primaryKey = \"_id\";\n * }\n * ```\n * @see {@link ObjectSchema}\n * @typeParam `T` - The type of this class (e.g. if your class is `Person`,\n * `T` should also be `Person` - this duplication is required due to how\n * TypeScript works)\n * @typeParam `RequiredProperties` - The names of any properties of this\n * class which are required when an instance is constructed with `new`. Any\n * properties not specified will be optional, and will default to a sensible\n * null value if no default is specified elsewhere.\n */\nexport class RealmObject<T = DefaultObject, RequiredProperties extends keyof OmittedRealmTypes<T> = never> {\n  /**\n   * This property is stored on the per class prototype when transforming the schema.\n   * @internal\n   */\n  public static [INTERNAL_HELPERS]: ClassHelpers;\n\n  public static allowValuesArrays = false;\n\n  /**\n   * Optionally specify the primary key of the schema when using [@realm/babel-plugin](https://www.npmjs.com/package/@realm/babel-plugin).\n   */\n  static primaryKey?: string;\n\n  /**\n   * Optionally specify that the schema is an embedded schema when using [@realm/babel-plugin](https://www.npmjs.com/package/@realm/babel-plugin).\n   */\n  static embedded?: boolean;\n\n  /**\n   * Optionally specify that the schema should sync unidirectionally if using flexible sync when using [@realm/babel-plugin](https://www.npmjs.com/package/@realm/babel-plugin).\n   */\n  static asymmetric?: boolean;\n\n  /**\n   * Create an object in the database and set values on it\n   * @internal\n   */\n  public static create(\n    realm: Realm,\n    values: Record<string, unknown>,\n    mode: UpdateMode,\n    context: CreationContext,\n  ): RealmObject {\n    assert.inTransaction(realm);\n    if (Array.isArray(values)) {\n      if (flags.ALLOW_VALUES_ARRAYS) {\n        const { persistedProperties } = context.helpers.objectSchema;\n        return RealmObject.create(\n          realm,\n          Object.fromEntries(\n            values.map((value, index) => {\n              const property = persistedProperties[index];\n              const propertyName = property.publicName || property.name;\n              return [propertyName, value];\n            }),\n          ),\n          mode,\n          context,\n        );\n      } else {\n        throw new Error(\"Array values on object creation is no longer supported\");\n      }\n    }\n    const {\n      helpers: {\n        properties,\n        wrapObject,\n        objectSchema: { persistedProperties },\n      },\n      createObj,\n    } = context;\n\n    // Create the underlying object\n    const [obj, created] = createObj ? createObj() : this.createObj(realm, values, mode, context);\n    const result = wrapObject(obj);\n    assert(result);\n    // Persist any values provided\n    // TODO: Consider using the property helpers directly to improve performance\n    for (const property of persistedProperties) {\n      const propertyName = property.publicName || property.name;\n      const { default: defaultValue } = properties.get(propertyName);\n      if (property.isPrimary) {\n        continue; // Skip setting this, as we already provided it on object creation\n      }\n      const propertyValue = values[propertyName];\n      if (typeof propertyValue !== \"undefined\") {\n        if (mode !== UpdateMode.Modified || result[propertyName] !== propertyValue) {\n          // This will call into the property setter in PropertyHelpers.ts.\n          // (E.g. the setter for [binding.PropertyType.Array] in the case of lists.)\n          result[propertyName] = propertyValue;\n        }\n      } else {\n        if (typeof defaultValue !== \"undefined\") {\n          result[propertyName] = typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n        } else if (\n          !(property.type & binding.PropertyType.Collection) &&\n          !(property.type & binding.PropertyType.Nullable) &&\n          created\n        ) {\n          throw new Error(`Missing value for property '${propertyName}'`);\n        }\n      }\n    }\n    return result as RealmObject;\n  }\n\n  /**\n   * Create an object in the database and populate its primary key value, if required\n   * @internal\n   */\n  private static createObj(\n    realm: Realm,\n    values: DefaultObject,\n    mode: UpdateMode,\n    context: CreationContext,\n  ): [binding.Obj, boolean] {\n    const {\n      helpers: {\n        objectSchema: { name, tableKey, primaryKey },\n        properties,\n      },\n    } = context;\n\n    // Create the underlying object\n    const table = binding.Helpers.getTable(realm.internal, tableKey);\n    if (primaryKey) {\n      const primaryKeyHelpers = properties.get(primaryKey);\n      let primaryKeyValue = values[primaryKey];\n\n      // If the value for the primary key was not set, use the default value\n      if (primaryKeyValue === undefined) {\n        const defaultValue = primaryKeyHelpers.default;\n        primaryKeyValue = typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n      }\n\n      const pk = primaryKeyHelpers.toBinding(\n        // Fallback to default value if the provided value is undefined or null\n        typeof primaryKeyValue !== \"undefined\" && primaryKeyValue !== null\n          ? primaryKeyValue\n          : primaryKeyHelpers.default,\n      );\n\n      const result = binding.Helpers.getOrCreateObjectWithPrimaryKey(table, pk);\n      const [, created] = result;\n      if (mode === UpdateMode.Never && !created) {\n        throw new Error(\n          `Attempting to create an object of type '${name}' with an existing primary key value '${primaryKeyValue}'.`,\n        );\n      }\n      return result;\n    } else {\n      return [table.createObject(), true];\n    }\n  }\n\n  /**\n   * Create a wrapper for accessing an object from the database\n   * @internal\n   */\n  public static createWrapper<T = DefaultObject>(internal: binding.Obj, constructor: Constructor): RealmObject<T> & T {\n    const result = Object.create(constructor.prototype);\n    result[INTERNAL] = internal;\n    // Initializing INTERNAL_LISTENERS here rather than letting it just be implicitly undefined since JS engines\n    // prefer adding all fields to objects upfront. Adding optional fields later can sometimes trigger deoptimizations.\n    result[INTERNAL_LISTENERS] = null;\n\n    // Wrap in a proxy to trap keys, enabling the spread operator, and hiding our internal fields.\n    return new Proxy(result, PROXY_HANDLER);\n  }\n\n  /**\n   * Create a `RealmObject` wrapping an `Obj` from the binding.\n   * @param realm - The Realm managing the object.\n   * @param values - The values of the object's properties at creation.\n   */\n  public constructor(realm: Realm, values: Unmanaged<T, RequiredProperties>) {\n    return realm.create(this.constructor as RealmObjectConstructor, values) as unknown as this;\n  }\n\n  /**\n   * The Realm managing the object.\n   * Note: this is on the injected prototype from ClassMap.defineProperties().\n   * @internal\n   */\n  public declare readonly [REALM]: Realm;\n\n  /**\n   * The object's representation in the binding.\n   * @internal\n   */\n  public declare readonly [INTERNAL]: binding.Obj;\n\n  /**\n   * Lazily created wrapper for the object notifier.\n   * @internal\n   */\n  private declare [INTERNAL_LISTENERS]: ObjectListeners<T> | null;\n\n  /**\n   * Note: this is on the injected prototype from ClassMap.defineProperties()\n   * @internal\n   */\n  private declare readonly [KEY_ARRAY]: ReadonlyArray<string>;\n\n  /**\n   * Note: this is on the injected prototype from ClassMap.defineProperties()\n   * @internal\n   */\n  private declare readonly [KEY_SET]: ReadonlySet<string>;\n\n  /**\n   * @returns An array of the names of the object's properties.\n   * @deprecated Please use {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys | Object.keys()}\n   */\n  keys(): string[] {\n    // copying to prevent caller from modifying the static array.\n    return [...this[KEY_ARRAY]];\n  }\n\n  /**\n   * @returns An array of key/value pairs of the object's properties.\n   * @deprecated Please use {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries | Object.entries()}\n   */\n  entries(): [string, unknown][] {\n    return Object.entries(this);\n  }\n\n  /**\n   * The plain object representation for JSON serialization.\n   * Use circular JSON serialization libraries such as [@ungap/structured-clone](https://www.npmjs.com/package/@ungap/structured-clone)\n   * and [flatted](https://www.npmjs.com/package/flatted) to stringify Realm entities that have circular structures.\n   * @returns A plain object.\n   */\n  toJSON(_?: string, cache?: unknown): DefaultObject;\n  /** @internal */\n  toJSON(_?: string, cache = new JSONCacheMap()): DefaultObject {\n    // Construct a reference-id of table-name & primaryKey if it exists, or fall back to objectId.\n\n    // Check if current objectId has already processed, to keep object references the same.\n    const existing = cache.find(this);\n    if (existing) {\n      return existing;\n    }\n    const result: DefaultObject = {};\n    cache.add(this, result);\n    // Move all enumerable keys to result, triggering any specific toJSON implementation in the process.\n    for (const key in this) {\n      const value = this[key];\n      if (typeof value == \"function\") {\n        continue;\n      }\n      if (value instanceof RealmObject || value instanceof OrderedCollection || value instanceof Dictionary) {\n        // recursively trigger `toJSON` for Realm instances with the same cache.\n        result[key] = value.toJSON(key, cache);\n      } else {\n        // Other cases, including null and undefined.\n        result[key] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Checks if this object has not been deleted and is part of a valid Realm.\n   * @returns `true` if the object can be safely accessed, `false` if not.\n   */\n  isValid(): boolean {\n    return this[INTERNAL] && this[INTERNAL].isValid;\n  }\n\n  /**\n   * The schema for the type this object belongs to.\n   * @returns The {@link CanonicalObjectSchema} that describes this object.\n   */\n  objectSchema(): CanonicalObjectSchema<T> {\n    return this[REALM].getClassHelpers(this).canonicalObjectSchema as CanonicalObjectSchema<T>;\n  }\n\n  /**\n   * Returns all the objects that link to this object in the specified relationship.\n   * @param objectType - The type of the objects that link to this object's type.\n   * @param propertyName - The name of the property that references objects of this object's type.\n   * @throws An {@link AssertionError} if the relationship is not valid.\n   * @returns The {@link Results} that link to this object.\n   */\n  linkingObjects<T = DefaultObject>(objectType: string, propertyName: string): Results<RealmObject<T> & T>;\n  linkingObjects<T extends AnyRealmObject>(objectType: Constructor<T>, propertyName: string): Results<T>;\n  linkingObjects<T extends AnyRealmObject>(objectType: string | Constructor<T>, propertyName: string): Results<T> {\n    const targetClassHelpers = this[REALM].getClassHelpers(objectType);\n    const { objectSchema: targetObjectSchema, properties, wrapObject } = targetClassHelpers;\n    const targetProperty = properties.get(propertyName);\n    const originObjectSchema = this.objectSchema();\n\n    assert(\n      originObjectSchema.name === targetProperty.objectType,\n      () => `'${targetObjectSchema.name}#${propertyName}' is not a relationship to '${originObjectSchema.name}'`,\n    );\n\n    const collectionHelpers: OrderedCollectionHelpers = {\n      // See `[binding.PropertyType.LinkingObjects]` in `TypeHelpers.ts`.\n      toBinding(value: unknown) {\n        return value as binding.MixedArg;\n      },\n      fromBinding(value: unknown) {\n        assert.instanceOf(value, binding.Obj);\n        return wrapObject(value);\n      },\n      // See `[binding.PropertyType.Array]` in `PropertyHelpers.ts`.\n      get(results: binding.Results, index: number) {\n        return results.getObj(index);\n      },\n    };\n\n    // Create the Result for the backlink view.\n    const tableRef = binding.Helpers.getTable(this[REALM].internal, targetObjectSchema.tableKey);\n    const tableView = this[INTERNAL].getBacklinkView(tableRef, targetProperty.columnKey);\n    const results = binding.Results.fromTableView(this[REALM].internal, tableView);\n\n    return new Results(this[REALM], results, collectionHelpers);\n  }\n\n  /**\n   * Returns the total count of incoming links to this object\n   * @returns The number of links to this object.\n   */\n  linkingObjectsCount(): number {\n    return this[INTERNAL].getBacklinkCount();\n  }\n\n  /**\n   * @deprecated\n   * TODO: Remove completely once the type tests are abandoned.\n   */\n  _objectId(): string {\n    throw new Error(\"This is now removed!\");\n  }\n\n  /**\n   * A string uniquely identifying the object across all objects of the same type.\n   */\n  _objectKey(): string {\n    return this[INTERNAL].key.toString();\n  }\n\n  /**\n   * Add a listener `callback` which will be called when a **live** object instance changes.\n   * @param callback - A function to be called when changes occur.\n   * @param callback.obj - The object that changed.\n   * @param callback.changes - A dictionary with information about the changes.\n   * @param callback.changes.deleted - Is `true` if the object has been deleted.\n   * @param callback.changes.changedProperties  - An array of properties that have changed their value.\n   * @throws A {@link TypeAssertionError} if `callback` is not a function.\n   * @example\n   * wine.addListener((obj, changes) => {\n   *  // obj === wine\n   *  console.log(`object is deleted: ${changes.deleted}`);\n   *  console.log(`${changes.changedProperties.length} properties have been changed:`);\n   *  changes.changedProperties.forEach(prop => {\n   *      console.log(` ${prop}`);\n   *   });\n   * })\n   * @note Adding the listener is an asynchronous operation, so the callback is invoked the first time to notify the caller when the listener has been added.\n   * Thus, when the callback is invoked the first time it will contain empty array for `changes.changedProperties`.\n   */\n  addListener(callback: ObjectChangeCallback<T>): void {\n    assert.function(callback);\n    if (!this[INTERNAL_LISTENERS]) {\n      this[INTERNAL_LISTENERS] = new ObjectListeners<T>(this[REALM].internal, this);\n    }\n    this[INTERNAL_LISTENERS].addListener(callback);\n  }\n\n  /**\n   * Remove the listener `callback` from this object.\n   * @throws A {@link TypeAssertionError} if `callback` is not a function.\n   * @param callback A function previously added as listener\n   */\n  removeListener(callback: ObjectChangeCallback<T>): void {\n    assert.function(callback);\n    // Note: if the INTERNAL_LISTENERS field hasn't been initialized, then we have no listeners to remove.\n    this[INTERNAL_LISTENERS]?.removeListener(callback);\n  }\n\n  /**\n   * Remove all listeners from this object.\n   */\n  removeAllListeners(): void {\n    // Note: if the INTERNAL_LISTENERS field hasn't been initialized, then we have no listeners to remove.\n    this[INTERNAL_LISTENERS]?.removeAllListeners();\n  }\n\n  /**\n   * Get underlying type of a property value.\n   * @param propertyName - The name of the property to retrieve the type of.\n   * @throws An {@link Error} if property does not exist.\n   * @returns Underlying type of the property value.\n   */\n  getPropertyType(propertyName: string): string {\n    const { properties } = this[REALM].getClassHelpers(this);\n    const { type, objectType, columnKey } = properties.get(propertyName);\n    const typeName = getTypeName(type, objectType);\n    if (typeName === \"mixed\") {\n      // This requires actually getting the object and inferring its type\n      const value = this[INTERNAL].getAny(columnKey);\n      if (value === null) {\n        return \"null\";\n      } else if (binding.Int64.isInt(value)) {\n        return \"int\";\n      } else if (value instanceof binding.Float) {\n        return \"float\";\n      } else if (value instanceof binding.Timestamp) {\n        return \"date\";\n      } else if (value instanceof binding.Obj) {\n        const { objectSchema } = this[REALM].getClassHelpers(value.table.key);\n        return `<${objectSchema.name}>`;\n      } else if (value instanceof binding.ObjLink) {\n        const { objectSchema } = this[REALM].getClassHelpers(value.tableKey);\n        return `<${objectSchema.name}>`;\n      } else if (value instanceof ArrayBuffer) {\n        return \"data\";\n      } else if (typeof value === \"number\") {\n        return \"double\";\n      } else if (typeof value === \"string\") {\n        return \"string\";\n      } else if (typeof value === \"boolean\") {\n        return \"bool\";\n      } else if (value instanceof BSON.ObjectId) {\n        return \"objectId\";\n      } else if (value instanceof BSON.Decimal128) {\n        return \"decimal128\";\n      } else if (value instanceof BSON.UUID) {\n        return \"uuid\";\n      } else {\n        assert.never(value, \"value\");\n      }\n    } else {\n      return typeName;\n    }\n  }\n}\n\n// We like to refer to this as \"Realm.Object\"\n// TODO: Determine if we want to revisit this if we're going away from a namespaced API\nObject.defineProperty(RealmObject, \"name\", { value: \"Realm.Object\" });\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { INTERNAL, Listeners, PropertyMap, RealmObject, binding, getClassHelpers } from \"./internal\";\n\nexport type ObjectChangeSet<T> = { deleted: boolean; changedProperties: (keyof T)[] };\nexport type ObjectChangeCallback<T> = (object: RealmObject<T> & T, changes: ObjectChangeSet<T>) => void;\n\n/** @internal */\nexport class ObjectListeners<T> {\n  /**\n   * Storage for the memoized, lazily created object notifier.\n   */\n  private internal!: binding.ObjectNotifier | null;\n\n  constructor(private realm: binding.Realm, private object: RealmObject<T>) {\n    this.properties = getClassHelpers(this.object.constructor as typeof RealmObject).properties;\n  }\n\n  private properties: PropertyMap;\n\n  private listeners = new Listeners<ObjectChangeCallback<T>, binding.NotificationToken>({\n    add: (callback) => {\n      const token = this.notifier.addCallback((changes) => {\n        try {\n          callback(this.object as RealmObject<T> & T, {\n            deleted: changes.isDeleted,\n            changedProperties: changes.changedColumns.map(this.properties.getName),\n          });\n        } catch (err) {\n          // Scheduling a throw on the event loop,\n          // since throwing synchronously here would result in an abort in the calling C++\n          setImmediate(() => {\n            throw err;\n          });\n        }\n      }, undefined);\n      // Get an actual NotificationToken for the bigint value\n      return binding.NotificationToken.forObject(this.notifier, token);\n    },\n    remove(token) {\n      token.unregister();\n    },\n  });\n\n  /**\n   * A memoized, lazily created object notifier.\n   */\n  private get notifier() {\n    let notifier = this.internal;\n    if (notifier) {\n      return notifier;\n    } else {\n      notifier = binding.Helpers.makeObjectNotifier(this.realm, this.object[INTERNAL]);\n      this.internal = notifier;\n      return notifier;\n    }\n  }\n\n  addListener(callback: ObjectChangeCallback<T>): void {\n    this.listeners.add(callback);\n  }\n\n  removeListener(callback: ObjectChangeCallback<T>): void {\n    this.listeners.remove(callback);\n  }\n\n  removeAllListeners(): void {\n    this.listeners.removeAll();\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport type { Dictionary, List, Results } from \"./internal\";\nimport { CallbackAdder, IllegalConstructorError, Listeners, TypeAssertionError, assert, binding } from \"./internal\";\n\n/**\n * Abstract base class containing methods shared by Realm {@link List}, {@link Dictionary} and {@link Results}.\n *\n * A {@link Collection} always reflect the current state of the Realm. The one exception to this is\n * when using `for...in` or `for...of` enumeration, which will always enumerate over the\n * objects which matched the query when the enumeration is begun, even if some of them are\n * deleted or modified to be excluded by the filter during the enumeration.\n * @since 0.11.0\n */\nexport abstract class Collection<\n  KeyType = unknown,\n  ValueType = unknown,\n  EntryType = [KeyType, ValueType],\n  T = ValueType,\n  ChangeCallbackType = unknown,\n> implements Iterable<T>\n{\n  /** @internal */\n  private listeners: Listeners<ChangeCallbackType, binding.NotificationToken>;\n\n  /** @internal */\n  constructor(addListener: CallbackAdder<ChangeCallbackType, binding.NotificationToken>) {\n    if (arguments.length === 0) {\n      throw new IllegalConstructorError(\"Collection\");\n    }\n    this.listeners = new Listeners<ChangeCallbackType, binding.NotificationToken>({\n      add: addListener,\n      remove(token) {\n        token.unregister();\n      },\n    });\n    // Make the internal properties non-enumerable\n    Object.defineProperty(this, \"listeners\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n    });\n  }\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/keys Array.prototype.keys}\n   * @returns An iterator with all keys in the collection.\n   * @since 0.11.0\n   */\n  abstract keys(): Iterable<KeyType>;\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/keys Array.prototype.keys}\n   * @returns An iterator with all values in the collection.\n   * @since 0.11.0\n   */\n  abstract values(): Iterable<ValueType>;\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries Array.prototype.keys}\n   * @returns An iterator with all key/value pairs in the collection.\n   * @since 0.11.0\n   */\n  abstract entries(): Iterable<EntryType>;\n\n  /**\n   * This is the same method as the {@link Collection.values} method.\n   * Its presence makes collections _iterable_, thus able to be used with ES6\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of `for-of`}\n   * loops,\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator `...`}\n   * spread operators, and more.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator Symbol.iterator}\n   *   and the {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable iterable protocol}\n   * @returns An iterable of each value in the collection.\n   * @example\n   * for (let object of collection) {\n   *   // do something with each object\n   * }\n   * @since 0.11.0\n   */\n  abstract [Symbol.iterator](): Iterator<T>;\n\n  /**\n   * Checks if this collection has not been deleted and is part of a valid Realm.\n   * @returns `true` if the collection can be safely accessed.\n   * @since 0.14.0\n   */\n  abstract isValid(): boolean;\n\n  /**\n   * Add a listener `callback` which will be called when a **live** collection instance changes.\n   * @param callback - A function to be called when changes occur.\n   * @param callback.collection - The collection instance that changed,\n   * @param callback.changes - An object with information about the changes.\n   * @param callback.changes.insertions - The indices in the collection where objects were inserted.\n   * @param callback.changes.newModifications - The indices in the collection where objects were modified.\n   * @param callback.changes.oldModifications - The indices in the collection where objects were modified.\n   * @param callback.changes.deletions - The indices in the collection where objects were deleted.\n   * @note `deletions and `oldModifications` report the indices in the collection before the change happened,\n   * while `insertions` and `newModifications` report the indices into the new version of the collection.\n   * @throws A {@link TypeAssertionError} if `callback` is not a function.\n   * @example\n   * wines.addListener((collection, changes) => {\n   *  // collection === wines\n   *  console.log(`${changes.insertions.length} insertions`);\n   *  console.log(`${changes.oldModifications.length} oldModifications`);\n   *  console.log(`${changes.newModifications.length} newModifications`);\n   *  console.log(`${changes.deletions.length} deletions`);\n   *  console.log(`new size of collection: ${collection.length}`);\n   * });\n   * @note Adding the listener is an asynchronous operation, so the callback is invoked the first time to notify the caller when the listener has been added.\n   * Thus, when the callback is invoked the first time it will contain empty arrays for each property in the `changes` object.\n   */\n  addListener(callback: ChangeCallbackType): void {\n    assert.function(callback, \"callback\");\n    this.listeners.add(callback);\n  }\n\n  /**\n   * Remove the listener `callback` from the collection instance.\n   * @param callback - Callback function that was previously\n   *   added as a listener through the {@link Collection.addListener} method.\n   * @throws a {@link TypeAssertionError} If `callback` is not a function.\n   */\n  removeListener(callback: ChangeCallbackType): void {\n    assert.function(callback, \"callback\");\n    this.listeners.remove(callback);\n  }\n\n  /**\n   * Remove all `callback` listeners from the collection instance.\n   */\n  removeAllListeners(): void {\n    this.listeners.removeAll();\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  ClassHelpers,\n  Collection,\n  DefaultObject,\n  INTERNAL,\n  IllegalConstructorError,\n  JSONCacheMap,\n  Realm,\n  RealmObject,\n  Results,\n  TypeAssertionError,\n  TypeHelpers,\n  assert,\n  binding,\n  getTypeName,\n  mixedToBinding,\n  unwind,\n} from \"./internal\";\n\nconst DEFAULT_COLUMN_KEY = binding.Int64.numToInt(0) as unknown as binding.ColKey;\n\ntype PropertyType = string;\n\n/**\n * A sort descriptor is either a string containing one or more property names\n * separate by dots or an array with two items: `[propertyName, reverse]`.\n */\nexport type SortDescriptor = string | [string, boolean];\n\nexport type CollectionChangeSet = {\n  insertions: number[];\n  deletions: number[];\n  newModifications: number[];\n  oldModifications: number[];\n};\nexport type CollectionChangeCallback<T = unknown, EntryType extends [unknown, unknown] = [unknown, unknown]> = (\n  collection: OrderedCollection<T, EntryType>,\n  changes: CollectionChangeSet,\n) => void;\n\n/** @internal */\nexport type OrderedCollectionHelpers = TypeHelpers & {\n  get(results: binding.Results, index: number): unknown;\n};\n\nconst DEFAULT_PROPERTY_DESCRIPTOR: PropertyDescriptor = { configurable: true, enumerable: true, writable: true };\nconst PROXY_HANDLER: ProxyHandler<OrderedCollection> = {\n  // TODO: Consider executing the `parseInt` first to optimize for index access over accessing a member on the list\n  get(target, prop) {\n    if (Reflect.has(target, prop)) {\n      return Reflect.get(target, prop);\n    } else if (typeof prop === \"string\") {\n      const index = Number.parseInt(prop, 10);\n      // TODO: Consider catching an error from access out of bounds, instead of checking the length, to optimize for the hot path\n      if (!Number.isNaN(index) && index >= 0 && index < target.length) {\n        return target.get(index);\n      }\n    }\n  },\n  set(target, prop, value, receiver) {\n    if (typeof prop === \"string\") {\n      const index = Number.parseInt(prop, 10);\n      // TODO: Consider catching an error from access out of bounds, instead of checking the length, to optimize for the hot path\n      // TODO: Do we expect an upper bound check on the index when setting?\n      if (Number.isInteger(index)) {\n        if (index < 0) {\n          throw new Error(`Index ${index} cannot be less than zero.`);\n        }\n        target.set(index, value);\n        return true;\n      }\n    }\n    return Reflect.set(target, prop, value, receiver);\n  },\n  ownKeys(target) {\n    return Reflect.ownKeys(target).concat([...target.keys()].map(String));\n  },\n  getOwnPropertyDescriptor(target, prop) {\n    if (Reflect.has(target, prop)) {\n      return Reflect.getOwnPropertyDescriptor(target, prop);\n    } else if (typeof prop === \"string\") {\n      const index = Number.parseInt(prop, 10);\n      if (index < target.length) {\n        return DEFAULT_PROPERTY_DESCRIPTOR;\n      }\n    }\n  },\n};\n\n/**\n * An {@link OrderedCollection} is a homogenous sequence of values of any of the types\n * that can be stored as properties of Realm objects. It can be\n * accessed in any of the ways that a normal JavaScript Array can, including\n * subscripting, enumerating with `for-of` and so on.\n * @see {@link https://mdn.io/Array | Array}\n */\nexport abstract class OrderedCollection<T = unknown, EntryType extends [unknown, unknown] = [number, T]>\n  extends Collection<number, T, EntryType, T, CollectionChangeCallback<T, EntryType>>\n  implements Omit<ReadonlyArray<T>, \"entries\">\n{\n  /** @internal */ protected declare realm: Realm;\n  /** @internal */ protected declare results: binding.Results;\n  /** @internal */ protected declare helpers: OrderedCollectionHelpers;\n  /** @internal */\n  constructor(realm: Realm, results: binding.Results, helpers: OrderedCollectionHelpers) {\n    if (arguments.length === 0) {\n      throw new IllegalConstructorError(\"OrderedCollection\");\n    }\n    super((callback) => {\n      return results.addNotificationCallback((changes) => {\n        try {\n          callback(proxied, {\n            deletions: unwind(changes.deletions),\n            insertions: unwind(changes.insertions),\n            oldModifications: unwind(changes.modifications),\n            newModifications: unwind(changes.modificationsNew),\n          });\n        } catch (err) {\n          // Scheduling a throw on the event loop,\n          // since throwing synchronously here would result in an abort in the calling C++\n          setImmediate(() => {\n            throw err;\n          });\n        }\n      }, undefined);\n    });\n    // Wrap in a proxy to trap ownKeys and get, enabling the spread operator\n    const proxied = new Proxy(this, PROXY_HANDLER as ProxyHandler<this>);\n    // Get the class helpers for later use, if available\n    const { objectType } = results;\n    const classHelpers = typeof objectType === \"string\" && objectType !== \"\" ? realm.getClassHelpers(objectType) : null;\n    // Make the internal properties non-enumerable\n    Object.defineProperty(this, \"realm\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: realm,\n    });\n    Object.defineProperty(this, \"results\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: results,\n    });\n    Object.defineProperty(this, \"helpers\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: helpers,\n    });\n    Object.defineProperty(this, \"classHelpers\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: classHelpers,\n    });\n    Object.defineProperty(this, \"mixedToBinding\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: mixedToBinding.bind(undefined, realm.internal),\n    });\n    return proxied;\n  }\n\n  /** @internal */\n  protected declare classHelpers: ClassHelpers | null;\n  private declare mixedToBinding: (value: unknown) => binding.MixedArg;\n\n  /**\n   * Get an element of the ordered collection by index.\n   * @param index - The index.\n   * @returns The element.\n   * @internal\n   */\n  public get(index: number): T {\n    return this.helpers.fromBinding(this.helpers.get(this.results, index)) as T;\n  }\n\n  /**\n   * Set an element of the ordered collection by index.\n   * @param index - The index.\n   * @param value - The value.\n   * @internal\n   */\n  public set(index: number, value: T): void;\n  public set() {\n    throw new Error(`Assigning into a ${this.constructor.name} is not supported`);\n  }\n\n  /**\n   * The plain object representation for JSON serialization.\n   * Use circular JSON serialization libraries such as [@ungap/structured-clone](https://www.npmjs.com/package/@ungap/structured-clone)\n   * and [flatted](https://www.npmjs.com/package/flatted) to stringify Realm entities that have circular structures.\n   * @returns An array of plain objects.\n   */\n  toJSON(): Array<DefaultObject>;\n  /** @internal */\n  toJSON(_?: string, cache = new JSONCacheMap()): Array<DefaultObject> {\n    return this.map((item, index) => {\n      if (item instanceof RealmObject) {\n        return item.toJSON(index.toString(), cache);\n      } else {\n        return item as DefaultObject;\n      }\n    });\n  }\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/keys | Array.prototype.keys()}\n   * @returns An iterator with all keys in the collection.\n   */\n  *keys(): Generator<number> {\n    const size = this.results.size();\n    for (let i = 0; i < size; i++) {\n      yield i;\n    }\n  }\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/values} | Array.prototype.values()}\n   * @returns An iterator with all values in the collection.\n   */\n  *values(): Generator<T> {\n    const snapshot = this.results.snapshot();\n    const { get, fromBinding } = this.helpers;\n    for (const i of this.keys()) {\n      yield fromBinding(get(snapshot, i)) as T;\n    }\n  }\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries | Array.prototype.entries()}\n   * @returns An iterator with all key/value pairs in the collection.\n   */\n  *entries(): Generator<EntryType> {\n    const { get, fromBinding } = this.helpers;\n    const snapshot = this.results.snapshot();\n    const size = snapshot.size();\n    for (let i = 0; i < size; i++) {\n      yield [i, fromBinding(get(snapshot, i))] as EntryType;\n    }\n  }\n\n  [n: number]: T;\n\n  /**\n   * @returns The number of values.\n   */\n  get length(): number {\n    return this.results.size();\n  }\n\n  /**\n   * @throws An {@link Error} as the length property cannot be assigned.\n   */\n  set length(value: number) {\n    throw new Error(\"Cannot assign to read only property 'length'\");\n  }\n\n  /**\n   * Name of the type of items.\n   * @returns The name of the type of values.\n   */\n  get type(): PropertyType {\n    return getTypeName(this.results.type & ~binding.PropertyType.Flags, undefined);\n  }\n\n  /**\n   * Whether `null` is a valid value for the collection.\n   * @returns Whether `null` is a valid value for the collection.\n   * @readonly\n   */\n  get optional(): boolean {\n    return !!(this.results.type & binding.PropertyType.Nullable);\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any -- We've copied these from the lib types */\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString | Array.prototype.toString()}\n   * @returns A string representation of the collection.\n   */\n  toString(): string {\n    return [...this].toString();\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toLocaleString | Array.prototype.toLocaleString()}\n   * @returns A localized string representation of the collection.\n   */\n  toLocaleString(): string {\n    return [...this].toLocaleString();\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat | Array.prototype.concat()}\n   * @param items - Arrays and/or values to concatenate into a new array.\n   * @returns A new array with the results of calling a provided function on every element in this array.\n   */\n  concat(...items: ConcatArray<T>[]): T[];\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat | Array.prototype.concat()}\n   * @param items - Arrays and/or values to concatenate into a new array.\n   * @returns A new array with the results of calling a provided function on every element in this array.\n   */\n  concat(...items: (T | ConcatArray<T>)[]): T[];\n  concat(...items: any[]): T[] {\n    return [...this].concat(...items);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join | Array.prototype.join()}\n   * @params separator - A string used to separate one element of the collection from the next in the resulting String.\n   * @returns A string representing the elements of the collection.\n   */\n  join(separator?: string): string {\n    return [...this].join(separator);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice | Array.prototype.slice()}\n   * @params start - Zero-based index at which to begin extraction.\n   * @params end - Zero-based index at which to end extraction. It extracts up to but not including `end`.\n   * @returns A new array containing the elements between the start and end indices.\n   */\n  slice(start?: number, end?: number): T[] {\n    return [...this].slice(start, end);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf | Array.prototype.indexOf()}\n   * @params searchElement - Element to locate in the collection.\n   * @params fromIndex - The collection index at which to begin the search. If omitted, the search starts at index 0.\n   * @note `fromIndex` is currently not supported. So all searches start at index 0.\n   * @returns The first index at which a given element can be found in the collection, or -1 if it is not present.\n   */\n  indexOf(searchElement: T, fromIndex?: number): number {\n    assert(typeof fromIndex === \"undefined\", \"The second fromIndex argument is not yet supported\");\n    if (this.type === \"object\") {\n      assert.instanceOf(searchElement, RealmObject);\n      return this.results.indexOfObj(searchElement[INTERNAL]);\n    } else {\n      return this.results.indexOf(this.helpers.toBinding(searchElement));\n    }\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf | Array.prototype.lastIndexOf()}\n   * @params searchElement - Element to locate in the collection.\n   * @params fromIndex - The collection index at which to begin the search. If omitted, the search starts at the last index.\n   * @returns The last index at which a given element can be found in the collection, or -1 if it is not present. The collection is searched backwards, starting at `fromIndex`.\n   */\n  lastIndexOf(searchElement: T, fromIndex?: number): number {\n    return [...this].lastIndexOf(searchElement, fromIndex);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every | Array.prototype.every()}\n   * @params predicate - A function to test for each element.\n   * @params predicate.value - The current element being processed in the collection.\n   * @params predicate.index - The index of the current element being processed in the collection.\n   * @params predicate.array - The collection `every` was called upon.\n   * @params thisArg - An object to which the `this` keyword can refer in the predicate function. If `thisArg` is omitted, `undefined` is used as the `this` value.\n   * @returns `true` if the callback function returns a truthy value for every collection element; otherwise, `false`.\n   */\n  every<S extends T>(\n    predicate: (value: T, index: number, array: readonly T[]) => value is S,\n    thisArg?: any,\n  ): this is readonly S[];\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every | Array.prototype.every()}\n   * @params predicate - A function to test for each element.\n   * @params predicate.value - The current element being processed in the collection.\n   * @params predicate.index - The index of the current element being processed in the collection.\n   * @params predicate.array - The collection `every` was called upon.\n   * @params thisArg - An object to which the `this` keyword can refer in the predicate function. If `thisArg` is omitted, `undefined` is used as the `this` value.\n   * @returns `true` if the callback function returns a truthy value for every collection element; otherwise, `false`.\n   */\n  every(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean;\n  every(predicate: any, thisArg?: any): boolean {\n    return [...this].every(predicate, thisArg);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some | Array.prototype.some()}\n   * @params predicate - A function to test for each element.\n   * @params predicate.value - The current element being processed in the collection.\n   * @params predicate.index - The index of the current element being processed in the collection.\n   * @params predicate.array - The collection `every` was called upon.\n   * @params thisArg - An object to which the `this` keyword can refer in the predicate function. If `thisArg` is omitted, `undefined` is used as the `this` value.\n   * @returns `true` if the callback function returns a truthy value for any collection element; otherwise, `false`.\n   */\n  some(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean {\n    return [...this].some(predicate, thisArg);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach | Array.prototype.forEach()}\n   * @params callbackfn - A function that accepts up to three arguments. `forEach` calls the callbackfn function one time for each element in the collection.\n   * @params callbackfn.value - The current element being processed in the collection.\n   * @params callbackfn.index - The index of the current element being processed in the collection.\n   * @params callbackfn.array - The collection `forEach` was called upon.\n   * @params thisArg - An object to which the `this` keyword can refer in the `callbackfn` function. If `thisArg` is omitted, `undefined` is used as the `this` value.\n   */\n  forEach(callbackfn: (value: T, index: number, array: readonly T[]) => void, thisArg?: any): void {\n    return [...this].forEach(callbackfn, thisArg);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map | Array.prototype.map()}\n   * @params callbackfn - A function that accepts up to three arguments. The `map` method calls the `callbackfn` function one time for each element in the collection.\n   * @params callbackfn.value - The current element being processed in the collection.\n   * @params callbackfn.index - The index of the current element being processed in the collection.\n   * @params callbackfn.array - The collection `map` was called upon.\n   * @params thisArg - An object to which the `this` keyword can refer in the `callbackfn` function. If `thisArg` is omitted, `undefined` is used as the `this` value.\n   * @returns A new array containing the results of calling the `callbackfn` function on each element in the collection.\n   */\n  map<U>(callbackfn: (value: T, index: number, array: readonly T[]) => U, thisArg?: any): U[] {\n    return [...this].map(callbackfn, thisArg);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter | Array.prototype.filter()}\n   * @params predicate - A function that accepts up to three arguments. The `filter` method calls the `predicate` function one time for each element in the collection.\n   * @params predicate.value - The current element being processed in the collection.\n   * @params predicate.index - The index of the current element being processed in the collection.\n   * @params predicate.array - The collection `filter` was called upon.\n   * @params thisArg - An object to which the `this` keyword can refer in the `predicate` function. If `thisArg` is omitted, `undefined` is used as the `this` value.\n   * @returns A new array containing the elements of the collection for which the `predicate` function returned `true`.\n   */\n  filter<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, thisArg?: any): S[];\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter | Array.prototype.filter()}\n   * @params predicate - A function that accepts up to three arguments. The `filter` method calls the `predicate` function one time for each element in the collection.\n   * @params predicate.value - The current element being processed in the collection.\n   * @params predicate.index - The index of the current element being processed in the collection.\n   * @params predicate.array - The collection `filter` was called upon.\n   * @params thisArg - An object to which the `this` keyword can refer in the `predicate` function. If `thisArg` is omitted, `undefined` is used as the `this` value.\n   * @returns A new array containing the elements of the collection for which the `predicate` function returned `true`.\n   */\n  filter(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): T[];\n  filter<S extends T>(predicate: any, thisArg?: any): T[] | S[] {\n    return [...this].filter(predicate, thisArg);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce | Array.prototype.reduce()}\n   * @params callbackfn - A function that accepts up to four arguments. The `reduce` method calls the `callbackfn` function one time for each element in the collection.\n   * @params callbackfn.previousValue - The value previously returned in the last invocation of the `callbackfn` function, or `initialValue`, if supplied. (See below.)\n   * @params callbackfn.currentValue - The current element being processed in the collection.\n   * @params callbackfn.currentIndex - The index of the current element being processed in the collection.\n   * @params callbackfn.array - The collection `reduce` was called upon.\n   * @params initialValue - If `initialValue` is specified, it is used as the initial value to start the accumulation. The first call to the `callbackfn` function provides this value as an argument instead of an element value.\n   * @returns The value that results from the reduction.\n   */\n  reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T): T;\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce | Array.prototype.reduce()}\n   * @params callbackfn - A function that accepts up to four arguments. The `reduce` method calls the `callbackfn` function one time for each element in the collection.\n   * @params callbackfn.previousValue - The value previously returned in the last invocation of the `callbackfn` function, or `initialValue`, if supplied. (See below.)\n   * @params callbackfn.currentValue - The current element being processed in the collection.\n   * @params callbackfn.currentIndex - The index of the current element being processed in the collection.\n   * @params callbackfn.array - The collection `reduce` was called upon.\n   * @params initialValue - If `initialValue` is specified, it is used as the initial value to start the accumulation. The first call to the `callbackfn` function provides this value as an argument instead of an element value.\n   * @returns The value that results from the reduction.\n   */\n  reduce(\n    callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T,\n    initialValue: T,\n  ): T;\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce | Array.prototype.reduce()}\n   * @params callbackfn - A function that accepts up to four arguments. The `reduce` method calls the `callbackfn` function one time for each element in the collection.\n   * @params callbackfn.previousValue - The value previously returned in the last invocation of the `callbackfn` function, or `initialValue`, if supplied. (See below.)\n   * @params callbackfn.currentValue - The current element being processed in the collection.\n   * @params callbackfn.currentIndex - The index of the current element being processed in the collection.\n   * @params callbackfn.array - The collection `reduce` was called upon.\n   * @params initialValue - If `initialValue` is specified, it is used as the initial value to start the accumulation. The first call to the `callbackfn` function provides this value as an argument instead of an element value.\n   * @returns The value that results from the reduction.\n   */\n  reduce<U>(\n    callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: readonly T[]) => U,\n    initialValue: U,\n  ): U;\n  reduce<U>(callbackfn: any, initialValue?: any): T | U {\n    return [...this].reduce(callbackfn, initialValue);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight | Array.prototype.reduceRight()}\n   * @params callbackfn - A function that accepts up to four arguments. The `reduceRight` method calls the `callbackfn` function one time for each element in the collection.\n   * @params callbackfn.previousValue - The value previously returned in the last invocation of the `callbackfn` function, or `initialValue`, if supplied. (See below.)\n   * @params callbackfn.currentValue - The current element being processed in the collection.\n   * @params callbackfn.currentIndex - The index of the current element being processed in the collection.\n   * @params callbackfn.array - The collection `reduceRight` was called upon.\n   * @params initialValue - If `initialValue` is specified, it is used as the initial value to start the accumulation. The first call to the `callbackfn` function provides this value as an argument instead of an element value.\n   * @returns The value that results from the reduction.\n   */\n  reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T): T;\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight | Array.prototype.reduceRight()}\n   * @params callbackfn - A function that accepts up to four arguments. The `reduceRight` method calls the `callbackfn` function one time for each element in the collection.\n   * @params callbackfn.previousValue - The value previously returned in the last invocation of the `callbackfn` function, or `initialValue`, if supplied. (See below.)\n   * @params callbackfn.currentValue - The current element being processed in the collection.\n   * @params callbackfn.currentIndex - The index of the current element being processed in the collection.\n   * @params callbackfn.array - The collection `reduceRight` was called upon.\n   * @params initialValue - If `initialValue` is specified, it is used as the initial value to start the accumulation. The first call to the `callbackfn` function provides this value as an argument instead of an element value.\n   * @returns The value that results from the reduction.\n   */\n  reduceRight(\n    callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T,\n    initialValue: T,\n  ): T;\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight | Array.prototype.reduceRight()}\n   * @params callbackfn - A function that accepts up to four arguments. The `reduceRight` method calls the `callbackfn` function one time for each element in the collection.\n   * @params callbackfn.previousValue - The value previously returned in the last invocation of the `callbackfn` function, or `initialValue`, if supplied. (See below.)\n   * @params callbackfn.currentValue - The current element being processed in the collection.\n   * @params callbackfn.currentIndex - The index of the current element being processed in the collection.\n   * @params callbackfn.array - The collection `reduceRight` was called upon.\n   * @params initialValue - If `initialValue` is specified, it is used as the initial value to start the accumulation. The first call to the `callbackfn` function provides this value as an argument instead of an element value.\n   * @returns The value that results from the reduction.\n   */\n  reduceRight<U>(\n    callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: readonly T[]) => U,\n    initialValue: U,\n  ): U;\n  reduceRight<U>(callbackfn: any, initialValue?: any): T | U {\n    return [...this].reduceRight(callbackfn, initialValue);\n  }\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find | Array.prototype.find()}\n   * @params predicate - A function that accepts up to three arguments. The `find` method calls the `predicate` function one time for each element in the collection.\n   * @params predicate.value - The value of the element.\n   * @params predicate.index - The index of the element.\n   * @params predicate.obj - The object being traversed.\n   * @params thisArg - An object to which the `this` keyword can refer in the `predicate` function. If `thisArg` is omitted, `undefined` is used as the `this` value.\n   * @returns The value of the first element in the array that satisfies the provided testing function. Otherwise, `undefined` is returned.\n   */\n  find<S extends T>(\n    predicate: (this: void, value: T, index: number, obj: T[]) => value is S,\n    thisArg?: any,\n  ): S | undefined;\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find | Array.prototype.find()}\n   * @params predicate - A function that accepts up to three arguments. The `find` method calls the `predicate` function one time for each element in the collection.\n   * @params predicate.value - The value of the element.\n   * @params predicate.index - The index of the element.\n   * @params predicate.obj - The object being traversed.\n   * @params thisArg - An object to which the `this` keyword can refer in the `predicate` function. If `thisArg` is omitted, `undefined` is used as the `this` value.\n   * @returns The value of the first element in the array that satisfies the provided testing function. Otherwise, `undefined` is returned.\n   */\n  find<T>(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): T | undefined;\n  find(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): T | undefined {\n    return [...this].find(predicate, thisArg);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex | Array.prototype.findIndex()}\n   * @params predicate - A function that accepts up to three arguments. The `findIndex` method calls the `predicate` function one time for each element in the collection.\n   * @params predicate.value - The value of the element.\n   * @params predicate.index - The index of the element.\n   * @params predicate.obj - The object being traversed.\n   * @params thisArg - An object to which the `this` keyword can refer in the `predicate` function. If `thisArg` is omitted, `undefined` is used as the `this` value.\n   * @returns The index of the first element in the array that satisfies the provided testing function. Otherwise, -1 is returned.\n   */\n  findIndex(predicate: (value: T, index: number, obj: readonly T[]) => unknown, thisArg?: any): number {\n    return [...this].findIndex(predicate, thisArg);\n  }\n  // TODO: Implement support for RealmObjects, by comparing their #objectKey values\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes | Array.prototype.includes()}\n   * @params searchElement - The element to search for.\n   * @params fromIndex - The position in this array at which to begin searching for `searchElement`. A negative value searches from the index of array.length + fromIndex by asc.\n   * @note `fromIndex` is currently not supported. So all searches start at index 0.\n   * @returns `true` if the `searchElement` is found in the array; otherwise, `false`.\n   */\n  includes(searchElement: T, fromIndex?: number): boolean {\n    return this.indexOf(searchElement, fromIndex) !== -1;\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap | Array.prototype.flatMap()}\n   * @params callback - Function that produces an element of the new Array, taking three arguments:\n   * @params callback.currentValue - The current element being processed in the array.\n   * @params callback.index - The index of the current element being processed in the array.\n   * @params callback.array - The array `flatMap` was called upon.\n   * @params thisArg - Value to use as this when executing callback.\n   * @returns A new array with each element being the result of the callback function and flattened to a depth of 1.\n   */\n  flatMap<U, This = undefined>(\n    callback: (this: This, value: T, index: number, array: T[]) => U | readonly U[],\n    thisArg?: This,\n  ): U[] {\n    return [...this].flatMap(callback, thisArg);\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat | Array.prototype.flat()}\n   * @params depth - The depth level specifying how deep a nested array structure should be flattened. Defaults to 1.\n   * @returns A new array with the sub-array elements concatenated into it.\n   */\n  flat<A, D extends number = 1>(this: A, depth?: D): FlatArray<A, D>[];\n  flat<D extends number = 1>(): FlatArray<this, D>[] {\n    throw new Error(\"Method not implemented.\");\n  }\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at | Array.prototype.at()}\n   * @params index - The index of the element to return from the array. If the index is a negative number, the element at `array.length + index` is returned.\n   * @returns The element at the given index in the array; `undefined` if there is no element at the given index.\n   */\n  at(index: number): T | undefined {\n    return [...this].at(index);\n  }\n\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n\n  /**\n   * @returns An iterator that iterates over all the values in the collection.\n   */\n  [Symbol.iterator](): IterableIterator<T> {\n    return this.values();\n  }\n\n  // Other methods\n\n  // TODO: Implement this method\n  /**\n   * @returns A string describing the filters applied to this collection.\n   */\n  description(): string {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * Checks if this collection is empty.\n   * @returns `true` if the collection is empty, `false` if not.\n   */\n  isEmpty(): boolean {\n    return this.results.size() === 0;\n  }\n\n  /**\n   * Returns the minimum value of the values in the collection or of the\n   * given property among all the objects in the collection, or `undefined`\n   * if the collection is empty.\n   *\n   * Only supported for int, float, double and date properties. `null` values\n   * are ignored entirely by this method and will not be returned.\n   * @param property - For a collection of objects, the property to take the minimum of.\n   * @throws A {@link TypeAssertionError} if no property with the name exists or if property is not numeric/date.\n   * @returns The minimum value.\n   */\n  min(property?: string): number | Date | undefined {\n    const columnKey = this.getPropertyColumnKey(property);\n    const result = this.results.min(columnKey);\n    if (result instanceof Date || typeof result === \"number\" || typeof result === \"undefined\") {\n      return result;\n    } else if (binding.Int64.isInt(result)) {\n      return binding.Int64.intToNum(result);\n    } else if (result instanceof binding.Float) {\n      return result.value;\n    } else if (result instanceof binding.Timestamp) {\n      return result.toDate();\n    } else {\n      throw new TypeAssertionError(\"Timestamp, number, bigint, Float or null\", result, \"result\");\n    }\n  }\n\n  /**\n   * Returns the maximum value of the values in the collection or of the\n   * given property among all the objects in the collection, or `undefined`\n   * if the collection is empty.\n   *\n   * Only supported for int, float, double and date properties. `null` values\n   * are ignored entirely by this method and will not be returned.\n   * @param property - For a collection of objects, the property to take the maximum of.\n   * @throws An {@link Error} if no property with the name exists or if property is not numeric/date.\n   * @returns The maximum value.\n   */\n  max(property?: string): number | Date | undefined {\n    const columnKey = this.getPropertyColumnKey(property);\n    const result = this.results.max(columnKey);\n    if (result instanceof Date || typeof result === \"number\" || typeof result === \"undefined\") {\n      return result;\n    } else if (binding.Int64.isInt(result)) {\n      return binding.Int64.intToNum(result);\n    } else if (result instanceof binding.Float) {\n      return result.value;\n    } else if (result instanceof binding.Timestamp) {\n      return result.toDate();\n    } else {\n      throw new TypeAssertionError(\"Timestamp, number, bigint, Float or undefined\", result, \"result\");\n    }\n  }\n\n  /**\n   * Computes the sum of the values in the collection or of the given\n   * property among all the objects in the collection, or 0 if the collection\n   * is empty.\n   *\n   * Only supported for int, float and double properties. `null` values are\n   * ignored entirely by this method.\n   * @param property - For a collection of objects, the property to take the sum of.\n   * @throws An {@link Error} if no property with the name exists or if property is not numeric.\n   * @returns The sum.\n   */\n  sum(property?: string): number {\n    const columnKey = this.getPropertyColumnKey(property);\n    const result = this.results.sum(columnKey);\n    if (typeof result === \"number\") {\n      return result;\n    } else if (binding.Int64.isInt(result)) {\n      return binding.Int64.intToNum(result);\n    } else if (result instanceof binding.Float) {\n      return result.value;\n    } else {\n      throw new TypeAssertionError(\"number, bigint or Float\", result, \"result\");\n    }\n  }\n\n  /**\n   * Computes the average of the values in the collection or of the given\n   * property among all the objects in the collection, or `undefined` if the collection\n   * is empty.\n   *\n   * Only supported for int, float and double properties. `null` values are\n   * ignored entirely by this method and will not be factored into the average.\n   * @param property - For a collection of objects, the property to take the average of.\n   * @throws An {@link Error} if no property with the name exists or if property is not numeric.\n   * @returns The sum.\n   */\n  avg(property?: string): number | undefined {\n    const columnKey = this.getPropertyColumnKey(property);\n    const result = this.results.average(columnKey);\n    if (typeof result === \"number\" || typeof result === \"undefined\") {\n      return result;\n    } else if (binding.Int64.isInt(result)) {\n      return binding.Int64.intToNum(result);\n    } else if (result instanceof binding.Float) {\n      return result.value;\n    } else {\n      throw new TypeAssertionError(\"number, Float, bigint or undefined\", result, \"result\");\n    }\n  }\n\n  /**\n   * Returns new {@link Results} that represent this collection being filtered by the provided query.\n   * @param queryString - Query used to filter objects from the collection.\n   * @param args - Each subsequent argument is used by the placeholders\n   * (e.g. `$0`, `$1`, `$2`, …) in the query.\n   * @throws An {@link Error} if the query or any other argument passed into this method is invalid.\n   * @returns Results filtered according to the provided query.\n   * @note This is currently only supported for collections of Realm Objects.\n   * @example\n   * let merlots = wines.filtered('variety == \"Merlot\" && vintage <= $0', maxYear);\n   */\n  filtered(queryString: string, ...args: unknown[]): Results<T> {\n    const { results: parent, realm, helpers } = this;\n    const kpMapping = binding.Helpers.getKeypathMapping(realm.internal);\n    const bindingArgs = args.map((arg) =>\n      Array.isArray(arg) ? arg.map((sub) => this.mixedToBinding(sub)) : this.mixedToBinding(arg),\n    );\n    const newQuery = parent.query.table.query(queryString, bindingArgs, kpMapping);\n    const results = binding.Helpers.resultsAppendQuery(parent, newQuery);\n    return new Results(realm, results, helpers);\n  }\n\n  /**\n   * Returns new _Results_ that represent a sorted view of this collection.\n   *\n   * A collection of Realm Objects can be sorted on one or more properties of\n   * those objects, or of properties of objects linked to by those objects.\n   * To sort by a single property, simply pass the name of that property to\n   * `sorted()`, optionally followed by a boolean indicating if the sort should be reversed.\n   * For more than one property, you must pass an array of\n   * **sort descriptors** which list\n   * which properties to sort on.\n   *\n   * Collections of other types sort on the values themselves rather than\n   * properties of the values, and so no property name or sort descriptors\n   * should be supplied.\n   * @param reverse - Sort in descending order rather than ascended.\n   * It may not be applied if `descriptor` is an array of sort descriptors.\n   * @throws An {@link Error} if a specified property does not exist.\n   * @returns Results sorted according to the arguments passed in.\n   */\n  sorted(reverse?: boolean): Results<T>;\n  /**\n   * Returns new _Results_ that represent a sorted view of this collection.\n   *\n   * A collection of Realm Objects can be sorted on one or more properties of\n   * those objects, or of properties of objects linked to by those objects.\n   * To sort by a single property, simply pass the name of that property to\n   * `sorted()`, optionally followed by a boolean indicating if the sort should be reversed.\n   * For more than one property, you must pass an array of\n   * **sort descriptors** which list\n   * which properties to sort on.\n   *\n   * Collections of other types sort on the values themselves rather than\n   * properties of the values, and so no property name or sort descriptors\n   * should be supplied.\n   * @param descriptor - The property name(s) to sort the collection on.\n   * @throws An {@link Error} if a specified property does not exist.\n   * @returns Results sorted according to the arguments passed in.\n   */\n  sorted(descriptor: SortDescriptor[]): Results<T>;\n  /**\n   * Returns new _Results_ that represent a sorted view of this collection.\n   *\n   * A collection of Realm Objects can be sorted on one or more properties of\n   * those objects, or of properties of objects linked to by those objects.\n   * To sort by a single property, simply pass the name of that property to\n   * `sorted()`, optionally followed by a boolean indicating if the sort should be reversed.\n   * For more than one property, you must pass an array of\n   * **sort descriptors** which list\n   * which properties to sort on.\n   *\n   * Collections of other types sort on the values themselves rather than\n   * properties of the values, and so no property name or sort descriptors\n   * should be supplied.\n   * @param descriptor - The property name(s) to sort the collection on.\n   * @throws An {@link Error} if a specified property does not exist.\n   * @returns Results sorted according to the arguments passed in.\n   */\n  sorted(descriptor: string, reverse?: boolean): Results<T>;\n  sorted(arg0: boolean | SortDescriptor[] | string = \"self\", arg1?: boolean): Results<T> {\n    if (Array.isArray(arg0)) {\n      assert.undefined(arg1, \"second 'argument'\");\n      const { results: parent, realm, helpers } = this;\n      // Map optional \"reversed\" to \"ascending\" (expected by the binding)\n      const descriptors = arg0.map<[string, boolean]>((arg, i) => {\n        if (typeof arg === \"string\") {\n          return [arg, true];\n        } else if (Array.isArray(arg)) {\n          const [property, direction] = arg;\n          assert.string(property, \"property\");\n          assert.boolean(direction, \"direction\");\n          return [property, !direction];\n        } else {\n          throw new TypeAssertionError(\"string or array with two elements [string, boolean]\", arg, `descriptor[${i}]`);\n        }\n      });\n      // TODO: Call `parent.sort`, avoiding property name to column key conversion to speed up performance here.\n      const results = parent.sortByNames(descriptors);\n      return new Results(realm, results, helpers);\n    } else if (typeof arg0 === \"string\") {\n      return this.sorted([[arg0, arg1 === true]]);\n    } else if (typeof arg0 === \"boolean\") {\n      return this.sorted([[\"self\", arg0]]);\n    } else {\n      throw new TypeAssertionError(\"property name and optional bool or an array of descriptors\", arg0, \"argument\");\n    }\n  }\n\n  /**\n   * Create a frozen snapshot of the collection.\n   *\n   * Values added to and removed from the original collection will not be\n   * reflected in the _Results_ returned by this method, including if the\n   * values of properties are changed to make them match or not match any\n   * filters applied.\n   *\n   * This is **not** a _deep_ snapshot. Realm objects contained in this\n   * snapshot will continue to update as changes are made to them, and if\n   * they are deleted from the Realm they will be replaced by `null` at the\n   * respective indices.\n   * @returns Results which will **not** live update.\n   */\n  snapshot(): Results<T> {\n    return new Results(this.realm, this.results.snapshot(), this.helpers);\n  }\n\n  private getPropertyColumnKey(name: string | undefined): binding.ColKey {\n    if (this.classHelpers) {\n      assert.string(name, \"name\");\n      return this.classHelpers.properties.get(name).columnKey;\n    } else if (name) {\n      throw new Error(`Cannot get property named '${name}' on a list of primitives`);\n    } else {\n      return DEFAULT_COLUMN_KEY;\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  IllegalConstructorError,\n  OrderedCollection,\n  OrderedCollectionHelpers,\n  Realm,\n  SubscriptionOptions,\n  TimeoutPromise,\n  Unmanaged,\n  WaitForSync,\n  assert,\n  binding,\n} from \"./internal\";\n\n/**\n * Instances of this class are typically **live** collections returned by\n * objects() that will update as new objects are either\n * added to or deleted from the Realm that match the underlying query. Results returned by\n * snapshot()}, however, will **not** live update\n * (and listener callbacks added through addListener()\n * will thus never be called).\n * @see https://www.mongodb.com/docs/realm/sdk/react-native/model-data/data-types/collections/\n */\nexport class Results<T = unknown> extends OrderedCollection<T> {\n  /**\n   * The representation in the binding.\n   * @internal\n   */\n  public declare internal: binding.Results;\n  /** @internal */\n  public subscriptionName?: string;\n\n  /**\n   * Create a `Results` wrapping a set of query `Results` from the binding.\n   * @internal\n   */\n  constructor(realm: Realm, internal: binding.Results, helpers: OrderedCollectionHelpers) {\n    if (arguments.length === 0 || !(internal instanceof binding.Results)) {\n      throw new IllegalConstructorError(\"Results\");\n    }\n    super(realm, internal, helpers);\n    Object.defineProperty(this, \"internal\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: internal,\n    });\n    Object.defineProperty(this, \"realm\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: realm,\n    });\n    Object.defineProperty(this, \"subscriptionName\", {\n      enumerable: false,\n      configurable: false,\n      writable: true,\n    });\n  }\n\n  get length(): number {\n    return this.internal.size();\n  }\n\n  set length(value: number) {\n    throw new Error(\"Cannot assign to read only property 'length'\");\n  }\n\n  /*\n   * @returns A string representation of the query and sorting bound to the results.\n   */\n  description(): string {\n    return binding.Helpers.getResultsDescription(this.internal);\n  }\n\n  /**\n   * Bulk update objects in the collection.\n   * @param propertyName - The name of the property.\n   * @param value - The updated property value.\n   * @throws An {@link Error} if no property with the name exists.\n   * @since 2.0.0\n   */\n  update(propertyName: keyof Unmanaged<T>, value: Unmanaged<T>[typeof propertyName]): void {\n    const {\n      classHelpers,\n      helpers: { get },\n    } = this;\n    assert.string(propertyName);\n    assert(this.type === \"object\" && classHelpers, \"Expected a result of Objects\");\n    const { set } = classHelpers.properties.get(propertyName);\n\n    const snapshot = this.results.snapshot();\n    const size = snapshot.size();\n    for (let i = 0; i < size; i++) {\n      const obj = get(snapshot, i);\n      assert.instanceOf(obj, binding.Obj);\n      set(obj, value);\n    }\n  }\n\n  /**\n   * Add this query result to the set of active subscriptions. The query will be joined\n   * via an `OR` operator with any existing queries for the same type.\n   * @param options - Options to use when adding this subscription (e.g. a name or wait behavior).\n   * @returns A promise that resolves to this {@link Results} instance.\n   * @experimental This API is experimental and may change or be removed.\n   */\n  async subscribe(options: SubscriptionOptions = { behavior: WaitForSync.FirstTime }): Promise<this> {\n    const subs = this.realm.subscriptions;\n    const shouldWait =\n      options.behavior === WaitForSync.Always || (options.behavior === WaitForSync.FirstTime && !subs.exists(this));\n    if (shouldWait) {\n      if (typeof options.timeout === \"number\") {\n        await new TimeoutPromise(\n          subs.update((mutableSubs) => mutableSubs.add(this, options)),\n          { ms: options.timeout, rejectOnTimeout: false },\n        );\n      } else {\n        await subs.update((mutableSubs) => mutableSubs.add(this, options));\n      }\n    } else {\n      subs.updateNoWait((mutableSubs) => mutableSubs.add(this, options));\n    }\n\n    return this;\n  }\n\n  /**\n   * Unsubscribe from this query result. It returns immediately without waiting\n   * for synchronization.\n   *\n   * If the subscription is unnamed, the subscription matching the query will\n   * be removed.\n   * @experimental This API is experimental and may change or be removed.\n   */\n  unsubscribe(): void {\n    this.realm.subscriptions.updateNoWait((mutableSubs) => {\n      if (this.subscriptionName) {\n        mutableSubs.removeByName(this.subscriptionName);\n      } else {\n        mutableSubs.remove(this);\n      }\n    });\n  }\n\n  /**\n   * Checks if this results collection has not been deleted and is part of a valid Realm.\n   * @returns `true` if the collection can be safely accessed.\n   */\n  isValid(): boolean {\n    return this.internal.isValid;\n  }\n\n  /**\n   * Checks if this collection result is empty.\n   * @returns `true` if the collection result is empty, `false` if not.\n   */\n  isEmpty(): boolean {\n    return this.internal.size() === 0;\n  }\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any -- Useful for APIs taking any `Results` */\nexport type AnyResults = Results<any>;\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  AssertionError,\n  IllegalConstructorError,\n  ObjectSchema,\n  OrderedCollection,\n  OrderedCollectionHelpers,\n  Realm,\n  assert,\n  binding,\n} from \"./internal\";\n\ntype PartiallyWriteableArray<T> = Pick<Array<T>, \"pop\" | \"push\" | \"shift\" | \"unshift\" | \"splice\">;\n\n/**\n * Instances of this class will be returned when accessing object properties whose type is `\"list\"`.\n *\n * Lists mostly behave like normal Javascript Arrays, except for that they can\n * only store values of a single type (indicated by the `type` and `optional`\n * properties of the List), and can only be modified inside a {@link Realm.write | write} transaction.\n */\nexport class List<T = unknown> extends OrderedCollection<T> implements PartiallyWriteableArray<T> {\n  /**\n   * The representation in the binding.\n   * @internal\n   */\n  public declare internal: binding.List;\n\n  /** @internal */\n  private declare isEmbedded: boolean;\n\n  /** @internal */\n  constructor(realm: Realm, internal: binding.List, helpers: OrderedCollectionHelpers) {\n    if (arguments.length === 0 || !(internal instanceof binding.List)) {\n      throw new IllegalConstructorError(\"List\");\n    }\n    super(realm, internal.asResults(), helpers);\n\n    // Getting the `objectSchema` off the internal will throw if base type isn't object\n    const baseType = this.results.type & ~binding.PropertyType.Flags;\n    const isEmbedded =\n      baseType === binding.PropertyType.Object && internal.objectSchema.tableType === binding.TableType.Embedded;\n\n    Object.defineProperty(this, \"internal\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: internal,\n    });\n    Object.defineProperty(this, \"isEmbedded\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: isEmbedded,\n    });\n  }\n\n  /**\n   * Checks if this collection has not been deleted and is part of a valid Realm.\n   * @returns `true` if the collection can be safely accessed.\n   */\n  isValid(): boolean {\n    return this.internal.isValid;\n  }\n\n  /**\n   * Set an element of the ordered collection by index\n   * @param index The index\n   * @param value The value\n   * @internal\n   */\n  public set(index: number, value: unknown): void {\n    const {\n      realm,\n      internal,\n      isEmbedded,\n      helpers: { toBinding },\n    } = this;\n    assert.inTransaction(realm);\n    // TODO: Consider a more performant way to determine if the list is embedded\n    internal.setAny(\n      index,\n      toBinding(value, isEmbedded ? { createObj: () => [internal.insertEmbedded(index), true] } : undefined),\n    );\n  }\n\n  /**\n   * @returns The number of values in the list.\n   */\n  get length(): number {\n    return this.internal.size;\n  }\n\n  /**\n   * @throws An {@link Error} as the length property cannot be assigned.\n   */\n  set length(value: number) {\n    throw new Error(\"Cannot assign to read only property 'length'\");\n  }\n\n  /**\n   * Remove the **last** value from the list and return it.\n   * @throws an {@link AssertionError} If not inside a write transaction.\n   * @returns The last value or undefined if the list is empty.\n   */\n  pop(): T | undefined {\n    assert.inTransaction(this.realm);\n    const {\n      internal,\n      helpers: { fromBinding },\n    } = this;\n    const lastIndex = internal.size - 1;\n    if (lastIndex >= 0) {\n      const result = fromBinding(internal.getAny(lastIndex));\n      internal.remove(lastIndex);\n      return result as T;\n    }\n  }\n\n  /**\n   * Add one or more values to the _end_ of the list.\n   * @param items - Values to add to the list.\n   * @throws A {TypeError} if a value is not of a type which can be stored in\n   * the list, or if an object being added to the list does not match the {@link ObjectSchema} for the list.\n   * @throws An {@link AssertionError} if not inside a write transaction.\n   * @returns The new length of the list after adding the values.\n   */\n  push(...items: T[]): number {\n    assert.inTransaction(this.realm);\n    const {\n      isEmbedded,\n      internal,\n      helpers: { toBinding },\n    } = this;\n    const start = internal.size;\n    for (const [offset, item] of items.entries()) {\n      const index = start + offset;\n      if (isEmbedded) {\n        // Simply transforming to binding will insert the embedded object\n        toBinding(item, { createObj: () => [internal.insertEmbedded(index), true] });\n      } else {\n        internal.insertAny(index, toBinding(item));\n      }\n    }\n    return internal.size;\n  }\n\n  /**\n   * Remove the **first** value from the list and return it.\n   * @throws An {@link AssertionError} if not inside a write transaction.\n   * @returns The first value or `undefined` if the list is empty.\n   */\n  shift(): T | undefined {\n    assert.inTransaction(this.realm);\n    const {\n      internal,\n      helpers: { fromBinding },\n    } = this;\n    if (internal.size > 0) {\n      const result = fromBinding(internal.getAny(0)) as T;\n      internal.remove(0);\n      return result;\n    }\n  }\n\n  /**\n   * Add one or more values to the _beginning_ of the list.\n   * @param items - Values to add to the list.\n   * @throws A {TypeError} if a value is not of a type which can be stored in\n   * the list, or if an object being added to the list does not match the {@link ObjectSchema} for the list.\n   * @throws An {@link AssertionError} if not inside a write transaction.\n   * @returns The new length of the list after adding the values.\n   */\n  unshift(...items: T[]): number {\n    assert.inTransaction(this.realm);\n    const {\n      isEmbedded,\n      internal,\n      helpers: { toBinding },\n    } = this;\n    for (const [index, item] of items.entries()) {\n      if (isEmbedded) {\n        // Simply transforming to binding will insert the embedded object\n        toBinding(item, { createObj: () => [internal.insertEmbedded(index), true] });\n      } else {\n        internal.insertAny(index, toBinding(item));\n      }\n    }\n    return internal.size;\n  }\n\n  /**\n   * Changes the contents of the list by removing value and/or inserting new value.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice Array.prototype.splice}\n   * @param start - The start index. If greater than the length of the list,\n   * the start index will be set to the length instead. If negative, then the start index\n   * will be counted from the end of the list (e.g. `list.length - index`).\n   * @param deleteCount - The number of values to remove from the list.\n   * If not provided, then all values from the start index through the end of\n   * the list will be removed.\n   * @returns An array containing the value that were removed from the list. The\n   * array is empty if no value were removed.\n   */\n  splice(start: number, deleteCount?: number): T[];\n  /**\n   * Changes the contents of the list by removing value and/or inserting new value.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice Array.prototype.splice}\n   * @param start - The start index. If greater than the length of the list,\n   * the start index will be set to the length instead. If negative, then the start index\n   * will be counted from the end of the list (e.g. `list.length - index`).\n   * @param deleteCount - The number of values to remove from the list.\n   * If not provided, then all values from the start index through the end of\n   * the list will be removed.\n   * @param items - Values to insert into the list starting at `index`.\n   * @returns An array containing the value that were removed from the list. The\n   * array is empty if no value were removed.\n   */\n  splice(start: number, deleteCount: number, ...items: T[]): T[];\n  /**\n   * Changes the contents of the list by removing value and/or inserting new value.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice Array.prototype.splice}\n   * @param start - The start index. If greater than the length of the list,\n   * the start index will be set to the length instead. If negative, then the start index\n   * will be counted from the end of the list (e.g. `list.length - index`).\n   * @param deleteCount - The number of values to remove from the list.\n   * If not provided, then all values from the start index through the end of\n   * the list will be removed.\n   * @param items - Values to insert into the list starting at `index`.\n   * @returns An array containing the value that were removed from the list. The\n   * array is empty if no value were removed.\n   */\n  splice(start: number, deleteCount?: number, ...items: T[]): T[] {\n    // Comments in the code below is copied from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n    assert.inTransaction(this.realm);\n    assert.number(start, \"start\");\n    const {\n      isEmbedded,\n      internal,\n      helpers: { fromBinding, toBinding },\n    } = this;\n    // If negative, it will begin that many elements from the end of the array.\n    if (start < 0) {\n      start = internal.size + start;\n    }\n    // If greater than the length of the array, start will be set to the length of the array.\n    if (start > internal.size) {\n      start = internal.size;\n    }\n    // If deleteCount is omitted, or if its value is equal to or larger than array.length - start\n    // (that is, if it is equal to or greater than the number of elements left in the array, starting at start),\n    // then all the elements from start to the end of the array will be deleted.\n    const end = typeof deleteCount === \"number\" ? Math.min(start + deleteCount, internal.size) : internal.size;\n    // Get the elements that are about to be deleted\n    const result: T[] = [];\n    for (let i = start; i < end; i++) {\n      result.push(fromBinding(internal.getAny(i)) as T);\n    }\n    // Remove the elements from the list (backwards to avoid skipping elements as they're being deleted)\n    for (let i = end - 1; i >= start; i--) {\n      internal.remove(i);\n    }\n    // Insert any new elements\n    for (const [offset, item] of items.entries()) {\n      const index = start + offset;\n      if (isEmbedded) {\n        // Simply transforming to binding will insert the embedded object\n        toBinding(item, { createObj: () => [internal.insertEmbedded(index), true] });\n      } else {\n        internal.insertAny(index, toBinding(item));\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Removes the element of the list at the specified index.\n   * @param index - The index of the element to remove.\n   * @throws An {@link AssertionError} if not inside a write transaction or the input index is less than 0\n   * or greater than or equal to the size of the list.\n   */\n  remove(index: number): void {\n    assert.inTransaction(this.realm);\n    assert.number(index, \"index\");\n\n    assert(index >= 0, \"Index cannot be smaller than 0\");\n    assert(index < this.internal.size, \"Index cannot be greater than the size of the list\");\n\n    this.internal.remove(index);\n  }\n\n  /**\n   * Moves one element of the list from one index to another.\n   * @param from - The index of the element to move.\n   * @param to - The destination index of the element.\n   * @throws An {@link AssertionError} if not inside a write transaction or if any of the input indexes\n   * is less than 0 or greater than or equal to the size of the list.\n   */\n  move(from: number, to: number): void {\n    assert.inTransaction(this.realm);\n    assert.number(from, \"from\");\n    assert.number(to, \"to\");\n\n    const size = this.internal.size;\n    assert(from >= 0 && to >= 0, \"Indexes cannot be smaller than 0\");\n    assert(from < size && to < size, \"Indexes cannot be greater than the size of the list\");\n\n    this.internal.move(from, to);\n  }\n\n  /**\n   * Swaps the positions of the elements of the list at two indexes.\n   * @param index1 - The index of the first element.\n   * @param index2 - The index of the second element.\n   * @throws An {@link AssertionError} if not inside a write transaction or if any of the input indexes\n   * is less than 0 or greater than or equal to the size of the list.\n   */\n  swap(index1: number, index2: number): void {\n    assert.inTransaction(this.realm);\n    assert.number(index1, \"index1\");\n    assert.number(index2, \"index2\");\n\n    const size = this.internal.size;\n    assert(index1 >= 0 && index2 >= 0, \"Indexes cannot be smaller than 0\");\n    assert(index1 < size && index2 < size, \"Indexes cannot be greater than the size of the list\");\n\n    this.internal.swap(index1, index2);\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  IllegalConstructorError,\n  OrderedCollection,\n  OrderedCollectionHelpers,\n  Realm,\n  assert,\n  binding,\n} from \"./internal\";\n\n/**\n * Instances of this class will be returned when accessing object properties whose type is `\"Set\"`\n *\n * Sets mostly behave like normal JavaScript Sets, with a few exceptions:\n * They can only store values of a single type (indicated by the `type`\n * and `optional` properties of the Set).\n * They can only be modified inside a **write** transaction.\n * Unlike JavaScript's Set, Realm~Set does NOT make any guarantees about the\n * traversal order of `values()`, `entries()`, `keys()`, or `forEach` iterations.\n * If values in a Set are required to have some order, it must be implemented\n * by the developer by, for example, wrapping values in an object that holds\n * a user-supplied insertion order.\n * @see https://www.mongodb.com/docs/realm/sdk/react-native/model-data/data-types/sets/\n */\nexport class RealmSet<T = unknown> extends OrderedCollection<T, [T, T]> {\n  /** @internal */\n  private declare internal: binding.Set;\n\n  /** @internal */\n  constructor(realm: Realm, internal: binding.Set, helpers: OrderedCollectionHelpers) {\n    if (arguments.length === 0 || !(internal instanceof binding.Set)) {\n      throw new IllegalConstructorError(\"Set\");\n    }\n    super(realm, internal.asResults(), helpers);\n    Object.defineProperty(this, \"internal\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: internal,\n    });\n  }\n  /**\n   * @returns The number of values in the Set.\n   */\n  get size(): number {\n    return this.length;\n  }\n\n  /**\n   * Checks if this Set has not been deleted and is part of a valid Realm.\n   * @returns `true` if the set can be safely accessed, `false` if not.\n   */\n  isValid(): boolean {\n    return this.internal.isValid;\n  }\n\n  /**\n   * Delete a value from the Set.\n   * @param value - Value to delete from the Set.\n   * @throws An {@link Error} if not inside a write transaction.\n   * @returns `true` if the value existed in the Set prior to deletion, `false` if not.\n   */\n  delete(value: T): boolean {\n    assert.inTransaction(this.realm);\n    const [, success] = this.internal.removeAny(this.helpers.toBinding(value));\n    return success;\n  }\n\n  /**\n   * Add a new value to the Set.\n   * @param value - Value to add to the Set.\n   * @throws A {@link TypeError} if a `value` is not of a type which can be stored in\n   * the Set, or if an object being added to the Set does not match the for the Set.\n   * @throws An {@link Error} if not inside a write transaction.\n   * @returns The Set itself, after adding the new value.\n   */\n  add(value: T): this {\n    assert.inTransaction(this.realm);\n    this.internal.insertAny(this.helpers.toBinding(value));\n    return this;\n  }\n\n  /**\n   * Remove all values from the Set.\n   * @throws An {@link Error} if not inside a write transaction.\n   */\n  clear(): void {\n    assert.inTransaction(this.realm);\n    this.internal.deleteAll();\n  }\n\n  /**\n   * Check for existence of a value in the Set.\n   * @param value - Value to search for in the Set\n   * @throws A {@link TypeError} if a `value` is not of a type which can be stored in\n   * the Set, or if an object being added to the Set does not match the\n   * **object schema** for the Set.\n   * @returns `true` if the value exists in the Set, `false` if not.\n   */\n  has(value: T): boolean {\n    return this.includes(value);\n  }\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/entries | Set.prototype.entries()}\n   * @returns An iterator over the entries of the Set. Each entry is a two-element array\n   * containing the value from the Set, followed by a copy of the same value (`[value, value]`).\n   */\n  *entries(): Generator<[T, T]> {\n    for (const value of this.values()) {\n      yield [value, value] as [T, T];\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nimport {\n  AssertionError,\n  Collection,\n  DefaultObject,\n  IllegalConstructorError,\n  JSONCacheMap,\n  Realm,\n  RealmObject,\n  TypeHelpers,\n  assert,\n  binding,\n} from \"./internal\";\n\n/* eslint-disable jsdoc/multiline-blocks -- We need this to have @ts-expect-error located correctly in the .d.ts bundle */\n\nconst REALM = Symbol(\"Dictionary#realm\");\nconst INTERNAL = Symbol(\"Dictionary#internal\");\nconst HELPERS = Symbol(\"Dictionary#helpers\");\n\nexport type DictionaryChangeSet = {\n  deletions: string[];\n  modifications: string[];\n  insertions: string[];\n};\nexport type DictionaryChangeCallback = (dictionary: Dictionary, changes: DictionaryChangeSet) => void;\n\nconst DEFAULT_PROPERTY_DESCRIPTOR: PropertyDescriptor = { configurable: true, enumerable: true };\nconst PROXY_HANDLER: ProxyHandler<Dictionary> = {\n  get(target, prop, receiver) {\n    const value = Reflect.get(target, prop, receiver);\n    if (typeof value === \"undefined\" && typeof prop === \"string\") {\n      const internal = target[INTERNAL];\n      const fromBinding = target[HELPERS].fromBinding;\n      return fromBinding(internal.tryGetAny(prop));\n    } else {\n      return value;\n    }\n  },\n  set(target, prop, value) {\n    if (typeof prop === \"string\") {\n      const internal = target[INTERNAL];\n      const toBinding = target[HELPERS].toBinding;\n      internal.insertAny(prop, toBinding(value));\n      return true;\n    } else {\n      assert(typeof prop !== \"symbol\", \"Symbols cannot be used as keys of a dictionary\");\n      return false;\n    }\n  },\n  deleteProperty(target, prop) {\n    // We're intentionally not checking !Reflect.has(target, prop) below to allow deletes to propagate for any key\n    if (typeof prop === \"string\") {\n      const internal = target[INTERNAL];\n      internal.tryErase(prop);\n      // We consider any key without a value as \"deletable\", the same way `const foo = {}; delete foo.bar;` returns true\n      return true;\n    } else {\n      return false;\n    }\n  },\n  ownKeys(target) {\n    const internal = target[INTERNAL];\n    const result: (string | symbol)[] = Reflect.ownKeys(target);\n    const keys = internal.keys.snapshot();\n    for (let i = 0; i < keys.size(); i++) {\n      const key = keys.getAny(i);\n      assert.string(key, \"dictionary key\");\n      result.push(key);\n    }\n    return result;\n  },\n  getOwnPropertyDescriptor(target, prop) {\n    const internal = target[INTERNAL];\n    if (typeof prop === \"string\" && internal.contains(prop)) {\n      return {\n        ...DEFAULT_PROPERTY_DESCRIPTOR,\n        get: PROXY_HANDLER.get?.bind(null, target, prop, null),\n        set: PROXY_HANDLER.set?.bind(null, target, prop, null),\n      };\n    } else {\n      return Reflect.getOwnPropertyDescriptor(target, prop);\n    }\n  },\n};\n\n/**\n * Instances of this class are returned when accessing object properties whose type is `\"Dictionary\"`\n *\n * Dictionaries behave mostly like a JavaScript object i.e., as a key/value pair\n * where the key is a string.\n */\nexport class Dictionary<T = unknown> extends Collection<string, T, [string, T], [string, T], DictionaryChangeCallback> {\n  /**\n   * Create a `Results` wrapping a set of query `Results` from the binding.\n   * @internal\n   */\n  constructor(realm: Realm, internal: binding.Dictionary, helpers: TypeHelpers) {\n    if (arguments.length === 0 || !(internal instanceof binding.Dictionary)) {\n      throw new IllegalConstructorError(\"Dictionary\");\n    }\n    super((callback) => {\n      return this[INTERNAL].addKeyBasedNotificationCallback(({ deletions, insertions, modifications }) => {\n        try {\n          callback(proxied, {\n            deletions: deletions.map((value) => {\n              assert.string(value);\n              return value;\n            }),\n            insertions: insertions.map((value) => {\n              assert.string(value);\n              return value;\n            }),\n            modifications: modifications.map((value) => {\n              assert.string(value);\n              return value;\n            }),\n          });\n        } catch (err) {\n          // Scheduling a throw on the event loop,\n          // since throwing synchronously here would result in an abort in the calling C++\n          setImmediate(() => {\n            throw err;\n          });\n        }\n      }, []);\n    });\n\n    const proxied = new Proxy(this, PROXY_HANDLER) as Dictionary<T>;\n\n    Object.defineProperty(this, REALM, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: realm,\n    });\n    Object.defineProperty(this, INTERNAL, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: internal,\n    });\n    Object.defineProperty(this, HELPERS, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: helpers,\n    });\n\n    return proxied;\n  }\n\n  /**\n   * The representation in the binding.\n   * @internal\n   */\n  private declare [REALM]: Realm;\n\n  /**\n   * The representation in the binding.\n   * @internal\n   */\n  private declare [INTERNAL]: binding.Dictionary;\n\n  /** @internal */\n  private declare [HELPERS]: TypeHelpers;\n\n  /** @ts-expect-error We're exposing methods in the end-users namespace of keys */\n  [key: string]: T;\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries Array.prototype.entries}\n   * @returns An iterator with all entries in the dictionary.\n   */\n  *[Symbol.iterator](): Generator<[string, T]> {\n    yield* this.entries();\n  }\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/keys Array.prototype.keys}\n   * @returns An iterator with all values in the dictionary.\n   * @since 10.5.0\n   * @ts-expect-error We're exposing methods in the end-users namespace of keys */\n  *keys(): Generator<string> {\n    const snapshot = this[INTERNAL].keys.snapshot();\n    const size = snapshot.size();\n    for (let i = 0; i < size; i++) {\n      const key = snapshot.getAny(i);\n      assert.string(key);\n      yield key;\n    }\n  }\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/values Array.prototype.values}\n   * @returns An iterator with all values in the dictionary.\n   * @since 10.5.0\n   * @ts-expect-error We're exposing methods in the end-users namespace of values */\n  *values(): Generator<T> {\n    const { fromBinding } = this[HELPERS];\n    const snapshot = this[INTERNAL].values.snapshot();\n    const size = snapshot.size();\n    for (let i = 0; i < size; i++) {\n      const value = snapshot.getAny(i);\n      yield fromBinding(value) as T;\n    }\n  }\n\n  /**\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries Array.prototype.entries}\n   * @returns An iterator with all key/value pairs in the dictionary.\n   * @since 10.5.0\n   * @ts-expect-error We're exposing methods in the end-users namespace of entries */\n  *entries(): Generator<[string, T]> {\n    const { fromBinding } = this[HELPERS];\n    const keys = this[INTERNAL].keys.snapshot();\n    const values = this[INTERNAL].values.snapshot();\n    const size = keys.size();\n    assert(size === values.size(), \"Expected keys and values to equal in size\");\n    for (let i = 0; i < size; i++) {\n      const key = keys.getAny(i);\n      const value = values.getAny(i);\n      yield [key, fromBinding(value)] as [string, T];\n    }\n  }\n\n  /**\n   * Checks if this dictionary has not been deleted and is part of a valid Realm.\n   * @returns `true` if the dictionary can be safely accessed.\n   * @since 0.14.0\n   * @ts-expect-error We're exposing methods in the end-users namespace of keys */\n  isValid() {\n    return this[INTERNAL].isValid;\n  }\n\n  /**\n   * Adds one or more elements with specified key and value to the dictionary or updates value if key exists.\n   * @param elements The object of element(s) to add.\n   * @throws an {@link AssertionError} If not inside a write transaction, input object contains symbol keys or if any value violates types constraints.\n   * @returns The dictionary.\n   * @since 10.6.0\n   * @ts-expect-error We're exposing methods in the end-users namespace of keys */\n  set(elements: { [key: string]: T }): this;\n  /**\n   * Adds an element with the specified key and value to the dictionary or updates value if key exists.\n   * @param key The key of the element to add.\n   * @param value The value of the element to add.\n   * @throws an {@link AssertionError} If not inside a write transaction, key is a symbol or if value violates type constraints.\n   * @returns The dictionary.\n   * @since 12.0.0\n   */\n  set(key: string, value: T): this;\n  /**\n   * Adds one or more elements with the specified key and value to the dictionary or updates value if key exists.\n   * @param elementsOrKey - The element to add or the key of the element to add.\n   * @param value - The value of the element to add.\n   * @throws An {@link AssertionError} if not inside a write transaction, if using symbol as keys, or if any value violates type constraints.\n   * @returns The dictionary.\n   * @since 10.6.0\n   */\n  set(elementsOrKey: string | { [key: string]: T }, value?: T): this {\n    const elements = typeof elementsOrKey === \"object\" ? elementsOrKey : { [elementsOrKey]: value };\n    assert(Object.getOwnPropertySymbols(elements).length === 0, \"Symbols cannot be used as keys of a dictionary\");\n    assert.inTransaction(this[REALM]);\n    const internal = this[INTERNAL];\n    const toBinding = this[HELPERS].toBinding;\n\n    for (const [key, val] of Object.entries(elements)) {\n      internal.insertAny(key, toBinding(val));\n    }\n    return this;\n  }\n\n  /**\n   * Removes elements from the dictionary, with the keys provided.\n   * This does not throw if the keys are already missing from the dictionary.\n   * @param key - The key to be removed.\n   * @throws An {@link AssertionError} if not inside a write transaction.\n   * @returns The dictionary\n   * @since 10.6.0\n   * @ts-expect-error We're exposing methods in the end-users namespace of keys */\n  remove(key: string | string[]): this {\n    assert.inTransaction(this[REALM]);\n    const internal = this[INTERNAL];\n    const keys = typeof key === \"string\" ? [key] : key;\n    for (const k of keys) {\n      internal.tryErase(k);\n    }\n    return this;\n  }\n\n  /**\n   * The plain object representation for JSON serialization.\n   * Use circular JSON serialization libraries such as [@ungap/structured-clone](https://www.npmjs.com/package/@ungap/structured-clone)\n   * and [flatted](https://www.npmjs.com/package/flatted) to stringify Realm entities that have circular structures.\n   * @returns A plain object.\n   * @ts-expect-error We're exposing methods in the end-users namespace of keys */\n  toJSON(_?: string, cache?: unknown): DefaultObject;\n  /** @internal */\n  toJSON(_?: string, cache = new JSONCacheMap()): DefaultObject {\n    return Object.fromEntries(\n      Object.entries(this).map(([k, v]) => [k, v instanceof RealmObject ? v.toJSON(k, cache) : v]),\n    );\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { BSON, Dictionary, List, RealmSet, Results } from \"./internal\";\n\nconst RealmDictionary = Dictionary;\ntype RealmDictionary<T> = Dictionary<T>;\n\nconst RealmList = List;\ntype RealmList<T> = List<T>;\n\nconst RealmResults = Results;\ntype RealmResults<T> = Results<T>;\n\nconst GlobalDate = Date;\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Types {\n  export type Bool = boolean;\n  export type String = string;\n  export type Int = number;\n  export type Float = number;\n  export type Double = number;\n\n  export type Decimal128 = BSON.Decimal128;\n  export const Decimal128 = BSON.Decimal128;\n\n  export type ObjectId = BSON.ObjectId;\n  export const ObjectId = BSON.ObjectId;\n\n  export type UUID = BSON.UUID;\n  export const UUID = BSON.UUID;\n\n  export type Date = typeof GlobalDate;\n  export const Date = GlobalDate;\n\n  export type Data = ArrayBuffer;\n  export const Data = ArrayBuffer;\n\n  export type List<T> = RealmList<T>;\n  export const List: typeof RealmList = RealmList;\n  export type Set<T> = RealmSet<T>;\n  export const Set: typeof RealmSet = RealmSet;\n  export type Dictionary<T> = RealmDictionary<T>;\n  export const Dictionary: typeof RealmDictionary = RealmDictionary;\n  export type Mixed = unknown;\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars -- We don't use the `LinkingPropertyName` at runtime */\n  export type LinkingObjects<ObjectTypeT, LinkingPropertyName> = RealmResults<ObjectTypeT>;\n  export const LinkingObjects: typeof RealmResults = RealmResults;\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { binding } from \"./internal\";\n\n/**\n * Represents the coordinates of a point. The first two required elements of the array are longitude (index 0) and latitude (index 1).\n * The third and optional element is altitude (index 2), but is currently ignored in the geospatial queries calculations.\n */\nexport type GeoPosition = [number, number] | [number, number, number];\n\n/**\n * Interface that satisfies the GeoJSON specification for a polygon.\n * This can be used as one of the possible forms of {@link GeoPolygon}.\n */\nexport interface CanonicalGeoPolygon {\n  coordinates: GeoPosition[][];\n  type: \"Polygon\";\n}\n\n/**\n * Interface that satisfies the GeoJSON specification for a point.\n * Any embedded object that adhere to this interface can be queried in geospatial queries.\n * Additionally, this can be used as one of the possible forms of {@link GeoPoint}.\n */\nexport interface CanonicalGeoPoint {\n  coordinates: GeoPosition;\n  type: \"Point\";\n}\n\n/**\n * Represents a point in spherical geometry.\n * This type cannot be used on its own, only as a building block for the other geospatial types.\n * ({@link GeoCircle}, {@link GeoBox}, {@link GeoPolygon}).\n */\nexport type GeoPoint =\n  /**\n   * This is compatible with {@link https://developer.mozilla.org/en-US/docs/Web/API/GeolocationCoordinates|GeoLocationCoordinates}\n   */\n  | {\n      latitude: number;\n      longitude: number;\n      altitude?: number;\n    }\n  | CanonicalGeoPoint\n  | GeoPosition;\n\n/**\n * Represents a circle in spherical geometry that can be used as an argument for geospatial queries.\n * @example\n * let circle: GeoCircle = {\n *   center: [20, 40],\n *   distance: 0.05,\n * };\n * realm.objects(Restaurant).filtered(\"location geoWithin $0\", circle)\n */\nexport type GeoCircle = {\n  /** The center of the circle. */\n  center: GeoPoint;\n  /**\n   * The radius of the circle in radians. You can use {@link kmToRadians} and {@link miToRadians}\n   * to respectively convert kilometers and miles to radians.\n   */\n  distance: number;\n};\n\n/**\n * Represents a polygon in spherical geometry that can be used as an argument for geospatial queries.\n * The polygon is comprised of at least one outer ring and optionally multiple internal rings representing holes with the following restrictions:\n * - Each ring must contains at least 3 distinct points, where the first and the last point must be the same to indicate a closed ring (this means that each ring\n * must have at least 4 points).\n * - The interior rings must be entirely inside the outer ring.\n * - Rings can share vertices but not edges.\n * - No ring may be empty.\n * @example\n * let polygon: GeoPolygon = {\n *  outerRing: [\n *   [-2, -2],\n *   [3.45, -4.23],\n *   [2.56, 4.62],\n *   [-3.23, 2.5],\n *   [-2, -2],\n *  ],\n * };\n * realm.objects(Restaurant).filtered(\"location geoWithin $0\", polygon)\n */\nexport type GeoPolygon =\n  | {\n      outerRing: GeoPoint[];\n      holes?: GeoPoint[][];\n    }\n  | CanonicalGeoPolygon;\n\n/**\n * Represents a box in spherical geometry that can be used as an argument for geospatial queries.\n * This is a short-hand for the equivalent {@link GeoPolygon}.\n * @example\n * let box: GeoBox = {\n *   bottomLeft: [-1, -1],\n *   topRight: [1, 1],\n * };\n * realm.objects(Restaurant).filtered(\"location geoWithin $0\", box)\n */\nexport type GeoBox = {\n  /** The bottom left point of the box. */\n  bottomLeft: GeoPoint;\n  /** The top right point of the box. */\n  topRight: GeoPoint;\n};\n\n/** @internal */\nexport function circleToBindingGeospatial(circle: GeoCircle): binding.Geospatial {\n  return binding.Geospatial.makeFromCircle({\n    center: toBindingGeoPoint(circle.center),\n    radiusRadians: circle.distance,\n  });\n}\n\n/** @internal */\nexport function boxToBindingGeospatial(box: GeoBox): binding.Geospatial {\n  return binding.Geospatial.makeFromBox({\n    lo: toBindingGeoPoint(box.bottomLeft),\n    hi: toBindingGeoPoint(box.topRight),\n  });\n}\n\n/** @internal */\nexport function polygonToBindingGeospatial(polygon: GeoPolygon): binding.Geospatial {\n  let points: binding.GeoPoint_Relaxed[][];\n  if (\"type\" in polygon) {\n    points = toBindingGeoPointArray(polygon.coordinates);\n  } else {\n    points = toBindingGeoPointArray([polygon.outerRing].concat(polygon.holes ?? []));\n  }\n\n  return binding.Geospatial.makeFromPolygon({\n    points,\n  });\n}\n\nfunction toBindingGeoPoint(p: GeoPoint): binding.GeoPoint_Relaxed {\n  if (Array.isArray(p)) {\n    return { longitude: p[0], latitude: p[1], altitude: p[2] };\n  } else if (\"type\" in p) {\n    return { longitude: p.coordinates[0], latitude: p.coordinates[1], altitude: p.coordinates[2] };\n  } else {\n    return p;\n  }\n}\n\nfunction toBindingGeoPointArray(arr: GeoPoint[][]): binding.GeoPoint_Relaxed[][] {\n  return arr.map((ring) => ring.map((p) => toBindingGeoPoint(p)));\n}\n\nconst earthRadiusKm = 6378.1;\nconst earthRadiusMi = 3963.16760121; //earthRadiusKm / 1.609344 (km/mi)\n\n/**\n * Converts the input kilometer value in radians.\n * @param km - The kilometers to convert.\n * @returns The corresponding number of radians.\n */\nexport function kmToRadians(km: number): number {\n  return km / earthRadiusKm;\n}\n\n/**\n * Converts the input miles value in radians.\n * @param mi - The miles to convert.\n * @returns The corresponding number of radians.\n */\nexport function miToRadians(mi: number): number {\n  return mi / earthRadiusMi;\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { assert, binding } from \"./internal\";\n\nexport type LogLevel = \"all\" | \"trace\" | \"debug\" | \"detail\" | \"info\" | \"warn\" | \"error\" | \"fatal\" | \"off\";\n\nexport enum NumericLogLevel {\n  All = 0,\n  Trace = 1,\n  Debug = 2,\n  Detail = 3,\n  Info = 4,\n  Warn = 5,\n  Error = 6,\n  Fatal = 7,\n  Off = 8,\n}\n\n/**\n * A callback passed to `Realm.App.Sync.setLogger` when instrumenting the Atlas Device Sync client with a custom logger.\n * @param level - The level of the log entry between 0 and 8 inclusively.\n * Use this as an index into `['all', 'trace', 'debug', 'detail', 'info', 'warn', 'error', 'fatal', 'off']` to get the name of the level.\n * @param message - The message of the log entry.\n */\nexport type Logger = (level: NumericLogLevel, message: string) => void;\n\nexport type LoggerCallback = (level: LogLevel, message: string) => void;\n\n/** @internal */\nexport function toBindingLoggerLevel(arg: LogLevel): binding.LoggerLevel {\n  const bindingLogLevel = inverseTranslationTable[arg];\n  assert(bindingLogLevel !== undefined, `Unexpected log level: ${arg}`);\n  return bindingLogLevel;\n}\n\n/** @internal */\nexport function fromBindingLoggerLevelToNumericLogLevel(arg: binding.LoggerLevel): NumericLogLevel {\n  // For now, these map 1-to-1\n  return arg as unknown as NumericLogLevel;\n}\n\nconst translationTable: Record<binding.LoggerLevel, LogLevel> = {\n  [binding.LoggerLevel.All]: \"all\",\n  [binding.LoggerLevel.Trace]: \"trace\",\n  [binding.LoggerLevel.Debug]: \"debug\",\n  [binding.LoggerLevel.Detail]: \"detail\",\n  [binding.LoggerLevel.Info]: \"info\",\n  [binding.LoggerLevel.Warn]: \"warn\",\n  [binding.LoggerLevel.Error]: \"error\",\n  [binding.LoggerLevel.Fatal]: \"fatal\",\n  [binding.LoggerLevel.Off]: \"off\",\n};\n\nconst inverseTranslationTable: Record<LogLevel, binding.LoggerLevel> = Object.fromEntries(\n  Object.entries(translationTable).map(([key, val]) => [val, Number(key)]),\n) as Record<LogLevel, binding.LoggerLevel>;\n\n/** @internal */\nexport function fromBindingLoggerLevelToLogLevel(arg: binding.LoggerLevel): LogLevel {\n  return translationTable[arg];\n}\n\n/** @internal */\nexport const defaultLogger: LoggerCallback = function (logLevel: LogLevel, message: string) {\n  const formattedLogMessage = `[${logLevel}] ${message}`;\n  /* eslint-disable no-console */\n  if (logLevel === \"error\" || logLevel === \"fatal\") {\n    console.error(formattedLogMessage);\n  } else if (logLevel === \"warn\") {\n    console.warn(formattedLogMessage);\n  } else {\n    console.log(formattedLogMessage);\n  }\n  /* eslint-enable no-console */\n};\n\n/** @internal */\nexport const defaultLoggerLevel: LogLevel = \"warn\";\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * Remove entries for undefined property values.\n * @internal\n */\nexport function cleanArguments(args: unknown[] | unknown): unknown[] | unknown {\n  if (Array.isArray(args)) {\n    // Note: `undefined` elements in the array is not removed.\n    return args.map(cleanArguments);\n  }\n  // Checking for constructor to allow for `new Date()` and `new ObjectId()` and similar.\n  if (args === null || typeof args !== \"object\" || args?.constructor !== Object) {\n    return args;\n  }\n  const result: { [key: string]: unknown } = {};\n  for (const [key, value] of Object.entries(args)) {\n    if (value !== undefined) {\n      result[key] = cleanArguments(value);\n    }\n  }\n  return result;\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { EJSON, ObjectId, UUID } from \"bson\";\nimport { syncProxyConfig } from \"src/platform/sync-proxy-config\";\n\nimport {\n  AnyUser,\n  BSON,\n  ClientResetError,\n  MutableSubscriptionSet,\n  Realm,\n  SubscriptionSet,\n  SyncError,\n  SyncSession,\n  TypeAssertionError,\n  User,\n  assert,\n  binding,\n  toBindingClientResetMode,\n  toBindingErrorHandler,\n  toBindingErrorHandlerWithOnManual,\n  toBindingNotifyAfterClientReset,\n  toBindingNotifyAfterClientResetWithFallback,\n  toBindingNotifyBeforeClientReset,\n  toBindingStopPolicy,\n} from \"../internal\";\n\nexport type PartitionValue = string | number | BSON.ObjectId | BSON.UUID | null;\n\nexport enum OpenRealmBehaviorType {\n  DownloadBeforeOpen = \"downloadBeforeOpen\",\n  OpenImmediately = \"openImmediately\",\n}\n\nexport enum OpenRealmTimeOutBehavior {\n  OpenLocalRealm = \"openLocalRealm\",\n  ThrowException = \"throwException\",\n}\n\nexport type OpenRealmBehaviorConfiguration = {\n  type: OpenRealmBehaviorType;\n  timeOut?: number;\n  timeOutBehavior?: OpenRealmTimeOutBehavior;\n};\n\nexport type ErrorCallback = (session: SyncSession, error: SyncError | ClientResetError) => void;\nexport type ClientResetFallbackCallback = (session: SyncSession, path: string) => void;\nexport type ClientResetBeforeCallback = (localRealm: Realm) => void;\nexport type ClientResetAfterCallback = (localRealm: Realm, remoteRealm: Realm) => void;\n\nexport enum SessionStopPolicy {\n  AfterUpload = \"after-upload\",\n  Immediately = \"immediately\",\n  Never = \"never\",\n}\n\n/**\n */\nexport enum ClientResetMode {\n  /** @deprecated See {@link Realm.App.Sync.initiateClientReset} */\n  Manual = \"manual\",\n  /**\n   * Download a fresh copy from the server.\n   */\n  DiscardUnsyncedChanges = \"discardUnsyncedChanges\",\n  /**\n   * Merged remote and local, unsynced changes.\n   */\n  RecoverUnsyncedChanges = \"recoverUnsyncedChanges\",\n  /**\n   * Download a fresh copy from the server if recovery of unsynced changes is not possible.\n   */\n  RecoverOrDiscardUnsyncedChanges = \"recoverOrDiscardUnsyncedChanges\",\n}\n\nexport type ClientResetManualConfiguration = {\n  mode: ClientResetMode.Manual;\n  onManual?: ClientResetFallbackCallback;\n};\n\nexport type ClientResetDiscardUnsyncedChangesConfiguration = {\n  mode: ClientResetMode.DiscardUnsyncedChanges;\n  onAfter?: ClientResetAfterCallback;\n  /**\n   * Called before sync initiates a client reset.\n   */\n  onBefore?: ClientResetBeforeCallback;\n};\n\nexport type ClientResetRecoverUnsyncedChangesConfiguration = {\n  mode: ClientResetMode.RecoverUnsyncedChanges;\n  onAfter?: ClientResetAfterCallback;\n  /**\n   * Called before sync initiates a client reset.\n   */\n  onBefore?: ClientResetBeforeCallback;\n  /**\n   * Called if recovery or discard fail.\n   */\n  onFallback?: ClientResetFallbackCallback;\n};\n\nexport type ClientResetRecoverOrDiscardUnsyncedChangesConfiguration = {\n  mode: ClientResetMode.RecoverOrDiscardUnsyncedChanges;\n  onAfter?: ClientResetAfterCallback;\n  /**\n   * Called before sync initiates a client reset.\n   */\n  onBefore?: ClientResetBeforeCallback;\n  /**\n   * Called if recovery or discard fail.\n   */\n  onFallback?: ClientResetFallbackCallback;\n};\n\nexport type ClientResetConfig =\n  | ClientResetManualConfiguration\n  | ClientResetDiscardUnsyncedChangesConfiguration\n  | ClientResetRecoverUnsyncedChangesConfiguration\n  | ClientResetRecoverOrDiscardUnsyncedChangesConfiguration;\n\nexport type SSLConfiguration = {\n  /**\n   * Whether the SSL certificates must be validated. This should generally\n   * be `true` in production.\n   *\n   * Default is `true`.\n   */\n  validate?: boolean;\n  /**\n   * The path where to find trusted SSL certificates used to validate the\n   * server certificate. If `undefined`, validation will be delegated to\n   * the provided `validateCertificates` callback.\n   */\n  certificatePath?: string;\n  /**\n   * A callback function used to validate the server's SSL certificate. It\n   * is invoked for every certificate in the certificate chain starting from\n   * the root downward. An SSL connection will be established if all certificates\n   * are accepted. The certificate will be accepted if the callback returns `true`,\n   * or rejected if returning `false`. This callback is only invoked if\n   * `certificatePath` is `undefined`.\n   */\n  validateCertificates?: SSLVerifyCallback;\n};\n\nexport type SSLVerifyCallback = (sslVerifyObject: SSLVerifyObject) => boolean;\n\ntype SSLVerifyCallbackWithListArguments = (\n  serverAddress: string,\n  serverPort: number,\n  pemCertificate: string,\n  preverifyOk: number, // Acts as `SSLVerifyObject.acceptedByOpenSSL`\n  depth: number,\n) => boolean;\n\nexport type SSLVerifyObject = {\n  /**\n   * The address that the SSL connection is being established to.\n   */\n  serverAddress: string;\n  /**\n   * The port that the SSL connection is being established to.\n   */\n  serverPort: number;\n  /**\n   * The certificate using the PEM format.\n   */\n  pemCertificate: string;\n  /**\n   * The result of OpenSSL's pre-verification of the certificate. If `true`,\n   * the certificate has been accepted and will generally be safe to trust.\n   * If `false`, it has been rejected and the user should do an independent\n   * validation step.\n   */\n  acceptedByOpenSSL: boolean;\n  /**\n   * The position of the certificate in the certificate chain. The actual\n   * server certificate has `depth` 0 (lowest) and also contains the host\n   * name, while all other certificates up the chain have higher depths in\n   * increments of 1.\n   */\n  depth: number;\n};\n\nexport enum ProxyType {\n  HTTP = \"http\",\n  HTTPS = \"https\",\n}\n\nexport type SyncProxyConfig = {\n  address: string;\n  port: number;\n  type: ProxyType;\n};\n\n/**\n * This describes the different options used to create a {@link Realm} instance with Atlas App Services synchronization.\n */\nexport type BaseSyncConfiguration = {\n  /**\n   * A {@link Realm.User} object obtained by calling `Realm.App.logIn`.\n   */\n  user: AnyUser;\n  /**\n   * Whether to create a new file and sync in background or wait for the file to be synced.\n   * @default\n   * {\n   *   type: OpenRealmBehaviorType.DownloadBeforeOpen,\n   *   timeOut: 30 * 1000,\n   *   timeOutBehavior: OpenRealmTimeOutBehavior.ThrowException,\n   * }\n   */\n  newRealmFileBehavior?: OpenRealmBehaviorConfiguration;\n  /**\n   * Whether to open existing file and sync in background or wait for the sync of the file to complete and then open.\n   * If not set, the Realm will be downloaded before opened.\n   * @default\n   * {\n   *   type: OpenRealmBehaviorType.DownloadBeforeOpen,\n   *   timeOut: 30 * 1000,\n   *   timeOutBehavior: OpenRealmTimeOutBehavior.ThrowException,\n   * }\n   */\n  existingRealmFileBehavior?: OpenRealmBehaviorConfiguration;\n  /**\n   * A callback function which is called in error situations.\n   * The callback is passed two arguments: `session` and `syncError`.\n   * If `syncError.name == \"ClientReset\"`, `syncError.path` and `syncError.config` are set and `syncError.readOnly` is true (deprecated, see `Realm.App.Sync~ClientResetConfiguration`).\n   * Otherwise, `syncError` can have up to five properties: `name`, `message`, `isFatal`, `category`, and `code`.\n   */\n  onError?: ErrorCallback;\n  /**\n   * Custom HTTP headers, which are included when making requests to the server.\n   */\n  customHttpHeaders?: Record<string, string>;\n  /**\n   * SSL configuration.\n   */\n  ssl?: SSLConfiguration;\n  /**\n   * Configuration of Client Reset\n   */\n  clientReset?: ClientResetConfig;\n  /**\n   * Set to true, all async operations (such as opening the Realm with `Realm.open`) will fail when a non-fatal error, such as a timeout, occurs.\n   */\n  cancelWaitsOnNonFatalError?: boolean;\n  /** @internal */\n  _sessionStopPolicy?: SessionStopPolicy;\n  /**\n   * HTTP proxy configuration (node.js/Electron only)\n   */\n  proxyConfig?: SyncProxyConfig;\n};\n\nexport type InitialSubscriptions = {\n  /**\n   * A callback to make changes to a SubscriptionSet.\n   * @see {@link SubscriptionSet.update} for more information.\n   */\n  update: (mutableSubscriptions: MutableSubscriptionSet, realm: Realm) => void;\n  /**\n   * If `true`, the {@link InitialSubscriptions.update} callback will be rerun every time the Realm is\n   * opened (e.g. every time a user opens your app), otherwise (by default) it\n   * will only be run if the Realm does not yet exist.\n   */\n  rerunOnOpen?: boolean;\n};\n\nexport type FlexibleSyncConfiguration = BaseSyncConfiguration & {\n  flexible: true;\n  partitionValue?: never;\n  /**\n   * Optional object to configure the setup of an initial set of flexible\n   * sync subscriptions to be used when opening the Realm. If this is specified,\n   * {@link Realm.open} will not resolve until this set of subscriptions has been\n   * fully synchronized with the server.\n   * @example\n   * const config: Realm.Configuration = {\n   *   sync: {\n   *     user,\n   *     flexible: true,\n   *     initialSubscriptions: {\n   *       update: (subs, realm) => {\n   *         subs.add(realm.objects('Task'));\n   *       },\n   *       rerunOnOpen: true,\n   *     },\n   *   },\n   *   // ... rest of config ...\n   * };\n   * const realm = await Realm.open(config);\n   *\n   * // At this point, the Realm will be open with the data for the initial set\n   * // subscriptions fully synchronised.\n   */\n  initialSubscriptions?: InitialSubscriptions;\n};\n\nexport type PartitionSyncConfiguration = BaseSyncConfiguration & {\n  flexible?: never;\n  partitionValue: PartitionValue;\n  initialSubscriptions?: never;\n};\n\nexport type SyncConfiguration = FlexibleSyncConfiguration | PartitionSyncConfiguration;\n\n/** @internal */\nexport function toBindingSyncConfig(config: SyncConfiguration): binding.SyncConfig_Relaxed {\n  const {\n    user,\n    flexible,\n    partitionValue,\n    onError,\n    _sessionStopPolicy,\n    customHttpHeaders,\n    ssl,\n    clientReset,\n    cancelWaitsOnNonFatalError,\n    proxyConfig,\n  } = config;\n\n  return {\n    user: user.internal,\n    partitionValue: flexible ? undefined : EJSON.stringify(partitionValue),\n    flxSyncRequested: !!flexible,\n    stopPolicy: _sessionStopPolicy\n      ? toBindingStopPolicy(_sessionStopPolicy)\n      : binding.SyncSessionStopPolicy.AfterChangesUploaded,\n    customHttpHeaders,\n    clientValidateSsl: ssl?.validate,\n    sslTrustCertificatePath: ssl?.certificatePath,\n    sslVerifyCallback: ssl?.validateCertificates\n      ? binding.Helpers.makeSslVerifyCallback(toSSLVerifyCallbackWithListArguments(ssl.validateCertificates))\n      : undefined,\n    ...parseClientResetConfig(clientReset, onError),\n    cancelWaitsOnNonfatalError: cancelWaitsOnNonFatalError,\n    proxyConfig: proxyConfig ? parseSyncProxyConfig(proxyConfig) : syncProxyConfig.create(),\n  };\n}\n\n/** @internal */\nfunction toSSLVerifyCallbackWithListArguments(verifyCallback: SSLVerifyCallback): SSLVerifyCallbackWithListArguments {\n  return (serverAddress: string, serverPort: number, pemCertificate: string, preverifyOk: number, depth: number) =>\n    verifyCallback({ serverAddress, serverPort, pemCertificate, acceptedByOpenSSL: !!preverifyOk, depth });\n}\n\n/** @internal */\nfunction parseClientResetConfig(clientReset: ClientResetConfig | undefined, onError: ErrorCallback | undefined) {\n  if (!clientReset) {\n    return {\n      clientResyncMode: undefined,\n      notifyBeforeClientReset: undefined,\n      notifyAfterClientReset: undefined,\n      errorHandler: onError ? toBindingErrorHandler(onError) : undefined,\n    };\n  }\n  switch (clientReset.mode) {\n    case ClientResetMode.Manual: {\n      return parseManual(clientReset as ClientResetManualConfiguration, onError);\n    }\n    case ClientResetMode.DiscardUnsyncedChanges: {\n      return {\n        ...parseDiscardUnsyncedChanges(clientReset as ClientResetDiscardUnsyncedChangesConfiguration),\n        errorHandler: onError ? toBindingErrorHandler(onError) : undefined,\n      };\n    }\n    case ClientResetMode.RecoverUnsyncedChanges: {\n      return {\n        ...parseRecoverUnsyncedChanges(clientReset as ClientResetRecoverUnsyncedChangesConfiguration),\n        errorHandler: onError ? toBindingErrorHandler(onError) : undefined,\n      };\n    }\n    case ClientResetMode.RecoverOrDiscardUnsyncedChanges: {\n      return {\n        ...parseRecoverOrDiscardUnsyncedChanges(clientReset as ClientResetRecoverOrDiscardUnsyncedChangesConfiguration),\n        errorHandler: onError ? toBindingErrorHandler(onError) : undefined,\n      };\n    }\n  }\n}\n\n/** @internal */\nfunction parseManual(clientReset: ClientResetManualConfiguration, onError: ErrorCallback | undefined) {\n  return {\n    clientResyncMode: toBindingClientResetMode(clientReset.mode),\n    errorHandler: toBindingErrorHandlerWithOnManual(onError, clientReset.onManual),\n  };\n}\n\n/** @internal */\nfunction parseDiscardUnsyncedChanges(clientReset: ClientResetDiscardUnsyncedChangesConfiguration) {\n  return {\n    clientResyncMode: toBindingClientResetMode(clientReset.mode),\n    notifyBeforeClientReset: clientReset.onBefore ? toBindingNotifyBeforeClientReset(clientReset.onBefore) : undefined,\n    notifyAfterClientReset: clientReset.onAfter ? toBindingNotifyAfterClientReset(clientReset.onAfter) : undefined,\n  };\n}\n\n/** @internal */\nfunction parseRecoverUnsyncedChanges(clientReset: ClientResetRecoverUnsyncedChangesConfiguration) {\n  return {\n    clientResyncMode: toBindingClientResetMode(clientReset.mode),\n    notifyBeforeClientReset: clientReset.onBefore ? toBindingNotifyBeforeClientReset(clientReset.onBefore) : undefined,\n    notifyAfterClientReset: clientReset.onAfter\n      ? toBindingNotifyAfterClientResetWithFallback(clientReset.onAfter, clientReset.onFallback)\n      : undefined,\n  };\n}\n\n/** @internal */\nfunction parseRecoverOrDiscardUnsyncedChanges(clientReset: ClientResetRecoverOrDiscardUnsyncedChangesConfiguration) {\n  return {\n    clientResyncMode: toBindingClientResetMode(clientReset.mode),\n    notifyBeforeClientReset: clientReset.onBefore ? toBindingNotifyBeforeClientReset(clientReset.onBefore) : undefined,\n    notifyAfterClientReset: clientReset.onAfter\n      ? toBindingNotifyAfterClientResetWithFallback(clientReset.onAfter, clientReset.onFallback)\n      : undefined,\n  };\n}\n\n/** @internal */\nfunction parseProxyType(proxyType: ProxyType) {\n  switch (proxyType) {\n    case ProxyType.HTTP:\n      return binding.ProxyType.Http;\n    case ProxyType.HTTPS:\n      return binding.ProxyType.Https;\n  }\n}\n\n/** @internal */\nfunction parseSyncProxyConfig(syncProxyConfig: SyncProxyConfig) {\n  return {\n    ...syncProxyConfig,\n    type: parseProxyType(syncProxyConfig.type),\n  };\n}\n\n/**\n * Validate the fields of a user-provided realm sync configuration.\n * @internal\n */\nexport function validateSyncConfiguration(config: unknown): asserts config is SyncConfiguration {\n  assert.object(config, \"'sync' on realm configuration\", { allowArrays: false });\n  const {\n    user,\n    newRealmFileBehavior,\n    existingRealmFileBehavior,\n    onError,\n    customHttpHeaders,\n    ssl,\n    clientReset,\n    flexible,\n    cancelWaitOnNonFatalError: cancelWaitsOnNonFatalError,\n  } = config;\n\n  assert.instanceOf(user, User, \"'user' on realm sync configuration\");\n  if (cancelWaitsOnNonFatalError !== undefined) {\n    assert.boolean(cancelWaitsOnNonFatalError, \"'cancelWaitOnNonFatalError' on sync configuration\");\n  }\n  if (newRealmFileBehavior !== undefined) {\n    validateOpenRealmBehaviorConfiguration(newRealmFileBehavior, \"newRealmFileBehavior\");\n  }\n  if (existingRealmFileBehavior !== undefined) {\n    validateOpenRealmBehaviorConfiguration(existingRealmFileBehavior, \"existingRealmFileBehavior\");\n  }\n  if (onError !== undefined) {\n    assert.function(onError, \"'onError' on realm sync configuration\");\n  }\n  if (customHttpHeaders !== undefined) {\n    assert.object(customHttpHeaders, \"'customHttpHeaders' on realm sync configuration\", { allowArrays: false });\n    for (const key in customHttpHeaders) {\n      assert.string(customHttpHeaders[key], \"all property values of 'customHttpHeaders' on realm sync configuration\");\n    }\n  }\n  if (ssl !== undefined) {\n    validateSSLConfiguration(ssl);\n  }\n  if (clientReset !== undefined) {\n    validateClientResetConfiguration(clientReset);\n  }\n  // Assume the user intends to use Flexible Sync for all truthy values provided.\n  if (flexible) {\n    validateFlexibleSyncConfiguration(config);\n  } else {\n    validatePartitionSyncConfiguration(config);\n  }\n}\n\n/**\n * Validate the fields of a user-provided open realm behavior configuration.\n */\nfunction validateOpenRealmBehaviorConfiguration(\n  config: unknown,\n  target: string,\n): asserts config is OpenRealmBehaviorConfiguration {\n  assert.object(config, `'${target}' on realm sync configuration`, { allowArrays: false });\n  assert(\n    config.type === OpenRealmBehaviorType.DownloadBeforeOpen || config.type === OpenRealmBehaviorType.OpenImmediately,\n    `'${target}.type' on realm sync configuration must be either '${OpenRealmBehaviorType.DownloadBeforeOpen}' or '${OpenRealmBehaviorType.OpenImmediately}'.`,\n  );\n  if (config.timeOut !== undefined) {\n    assert.number(config.timeOut, `'${target}.timeOut' on realm sync configuration`);\n  }\n  if (config.timeOutBehavior !== undefined) {\n    assert(\n      config.timeOutBehavior === OpenRealmTimeOutBehavior.OpenLocalRealm ||\n        config.timeOutBehavior === OpenRealmTimeOutBehavior.ThrowException,\n      `'${target}.timeOutBehavior' on realm sync configuration must be either '${OpenRealmTimeOutBehavior.OpenLocalRealm}' or '${OpenRealmTimeOutBehavior.ThrowException}'.`,\n    );\n  }\n}\n\n/**\n * Validate the fields of a user-provided SSL configuration.\n */\nfunction validateSSLConfiguration(config: unknown): asserts config is SSLConfiguration {\n  assert.object(config, \"'ssl' on realm sync configuration\");\n  if (config.validate !== undefined) {\n    assert.boolean(config.validate, \"'ssl.validate' on realm sync configuration\");\n  }\n  if (config.certificatePath !== undefined) {\n    assert.string(config.certificatePath, \"'ssl.certificatePath' on realm sync configuration\");\n  }\n  if (config.validateCertificates !== undefined) {\n    assert.function(config.validateCertificates, \"'ssl.validateCertificates' on realm sync configuration\");\n  }\n}\n\n/**\n * Validate the fields of a user-provided client reset configuration.\n */\nfunction validateClientResetConfiguration(config: unknown): asserts config is ClientResetConfig {\n  assert.object(config, \"'clientReset' on realm sync configuration\", { allowArrays: false });\n  const modes = Object.values(ClientResetMode);\n  assert(\n    modes.includes(config.mode as ClientResetMode),\n    `'clientReset' on realm sync configuration must be one of the following: '${modes.join(\"', '\")}'`,\n  );\n  if (config.onManual !== undefined) {\n    assert.function(config.onManual, \"'clientReset.onManual' on realm sync configuration\");\n  }\n  if (config.onAfter !== undefined) {\n    assert.function(config.onAfter, \"'clientReset.onAfter' on realm sync configuration\");\n  }\n  if (config.onBefore !== undefined) {\n    assert.function(config.onBefore, \"'clientReset.onBefore' on realm sync configuration\");\n  }\n  if (config.onFallback !== undefined) {\n    assert.function(config.onFallback, \"'clientReset.onFallback' on realm sync configuration\");\n  }\n}\n\n/**\n * Validate the fields of a user-provided realm flexible sync configuration.\n */\nfunction validateFlexibleSyncConfiguration(\n  config: Record<string, unknown>,\n): asserts config is FlexibleSyncConfiguration {\n  const { flexible, partitionValue, initialSubscriptions } = config;\n\n  assert(\n    flexible === true,\n    \"'flexible' must always be true for realms using flexible sync. To enable partition-based sync, remove 'flexible' and specify 'partitionValue'.\",\n  );\n  if (initialSubscriptions !== undefined) {\n    assert.object(initialSubscriptions, \"'initialSubscriptions' on realm sync configuration\", { allowArrays: false });\n    assert.function(initialSubscriptions.update, \"'initialSubscriptions.update' on realm sync configuration\");\n    if (initialSubscriptions.rerunOnOpen !== undefined) {\n      assert.boolean(\n        initialSubscriptions.rerunOnOpen,\n        \"'initialSubscriptions.rerunOnOpen' on realm sync configuration\",\n      );\n    }\n  }\n  assert(\n    partitionValue === undefined,\n    \"'partitionValue' cannot be specified when flexible sync is enabled. To enable partition-based sync, remove 'flexible' and specify 'partitionValue'.\",\n  );\n}\n\n/**\n * Validate the fields of a user-provided realm partition sync configuration.\n */\nfunction validatePartitionSyncConfiguration(\n  config: Record<string, unknown>,\n): asserts config is PartitionSyncConfiguration {\n  const { flexible, partitionValue, initialSubscriptions } = config;\n\n  validatePartitionValue(partitionValue);\n  // We only allow `flexible` to be `true` (for Flexible Sync) or `undefined` (for Partition Sync).\n  // `{ flexible: false }` is not allowed because TypeScript cannot discriminate that type correctly\n  // with `strictNullChecks` disabled, and there is no real use case for `{ flexible: false }`.\n  assert(\n    flexible === undefined,\n    \"'flexible' can only be specified to enable flexible sync. To enable flexible sync, remove 'partitionValue' and set 'flexible' to true.\",\n  );\n  assert(\n    initialSubscriptions === undefined,\n    \"'initialSubscriptions' can only be specified when flexible sync is enabled. To enable flexible sync, remove 'partitionValue' and set 'flexible' to true.\",\n  );\n}\n\n/**\n * Validate the user-provided partition value of a realm sync configuration.\n */\nfunction validatePartitionValue(value: unknown): asserts value is PartitionValue {\n  if (typeof value === \"number\") {\n    assert(\n      Number.isSafeInteger(value),\n      `Expected 'partitionValue' on realm sync configuration to be an integer, got ${value}.`,\n    );\n  } else {\n    assert(\n      typeof value === \"string\" || value instanceof ObjectId || value instanceof UUID || value === null,\n      `Expected 'partitionValue' on realm sync configuration to be an integer, string, ObjectId, UUID, or null, got ${TypeAssertionError.deriveType(\n        value,\n      )}.`,\n    );\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { App, assert, binding } from \"../internal\";\n\n/**\n * Types of an authentication provider.\n */\nexport enum ProviderType {\n  AnonUser = \"anon-user\",\n  ApiKey = \"api-key\",\n  LocalUserPass = \"local-userpass\",\n  CustomFunction = \"custom-function\",\n  CustomToken = \"custom-token\",\n  OAuth2Google = \"oauth2-google\",\n  OAuth2Facebook = \"oauth2-facebook\",\n  OAuth2Apple = \"oauth2-apple\",\n}\n\nexport function isProviderType(arg: string): arg is ProviderType {\n  return Object.values(ProviderType).includes(arg as ProviderType);\n}\n\nexport class Credentials {\n  /** @internal */\n  public internal: binding.AppCredentials;\n\n  /** @internal */\n  private constructor(internal: binding.AppCredentials) {\n    this.internal = internal;\n  }\n\n  /**\n   * Creates credentials for an anonymous user. These can only be used once - using them a second\n   * time will result in a different user being logged in. If you need to get a user that has already logged\n   * in with the Anonymous credentials, use {@link App.currentUser} or {@link App.allUsers}.\n   * @param reuse - Reuse any existing anonymous user already logged in.\n   * @returns An instance of `Credentials` that can be used in {@link App.logIn}.\n   * @see https://docs.mongodb.com/realm/authentication/anonymous/\n   */\n  static anonymous(reuse = true): Credentials {\n    return new Credentials(binding.AppCredentials.anonymous(reuse));\n  }\n\n  /**\n   * Creates credentials based on a login with an email address and a password.\n   * @returns An instance of `Credentials` that can be used in {@link App.logIn}.\n   * @see https://www.mongodb.com/docs/atlas/app-services/authentication/email-password/\n   */\n  static emailPassword(credentials: { email: string; password: string }): Credentials;\n  static emailPassword(email: string, password: string): Credentials;\n  static emailPassword(arg1: { email: string; password: string } | string, password?: string): Credentials {\n    if (typeof arg1 === \"string\") {\n      assert.string(password, \"password\");\n      return new Credentials(binding.AppCredentials.usernamePassword(arg1, password));\n    } else {\n      assert.string(arg1.email, \"email\");\n      assert.string(arg1.password, \"password\");\n      return new Credentials(binding.AppCredentials.usernamePassword(arg1.email, arg1.password));\n    }\n  }\n\n  /**\n   * Creates credentials from an API key.\n   * @param key - A string identifying the API key.\n   * @returns An instance of `Credentials` that can be used in {@link App.logIn}.\n   * @see https://www.mongodb.com/docs/atlas/app-services/authentication/api-key/\n   */\n  static apiKey(key: string): Credentials {\n    return new Credentials(binding.AppCredentials.apiKey(key));\n  }\n\n  /**\n   * Creates credentials based on an Apple login.\n   * @param token - An Apple authentication token, obtained by logging into Apple.\n   * @returns An instance of `Credentials` that can be used in {@link App.logIn}.\n   * @see https://www.mongodb.com/docs/atlas/app-services/authentication/apple/\n   */\n  static apple(token: string): Credentials {\n    return new Credentials(binding.AppCredentials.apple(token));\n  }\n\n  /**\n   * Creates credentials based on a Facebook login.\n   * @param token - A Facebook authentication token, obtained by logging into Facebook.\n   * @returns An instance of `Credentials` that can be used in {@link App.logIn}.\n   * @see https://www.mongodb.com/docs/atlas/app-services/authentication/facebook/\n   */\n  static facebook(token: string): Credentials {\n    return new Credentials(binding.AppCredentials.facebook(token));\n  }\n\n  /**\n   * Creates credentials based on a Google login.\n   * @param authObject - An object with either an `authCode` or `idToken` property.\n   * @returns An instance of `Credentials` that can be used in {@link App.logIn}.\n   * @see https://www.mongodb.com/docs/atlas/app-services/authentication/google/\n   */\n  static google(authObject: { authCode: string } | { idToken: string }): Credentials;\n  static google({ authCode, idToken }: { authCode?: string; idToken?: string }): Credentials {\n    let internal: binding.AppCredentials;\n    if (authCode !== undefined) {\n      assert(idToken === undefined, \"Must not supply both an authCode or idToken field\");\n      internal = binding.AppCredentials.googleAuth(binding.GoogleAuthCode.make(authCode));\n    } else {\n      assert(idToken !== undefined, \"Must supply either an authCode or idToken field\");\n      internal = binding.AppCredentials.googleId(binding.GoogleIdToken.make(idToken));\n    }\n    return new Credentials(internal);\n  }\n\n  /**\n   * Creates credentials with a JSON Web Token (JWT) provider and user identifier.\n   * @param token - A string identifying the user. Usually an identity token or a username.\n   * @returns An instance of `Credentials` that can be used in {@link App.logIn}.\n   * @see https://www.mongodb.com/docs/atlas/app-services/authentication/custom-jwt/\n   */\n  static jwt(token: string): Credentials {\n    return new Credentials(binding.AppCredentials.custom(token));\n  }\n\n  /**\n   * Creates credentials with an Atlas App Services function and user identifier.\n   * @param payload - An object identifying the user. Usually an identity token or a username.\n   * @returns An instance of `Credentials` that can be used in {@link App.logIn}.\n   * @see https://www.mongodb.com/docs/atlas/app-services/authentication/custom-function/\n   */\n  static function(payload: object): Credentials {\n    return new Credentials(binding.AppCredentials.function(payload as Record<string, binding.EJson>));\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  AnyApp,\n  ApiKeyAuth,\n  App,\n  Credentials,\n  DefaultFunctionsFactory,\n  DefaultObject,\n  DefaultUserProfileData,\n  Document,\n  Listeners,\n  MongoDB,\n  MongoDBCollection,\n  ProviderType,\n  PushClient,\n  assert,\n  binding,\n  cleanArguments,\n  createFactory,\n  isProviderType,\n  network,\n} from \"../internal\";\n\nexport type UserChangeCallback = () => void;\n\n/**\n * The state of a user.\n */\nexport enum UserState {\n  /**\n   * Authenticated and available to communicate with services.\n   * @deprecated Will be removed in v13. Please use {@link UserState.LoggedIn}\n   */\n  Active = \"active\",\n  /** Authenticated and available to communicate with services. */\n  LoggedIn = \"LoggedIn\",\n  /** Logged out, but ready to be logged in. */\n  LoggedOut = \"LoggedOut\",\n  /** Removed from the app entirely. */\n  Removed = \"Removed\",\n}\n\n/**\n * A user's identity with a particular authentication provider.\n */\nexport interface UserIdentity {\n  /**\n   * The ID of the identity.\n   */\n  id: string;\n\n  /**\n   * The type of the provider associated with the identity.\n   */\n  providerType: ProviderType;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type AnyUser = User<any, any, any>;\n\ntype UserListenerToken = binding.SyncUserSubscriptionToken;\n\n/**\n * Representation of an authenticated user of an {@link App}.\n */\nexport class User<\n  UserFunctionsFactoryType extends DefaultFunctionsFactory = DefaultFunctionsFactory,\n  UserCustomDataType extends DefaultObject = DefaultObject,\n  UserProfileDataType extends DefaultUserProfileData = DefaultUserProfileData,\n> {\n  /** @internal */\n  public app: App;\n\n  /** @internal */\n  public internal: binding.SyncUser;\n\n  // cached version of profile\n  private cachedProfile: UserProfileDataType | undefined;\n\n  private listeners = new Listeners<UserChangeCallback, UserListenerToken>({\n    add: (callback: () => void): UserListenerToken => {\n      return this.internal.subscribe(callback);\n    },\n    remove: (token) => {\n      this.internal.unsubscribe(token);\n    },\n  });\n\n  /** @internal */\n  public static get<\n    FunctionsFactoryType extends DefaultFunctionsFactory = DefaultFunctionsFactory,\n    CustomDataType extends DefaultObject = DefaultObject,\n    UserProfileDataType extends DefaultUserProfileData = DefaultUserProfileData,\n  >(internal: binding.SyncUser, app?: AnyApp) {\n    // Update the static user reference to the current app\n    if (app) {\n      App.setAppByUser(internal, app);\n    }\n    // TODO: Use a WeakRef to memoize the SDK object\n    return new User<FunctionsFactoryType, CustomDataType, UserProfileDataType>(internal, App.getAppByUser(internal));\n  }\n\n  /** @internal */\n  constructor(internal: binding.SyncUser, app: App) {\n    this.internal = internal;\n    this.app = app;\n    this.cachedProfile = undefined;\n  }\n\n  /**\n   * The automatically-generated internal ID of the user.\n   * @returns The user ID as a string.\n   */\n  get id(): string {\n    return this.internal.identity;\n  }\n\n  /**\n   * The provider type used when authenticating the user.\n   * @returns The provider type as an enumerated string.\n   */\n  get providerType(): ProviderType {\n    const type = this.internal.providerType;\n    if (isProviderType(type)) {\n      return type;\n    } else {\n      throw new Error(`Unexpected provider type: ${type}`);\n    }\n  }\n\n  /**\n   * The ID of the device.\n   * @returns The device ID as a string or `null`.\n   */\n  get deviceId(): string | null {\n    return this.internal.deviceId;\n  }\n\n  /**\n   * The state of the user.\n   * @returns The state as an enumerated string.\n   */\n  get state(): UserState {\n    const state = this.internal.state;\n    switch (state) {\n      case binding.SyncUserState.LoggedIn:\n        return UserState.LoggedIn;\n      case binding.SyncUserState.LoggedOut:\n        return UserState.LoggedOut;\n      case binding.SyncUserState.Removed:\n        return UserState.Removed;\n      default:\n        throw new Error(`Unsupported SyncUserState value: ${state}`);\n    }\n  }\n\n  /**\n   * The logged in state of the user.\n   * @returns `true` if the user is logged in, `false` otherwise.\n   */\n  get isLoggedIn(): boolean {\n    return this.internal.isLoggedIn;\n  }\n\n  /**\n   * The identities of the user at any of the app's authentication providers.\n   * @returns An array of {@link UserIdentity} objects.\n   */\n  get identities(): UserIdentity[] {\n    return this.internal.identities.map((identity) => {\n      const { id, provider_type: providerType } = identity as Record<string, string>;\n      return { id, providerType } as UserIdentity;\n    });\n  }\n\n  /**\n   * The access token used when requesting a new access token.\n   * @returns The access token as a string or `null`.\n   */\n  get accessToken(): string | null {\n    return this.internal.accessToken;\n  }\n\n  /**\n   * The refresh token used when requesting a new access token.\n   * @returns The refresh token as a string or `null`.\n   */\n  get refreshToken(): string | null {\n    return this.internal.refreshToken;\n  }\n\n  /**\n   * You can store arbitrary data about your application users in a MongoDB collection and configure\n   * Atlas App Services to automatically expose each user’s data in a field of their user object.\n   * For example, you might store a user’s preferred language, date of birth, or their local timezone.\n   *\n   * If this value has not been configured, it will be empty.\n   * @returns The custom data as an object.\n   */\n  get customData(): UserCustomDataType {\n    const result = this.internal.customData;\n    if (result === undefined) {\n      return {} as UserCustomDataType;\n    }\n    return result as UserCustomDataType;\n  }\n\n  /**\n   * A profile containing additional information about the user.\n   * @returns The user profile data as an object.\n   */\n  get profile(): UserProfileDataType {\n    if (!this.cachedProfile) {\n      this.cachedProfile = this.internal.userProfile.data() as UserProfileDataType;\n    }\n    return this.cachedProfile;\n  }\n\n  /**\n   * Use this to call functions defined by the Atlas App Services application, as this user.\n   * @returns A {@link FunctionsFactory} that can be used to call the app's functions.\n   */\n  get functions(): UserFunctionsFactoryType {\n    return createFactory(this as User, undefined);\n  }\n\n  /**\n   * Perform operations related to the API-key auth provider.\n   * @returns An {@link ApiKeyAuth} object that can be used to manage API keys.\n   */\n  get apiKeys(): ApiKeyAuth {\n    // TODO: Add memoization\n    const internal = this.app.internal.userApiKeyProviderClient();\n    return new ApiKeyAuth(this.internal, internal);\n  }\n\n  /**\n   * Log out the user.\n   * @returns A promise that resolves once the user has been logged out of the app.\n   */\n  async logOut(): Promise<void> {\n    await this.app.internal.logOutUser(this.internal);\n  }\n\n  /**\n   * Link the user with an identity represented by another set of credentials.\n   * @param credentials - The credentials to use when linking.\n   * @returns A promise that resolves once the user has been linked with the credentials.\n   */\n  async linkCredentials(credentials: Credentials): Promise<void> {\n    await this.app.internal.linkUser(this.internal, credentials.internal);\n  }\n\n  /**\n   * Call a remote Atlas App Services Function by its name.\n   * @note Consider using `functions[name]()` instead of calling this method.\n   * @param name - Name of the App Services Function.\n   * @param args - Arguments passed to the Function.\n   * @returns A promise that resolves to the value returned by the Function.\n   * @example\n   * // These are all equivalent:\n   * await user.callFunction(\"doThing\", a1, a2, a3);\n   * await user.functions.doThing(a1, a2, a3);\n   * await user.functions[\"doThing\"](a1, a2, a3);\n   * @example\n   * // The methods returned from the functions object are bound, which is why it's okay to store the function in a variable before calling it:\n   * const doThing = user.functions.doThing;\n   * await doThing(a1);\n   * await doThing(a2);\n   */\n  callFunction(name: string, ...args: unknown[]): Promise<unknown> {\n    return this.callFunctionOnService(name, undefined, args);\n  }\n\n  /** @internal */\n  callFunctionOnService(name: string, serviceName: string | undefined, ...args: unknown[]): Promise<unknown> {\n    const cleanedArgs = cleanArguments(args);\n    return this.app.internal.callFunction(this.internal, name, cleanedArgs as binding.EJson[], serviceName);\n  }\n\n  /** @internal */\n  async callFunctionStreaming(\n    functionName: string,\n    serviceName: string,\n    ...functionArgs: unknown[]\n  ): Promise<AsyncIterable<Uint8Array>> {\n    const request = this.app.internal.makeStreamingRequest(\n      this.internal,\n      functionName,\n      cleanArguments(functionArgs) as binding.EJson[],\n      serviceName,\n    );\n\n    const response = await network.fetch(request);\n    assert(response.ok, () => `Request failed: ${response.statusText} (${response.status})`);\n    assert(response.body, \"Expected a body in the response\");\n\n    return response.body;\n  }\n\n  /**\n   * Refresh the access token and derive custom data from it.\n   * @returns A promise that resolves to the refreshed custom data.\n   */\n  async refreshCustomData(): Promise<UserCustomDataType> {\n    await this.app.internal.refreshCustomData(this.internal);\n    return this.customData;\n  }\n\n  /**\n   * Use the Push service to enable sending push messages to this user via Firebase Cloud Messaging (FCM).\n   * @deprecated https://www.mongodb.com/docs/atlas/app-services/reference/push-notifications/\n   * @returns A {@link PushClient} with methods to register and deregister the device on the user.\n   */\n  push(serviceName: string): PushClient {\n    const internal = this.app.internal.pushNotificationClient(serviceName);\n    return new PushClient(this.internal, internal);\n  }\n\n  /**\n   * @param serviceName - The name of the MongoDB service to connect to.\n   * @returns A client enabling access to a {@link MongoDB} service.\n   * @example\n   * let blueWidgets = user.mongoClient(\"myService\")\n   *                       .db(\"myDb\")\n   *                       .collection<Widget>(\"widgets\")\n   *                       .find({ color: \"blue\" });\n   */\n  mongoClient(serviceName: string): MongoDB {\n    assert.string(serviceName, \"serviceName\");\n    assert(serviceName.length, \"Please provide the name of the MongoDB service to connect to.\");\n\n    return {\n      get serviceName() {\n        return serviceName;\n      },\n      db: (databaseName: string) => {\n        return {\n          get name() {\n            return databaseName;\n          },\n          collection: <T extends Document = Document>(collectionName: string) => {\n            return new MongoDBCollection<T>(this, serviceName, databaseName, collectionName);\n          },\n        };\n      },\n    };\n  }\n\n  /**\n   * Adds a listener that will be fired on various user related events.\n   * This includes auth token refresh, refresh token refresh, refresh custom user data, and logout.\n   * @param callback - The callback to be fired when the event occurs.\n   */\n  addListener(callback: UserChangeCallback): void {\n    this.listeners.add(callback);\n  }\n\n  /**\n   * Removes an event listener previously added via {@link User.addListener}.\n   * @param callback - The callback to be removed.\n   */\n  removeListener(callback: UserChangeCallback): void {\n    this.listeners.remove(callback);\n  }\n\n  /**\n   * Removes all event listeners previously added via {@link User.addListener}.\n   */\n  removeAllListeners(): void {\n    this.listeners.removeAll();\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { FetchHeaders, binding, network } from \"../internal\";\n\nfunction flattenHeaders(headers: FetchHeaders) {\n  const result: Record<string, string> = {};\n  headers.forEach((value: string, key: string) => {\n    result[key] = value;\n  });\n  return result;\n}\n\n/** @internal */\nexport function createNetworkTransport() {\n  return binding.Helpers.makeNetworkTransport((request, callback) => {\n    network.fetch(request).then(\n      async (response) => {\n        const headers = flattenHeaders(response.headers);\n        const contentType = headers[\"content-type\"];\n        const body = contentType ? await response.text() : \"\";\n        callback({\n          customStatusCode: 0,\n          httpStatusCode: response.status,\n          headers,\n          body,\n        });\n      },\n      (err) => {\n        // Core will propagate any non-zero \"custom status code\" through to the caller\n        // The error message is passed through the body\n        const reason = err.message || \"Unknown\";\n        const body = `request to ${request.url} failed, reason: ${reason}`;\n        callback({ httpStatusCode: 0, headers: {}, customStatusCode: -1, body });\n      },\n    );\n  });\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { EJSON } from \"bson\";\nimport {\n  App,\n  ClientResetAfterCallback,\n  ClientResetBeforeCallback,\n  ClientResetError,\n  ClientResetFallbackCallback,\n  ClientResetMode,\n  ErrorCallback,\n  Listeners,\n  PartitionValue,\n  Realm,\n  SessionStopPolicy,\n  SyncConfiguration,\n  TimeoutPromise,\n  User,\n  assert,\n  binding,\n  fromBindingSyncError,\n} from \"../internal\";\n\nexport enum ProgressDirection {\n  /**\n   * Data going from the server to the client.\n   */\n  Download = \"download\",\n  /**\n   * Data going from the client to the server.\n   */\n  Upload = \"upload\",\n}\n\nexport enum ProgressMode {\n  ReportIndefinitely = \"reportIndefinitely\",\n  ForCurrentlyOutstandingWork = \"forCurrentlyOutstandingWork\",\n}\n\nexport type ProgressNotificationCallback =\n  /**\n   * @param transferred - The current number of bytes already transferred\n   * @param transferable - The total number of transferable bytes (i.e. the number of bytes already transferred plus the number of bytes pending transfer)\n   */\n  (transferred: number, transferable: number) => void;\n\nexport enum ConnectionState {\n  Disconnected = \"disconnected\",\n  Connecting = \"connecting\",\n  Connected = \"connected\",\n}\n\nexport type ConnectionNotificationCallback = (newState: ConnectionState, oldState: ConnectionState) => void;\n\nexport enum SessionState {\n  /**\n   * The sync session encountered a non-recoverable error and is permanently invalid. Create a new Session to continue syncing.\n   */\n  Invalid = \"invalid\",\n  /**\n   * The sync session is actively communicating or attempting to communicate with Atlas App Services. A session may be considered active even if it is not currently connected. To find out if a session is online, check its connection state.\n   */\n  Active = \"active\",\n  /**\n   * The sync session is not attempting to communicate with Atlas App Services due to the user logging out or synchronization being paused.\n   */\n  Inactive = \"inactive\",\n}\n\nfunction toBindingDirection(direction: ProgressDirection) {\n  if (direction === ProgressDirection.Download) {\n    return binding.ProgressDirection.Download;\n  } else if (direction === ProgressDirection.Upload) {\n    return binding.ProgressDirection.Upload;\n  } else {\n    throw new Error(`Unexpected direction: ${direction}`);\n  }\n}\n\nfunction fromBindingConnectionState(state: binding.SyncSessionConnectionState) {\n  if (state === binding.SyncSessionConnectionState.Connected) {\n    return ConnectionState.Connected;\n  } else if (state === binding.SyncSessionConnectionState.Connecting) {\n    return ConnectionState.Connecting;\n  } else if (state === binding.SyncSessionConnectionState.Disconnected) {\n    return ConnectionState.Disconnected;\n  } else {\n    throw new Error(`Unexpected state: ${state}`);\n  }\n}\n\n// TODO: This mapping is an interpretation of the behavior of the legacy SDK we might want to revisit\nfunction fromBindingSessionState(state: binding.SyncSessionState) {\n  if (state === binding.SyncSessionState.Inactive) {\n    return SessionState.Inactive;\n  } else {\n    return SessionState.Active;\n  }\n}\n\n/** @internal */\nexport function toBindingErrorHandler(onError: ErrorCallback) {\n  return (sessionInternal: binding.SyncSession, bindingError: binding.SyncError) => {\n    // TODO: Return some cached sync session, instead of creating a new wrapper on every error\n    // const session = App.Sync.getSyncSession(user, partitionValue);\n    const session = new SyncSession(sessionInternal);\n    const error = fromBindingSyncError(bindingError);\n    onError(session, error);\n  };\n}\n\n/** @internal */\nexport function toBindingErrorHandlerWithOnManual(\n  onError: ErrorCallback | undefined,\n  onManual: ClientResetFallbackCallback | undefined,\n) {\n  if (!onError && !onManual) {\n    throw new Error(\"need to set either onError or onManual or both\");\n  }\n  if (onError && onManual) {\n    return toBindingErrorHandler((session, error) => {\n      if (error instanceof ClientResetError) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        onManual(session, error.config.path!);\n      } else {\n        onError(session, error);\n      }\n    });\n  }\n  if (onError) {\n    // onError gets all errors\n    return toBindingErrorHandler(onError);\n  }\n  if (onManual) {\n    // onManual only gets ClientResetErrors\n    return toBindingErrorHandler((session, error) => {\n      if (error instanceof ClientResetError) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        onManual(session, error.config.path!);\n      }\n    });\n  }\n}\n\n/** @internal */\nexport function toBindingNotifyBeforeClientReset(onBefore: ClientResetBeforeCallback) {\n  return (internal: binding.Realm) => {\n    onBefore(new Realm(null, { internal }));\n  };\n}\n\n/** @internal */\nexport function toBindingNotifyAfterClientReset(onAfter: ClientResetAfterCallback) {\n  return (internal: binding.Realm, tsr: binding.ThreadSafeReference) => {\n    onAfter(\n      new Realm(null, { internal }),\n      new Realm(null, { internal: binding.Helpers.consumeThreadSafeReferenceToSharedRealm(tsr) }),\n    );\n  };\n}\n\n/** @internal */\nexport function toBindingNotifyAfterClientResetWithFallback(\n  onAfter: ClientResetAfterCallback,\n  onFallback: ClientResetFallbackCallback | undefined,\n) {\n  return (internal: binding.Realm, tsr: binding.ThreadSafeReference, didRecover: boolean) => {\n    if (didRecover) {\n      onAfter(\n        new Realm(null, { internal }),\n        new Realm(null, { internal: binding.Helpers.consumeThreadSafeReferenceToSharedRealm(tsr) }),\n      );\n    } else {\n      const realm = new Realm(null, { internal: binding.Helpers.consumeThreadSafeReferenceToSharedRealm(tsr) });\n      if (onFallback) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        onFallback(realm.syncSession!, realm.path);\n      } else {\n        throw new Error(\"onFallback is undefined\");\n      }\n    }\n  };\n}\n\n/** @internal */\nexport function toBindingStopPolicy(policy: SessionStopPolicy): binding.SyncSessionStopPolicy {\n  if (policy === SessionStopPolicy.AfterUpload) {\n    return binding.SyncSessionStopPolicy.AfterChangesUploaded;\n  } else if (policy === SessionStopPolicy.Immediately) {\n    return binding.SyncSessionStopPolicy.Immediately;\n  } else if (policy === SessionStopPolicy.Never) {\n    return binding.SyncSessionStopPolicy.LiveIndefinitely;\n  } else {\n    throw new Error(`Unexpected policy (get ${policy})`);\n  }\n}\n\n/** @internal */\nexport function toBindingClientResetMode(resetMode: ClientResetMode): binding.ClientResetMode {\n  switch (resetMode) {\n    case ClientResetMode.Manual:\n      return binding.ClientResetMode.Manual;\n    case ClientResetMode.DiscardUnsyncedChanges:\n      return binding.ClientResetMode.DiscardLocal;\n    case ClientResetMode.RecoverUnsyncedChanges:\n      return binding.ClientResetMode.Recover;\n    case ClientResetMode.RecoverOrDiscardUnsyncedChanges:\n      return binding.ClientResetMode.RecoverOrDiscard;\n  }\n}\n\ntype ListenerToken = {\n  weakInternal: binding.WeakSyncSession;\n  token: binding.Int64;\n};\n\n/**\n * With the current properties available through Core, it it's possible to construct an app from a user nor sync session internal.\n * TODO: Refactor to pass an app instance through to all places that constructs a SyncSession.\n */\nconst mockApp = new Proxy({} as App, {\n  get() {\n    throw new Error(\"Using user.app of a user returned through syncSession.config is not supported\");\n  },\n});\n\n/**\n * Progress listeners are shared across instances of the SyncSession, making it possible to deregister a listener on another session\n * TODO: Consider adding a check to verify that the callback is removed from the correct SyncSession (although that would break the API)\n */\nconst PROGRESS_LISTENERS = new Listeners<\n  ProgressNotificationCallback,\n  ListenerToken,\n  [binding.WeakSyncSession, binding.SyncSession, ProgressDirection, ProgressMode]\n>({\n  throwOnReAdd: true,\n  add(callback, weakInternal, internal, direction, mode) {\n    const token = internal.registerProgressNotifier(\n      (transferred, transferable) => callback(Number(transferred), Number(transferable)),\n      toBindingDirection(direction),\n      mode === ProgressMode.ReportIndefinitely,\n    );\n    return { weakInternal, token };\n  },\n  remove({ weakInternal, token }) {\n    weakInternal.withDeref((internal) => internal?.unregisterProgressNotifier(token));\n  },\n});\n\n/**\n * Connection listeners are shared across instances of the SyncSession, making it possible to deregister a listener on another session\n * TODO: Consider adding a check to verify that the callback is removed from the correct SyncSession (although that would break the API)\n */\nconst CONNECTION_LISTENERS = new Listeners<\n  ConnectionNotificationCallback,\n  ListenerToken,\n  [binding.WeakSyncSession, binding.SyncSession]\n>({\n  throwOnReAdd: true,\n  add(callback, weakInternal, internal) {\n    const token = internal.registerConnectionChangeCallback((oldState, newState) =>\n      callback(fromBindingConnectionState(newState), fromBindingConnectionState(oldState)),\n    );\n    return { weakInternal, token };\n  },\n  remove({ weakInternal, token }) {\n    weakInternal.withDeref((internal) => internal?.unregisterConnectionChangeCallback(token));\n  },\n});\n\nexport class SyncSession {\n  /** @internal */\n  private weakInternal: binding.WeakSyncSession;\n  /** @internal */\n  public withInternal<Ret = void>(cb: (syncSession: binding.SyncSession) => Ret) {\n    return this.weakInternal.withDeref((syncSession) => {\n      assert(syncSession, \"This SyncSession is no longer valid\");\n      return cb(syncSession);\n    });\n  }\n\n  /** @internal */\n  constructor(internal: binding.SyncSession) {\n    this.weakInternal = internal.weaken();\n  }\n\n  // TODO: Return the `error_handler`\n  // TODO: Figure out a way to avoid passing a mocked app instance when constructing the User.\n  /**\n   * Gets the Sync-part of the configuration that the corresponding Realm was constructed with.\n   */\n  get config(): SyncConfiguration {\n    return this.withInternal((internal) => {\n      const user = new User(internal.user, mockApp);\n      const { partitionValue, flxSyncRequested, customHttpHeaders, clientValidateSsl, sslTrustCertificatePath } =\n        internal.config;\n      if (flxSyncRequested) {\n        return {\n          user,\n          flexible: true,\n          customHttpHeaders,\n          ssl: { validate: clientValidateSsl, certificatePath: sslTrustCertificatePath },\n        };\n      } else {\n        return {\n          user,\n          partitionValue: EJSON.parse(partitionValue) as PartitionValue,\n          customHttpHeaders,\n          ssl: { validate: clientValidateSsl, certificatePath: sslTrustCertificatePath },\n        };\n      }\n    });\n  }\n\n  /**\n   * Gets the current state of the session.\n   */\n  get state(): SessionState {\n    return fromBindingSessionState(this.withInternal((internal) => internal.state));\n  }\n\n  /**\n   * Gets the URL of the Realm Object Server that this session is connected to.\n   */\n  get url() {\n    const url = this.withInternal((internal) => internal.fullRealmUrl);\n    if (url) {\n      return url;\n    } else {\n      throw new Error(\"Unable to determine URL\");\n    }\n  }\n\n  /**\n   * Gets the User that this session was created with.\n   */\n  get user() {\n    return User.get(this.withInternal((internal) => internal.user));\n  }\n  /**\n   * Gets the current state of the connection to the server. Multiple sessions might share the same underlying\n   * connection. In that case, any connection change is sent to all sessions.\n   *\n   * Data will only be synchronized with the server if this method returns `Connected` and `state()` returns `Active` or `Dying`.\n   */\n  get connectionState() {\n    return fromBindingConnectionState(this.withInternal((internal) => internal.connectionState));\n  }\n\n  // TODO: Make this a getter instead of a method\n  /**\n   * Returns `true` if the session is currently active and connected to the server, `false` if not.\n   */\n  isConnected() {\n    return this.withInternal((internal) => {\n      const { connectionState, state } = internal;\n      return (\n        connectionState === binding.SyncSessionConnectionState.Connected &&\n        (state === binding.SyncSessionState.Active || state === binding.SyncSessionState.Dying)\n      );\n    });\n  }\n\n  /**\n   * Pause a sync session.\n   *\n   * This method is asynchronous so in order to know when the session has started you will need\n   * to add a connection notification with {@link addConnectionNotification}.\n   *\n   * This method is idempotent so it will be a no-op if the session is already paused.\n   */\n  pause() {\n    this.withInternal((internal) => internal.forceClose());\n  }\n\n  /**\n   * Resumes a sync session that has been paused.\n   *\n   * This method is asynchronous so in order to know when the session has started you will need\n   * to add a connection notification with {@link addConnectionNotification}.\n   *\n   * This method is idempotent so it will be a no-op if the session is already started.\n   */\n  resume() {\n    this.withInternal((internal) => internal.reviveIfNeeded());\n  }\n\n  /**\n   * Register a progress notification callback on a session object\n   * @param direction - The progress direction to register for.\n   * @param mode - The progress notification mode to use for the registration.\n   * Can be either:\n   *  - `reportIndefinitely` - the registration will stay active until the callback is unregistered\n   *  - `forCurrentlyOutstandingWork` - the registration will be active until only the currently transferable bytes are synced\n   * @param callback - Called with the following arguments:\n   * 1. `transferred`: The current number of bytes already transferred\n   * 2. `transferable`: The total number of transferable bytes (the number of bytes already transferred plus the number of bytes pending transfer)\n   */\n  addProgressNotification(direction: ProgressDirection, mode: ProgressMode, callback: ProgressNotificationCallback) {\n    this.withInternal((internal) => PROGRESS_LISTENERS.add(callback, this.weakInternal, internal, direction, mode));\n  }\n  /**\n   * Unregister a progress notification callback that was previously registered with {@link addProgressNotification}.\n   * Calling the function multiple times with the same callback is ignored.\n   * @param callback - A previously registered progress callback.\n   */\n  removeProgressNotification(callback: ProgressNotificationCallback): void {\n    PROGRESS_LISTENERS.remove(callback);\n  }\n  /**\n   * Registers a connection notification on the session object. This will be notified about changes to the\n   * underlying connection to the Realm Object Server.\n   * @param callback - Called with the following arguments:\n   * 1. `newState`: The new state of the connection\n   * 2. `oldState`: The state the connection transitioned from.\n   */\n  addConnectionNotification(callback: ConnectionNotificationCallback) {\n    this.withInternal((internal) => CONNECTION_LISTENERS.add(callback, this.weakInternal, internal));\n  }\n\n  /**\n   * Unregister a state notification callback that was previously registered with addStateNotification.\n   * Calling the function multiple times with the same callback is ignored.\n   * @param callback - A previously registered state callback.\n   */\n  removeConnectionNotification(callback: ConnectionNotificationCallback): void {\n    CONNECTION_LISTENERS.remove(callback);\n  }\n\n  /**\n   * This method returns a promise that does not resolve successfully until all known remote changes have been\n   * downloaded and applied to the Realm or the specified timeout is hit in which case it will be rejected. If the method\n   * times out, the download will still continue in the background.\n   *\n   * This method cannot be called before the Realm has been opened.\n   * @param timeoutMs - maximum amount of time to wait in milliseconds before the promise will be rejected. If no timeout\n   * is specified the method will wait forever.\n   */\n  downloadAllServerChanges(timeoutMs?: number): Promise<void> {\n    return this.withInternal(\n      (internal) =>\n        new TimeoutPromise(internal.waitForDownloadCompletion(), {\n          ms: timeoutMs,\n          message: `Downloading changes did not complete in ${timeoutMs} ms.`,\n        }),\n    );\n  }\n\n  /**\n   * This method returns a promise that does not resolve successfully until all known local changes have been uploaded\n   * to the server or the specified timeout is hit in which case it will be rejected. If the method times out, the upload\n   * will still continue in the background.\n   *\n   * This method cannot be called before the Realm has been opened.\n   * @param timeoutMs - Maximum amount of time to wait in milliseconds before the promise is rejected. If no timeout is specified the method will wait forever.\n   */\n  uploadAllLocalChanges(timeoutMs?: number): Promise<void> {\n    return this.withInternal(\n      (internal) =>\n        new TimeoutPromise(internal.waitForUploadCompletion(), {\n          ms: timeoutMs,\n          message: `Uploading changes did not complete in ${timeoutMs} ms.`,\n        }),\n    );\n  }\n\n  /** @internal */\n  _simulateError(code: number, message: string, type: string, isFatal: boolean) {\n    this.withInternal((internal) => binding.Helpers.simulateSyncError(internal, code, message, type, isFatal));\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { BSON, assert, binding } from \"../internal\";\n\n/**\n * The representation of an API-key stored in the service.\n */\nexport type ApiKey = {\n  /**\n   * The internal identifier of the key.\n   */\n  _id: string;\n\n  /**\n   * A name for the key.\n   */\n  name: string;\n\n  /**\n   * When disabled, the key cannot authenticate.\n   */\n  disabled: boolean;\n};\n\n/**\n * The representation of an API-key when returned from the server, just after creation.\n */\nexport type SecretApiKey = ApiKey & {\n  /**\n   * The secret part of the key.\n   */\n  key: string;\n};\n\n/**\n * Authentication provider where users identify using an API-key.\n */\nexport class ApiKeyAuth {\n  /** @internal */\n  private user: binding.SyncUser;\n  /** @internal */\n  private internal: binding.UserApiKeyProviderClient;\n\n  /** @internal */\n  constructor(user: binding.SyncUser, internal: binding.UserApiKeyProviderClient) {\n    this.user = user;\n    this.internal = internal;\n  }\n\n  /**\n   * Creates an API key that can be used to authenticate as the current user.\n   * @param keyName the name of the API key to be created.\n   */\n  async create(keyName: string): Promise<SecretApiKey> {\n    const { id, key, name, disabled } = await this.internal.createApiKey(keyName, this.user);\n    assert.string(key);\n    return { _id: id.toHexString(), key, name, disabled };\n  }\n\n  /**\n   * Fetches an API key associated with the current user.\n   * @param keyId the id of the API key to fetch.\n   */\n  async fetch(keyId: string): Promise<ApiKey> {\n    const { id, name, disabled } = await this.internal.fetchApiKey(new BSON.ObjectId(keyId), this.user);\n    return { _id: id.toHexString(), name, disabled };\n  }\n\n  /**\n   * Fetches the API keys associated with the current user.\n   */\n  async fetchAll(): Promise<ApiKey[]> {\n    const keys = await this.internal.fetchApiKeys(this.user);\n    return keys.map(({ id, name, disabled }) => ({ _id: id.toHexString(), name, disabled }));\n  }\n\n  /**\n   * Deletes an API key associated with the current user.\n   * @param keyId the ID of the API key to delete\n   */\n  async delete(keyId: string) {\n    await this.internal.deleteApiKey(new BSON.ObjectId(keyId), this.user);\n  }\n\n  /**\n   * Enables an API key associated with the current user.\n   * @param keyId the ID of the API key to enable\n   */\n  async enable(keyId: string) {\n    await this.internal.enableApiKey(new BSON.ObjectId(keyId), this.user);\n  }\n\n  /**\n   * Disable an API key associated with the current user.\n   * @param keyId the ID of the API key to disable\n   */\n  async disable(keyId: string) {\n    await this.internal.disableApiKey(new BSON.ObjectId(keyId), this.user);\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { binding } from \"../internal\";\n\n/**\n * Authentication provider where users identify using email and password.\n * @see https://www.mongodb.com/docs/atlas/app-services/authentication/email-password/\n */\nexport class EmailPasswordAuth {\n  /** @internal */\n  public internal: binding.UsernamePasswordProviderClient;\n\n  /** @internal */\n  constructor(internal: binding.UsernamePasswordProviderClient) {\n    this.internal = internal;\n  }\n\n  /**\n   * Registers a new email identity with the email/password provider,\n   * and sends a confirmation email to the provided address.\n   * @param details - The new user's email and password details.\n   * @param details.email - The email address of the user to register.\n   * @param details.password - The password that the user created for the new username/password identity.\n   * @since v10.10.0\n   */\n  public async registerUser(details: { email: string; password: string }) {\n    await this.internal.registerEmail(details.email, details.password);\n  }\n\n  /**\n   * Confirms an email identity with the email/password provider.\n   * @param details - The received token and ID details\n   * @param details.token - The confirmation token that was emailed to the user.\n   * @param details.tokenId - The confirmation token id that was emailed to the user.\n   * @since v10.10.0\n   */\n  public async confirmUser(details: { token: string; tokenId: string }) {\n    await this.internal.confirmUser(details.token, details.tokenId);\n  }\n\n  /**\n   * Re-sends a confirmation email to a user that has registered but\n   * not yet confirmed their email address.\n   * @param details - The associated email details.\n   * @param details.email - The email address of the user to re-send a confirmation for.\n   * @since v10.10.0\n   */\n  public async resendConfirmationEmail(details: { email: string }) {\n    await this.internal.resendConfirmationEmail(details.email);\n  }\n\n  /**\n   * Re-run the custom confirmation function for user that has registered but\n   * not yet confirmed their email address.\n   * @param details - The associated email details.\n   * @param details.email - The email address of the user to re-run the confirmation for.\n   * @since v10.10.0\n   */\n  public async retryCustomConfirmation(details: { email: string }) {\n    await this.internal.retryCustomConfirmation(details.email);\n  }\n\n  /**\n   * Resets the password of an email identity using the password reset token emailed to a user.\n   * @param details - The token and password details for the reset.\n   * @param details.password - The desired new password.\n   * @param details.token - The password reset token that was emailed to the user.\n   * @param details.tokenId - The password reset token id that was emailed to the user.\n   * @since v10.10.0\n   */\n  public async resetPassword(details: { password: string; token: string; tokenId: string }) {\n    await this.internal.resetPassword(details.password, details.token, details.tokenId);\n  }\n\n  /**\n   * Sends an email to the user for resetting the password.\n   * @param details - The email details to send the reset to.\n   * @param details.email - The email address of the user to re-send a confirmation for.\n   * @since v10.10.0\n   */\n  public async sendResetPasswordEmail(details: { email: string }) {\n    await this.internal.sendResetPasswordEmail(details.email);\n  }\n\n  /**\n   * Call the custom function to reset the password.\n   * @param details - The new user's email and password details.\n   * @param details.email - The email address of the user to register.\n   * @param details.password - The password that the user created for the new username/password identity.\n   * @param args One or more arguments to pass to the function.\n   * @since v10.10.0\n   */\n  public async callResetPasswordFunction(details: { email: string; password: string }, ...args: unknown[]) {\n    await this.internal.callResetPasswordFunction(details.email, details.password, args as binding.EJson[]);\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { binding } from \"../internal\";\n/**\n * Authentication provider where users identify using an API-key.\n */\nexport class PushClient {\n  /** @internal */\n  private user: binding.SyncUser;\n  /** @internal */\n  public internal: binding.PushClient;\n\n  /** @internal */\n  public constructor(user: binding.SyncUser, internal: binding.PushClient) {\n    this.user = user;\n    this.internal = internal;\n  }\n\n  /**\n   * Register this device with the user.\n   * @param token - A Firebase Cloud Messaging (FCM) token, retrieved via the firebase SDK.\n   * @returns A promise that resolves once the device has been registered.\n   */\n  async register(token: string): Promise<void> {\n    await this.internal.registerDevice(token, this.user);\n  }\n\n  /**\n   * Deregister this device with the user, to disable sending messages to this device.\n   * @returns A promise that resolves once the device has been deregistered.\n   */\n  async deregister(): Promise<void> {\n    await this.internal.deregisterDevice(this.user);\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { Long, Timestamp } from \"bson\";\n\nimport { DefaultFunctionsFactory, User, binding, createFactory, toArrayBuffer } from \"../internal\";\n\n/**\n * A remote MongoDB service enabling access to an Atlas cluster.\n */\nexport type MongoDB = {\n  /**\n   * The name of the MongoDB service.\n   */\n  serviceName: string;\n  /**\n   * @returns The remote MongoDB database.\n   */\n  db(databaseName: string): MongoDBDatabase;\n};\n\n/**\n * A remote MongoDB database enabling access to collections of objects.\n */\nexport type MongoDBDatabase = {\n  /**\n   * The name of the MongoDB database.\n   */\n  name: string;\n  /**\n   * @returns The remote MongoDB collection.\n   */\n  collection<T extends Document>(collectionName: string): MongoDBCollection<T>;\n};\n\n/**\n * Options passed when finding a single document\n */\nexport type FindOneOptions = {\n  /**\n   * Limits the fields to return for all matching documents.\n   * See [Tutorial: Project Fields to Return from Query](https://docs.mongodb.com/manual/tutorial/project-fields-from-query-results/).\n   */\n  readonly projection?: Record<string, unknown>;\n\n  /**\n   * The order in which to return matching documents.\n   */\n  readonly sort?: Record<string, unknown>;\n};\n\n/**\n * Options passed when finding a multiple documents\n */\nexport type FindOptions = FindOneOptions & {\n  /**\n   * The maximum number of documents to return.\n   */\n  readonly limit?: number;\n};\n\n/**\n * Options passed when finding and modifying a single document\n */\nexport type FindOneAndModifyOptions = FindOneOptions & {\n  /**\n   * Optional. Default: false.\n   * A boolean that, if true, indicates that MongoDB should insert a new document that matches the\n   * query filter when the query does not match any existing documents in the collection.\n   */\n  readonly upsert?: boolean;\n\n  /**\n   * Optional. Default: false.\n   * A boolean that, if true, indicates that the action should return\n   * the document in its updated form instead of its original, pre-update form.\n   */\n  readonly returnNewDocument?: boolean;\n};\n\n/**\n * Options passed when counting documents\n */\nexport type CountOptions = {\n  /**\n   * The maximum number of documents to count.\n   */\n  readonly limit?: number;\n};\n\n/**\n * Options passed when updating documents\n */\nexport type UpdateOptions = {\n  /**\n   * When true, creates a new document if no document matches the query.\n   */\n  readonly upsert?: boolean;\n  /**\n   * Array Filters\n   */\n  readonly arrayFilters?: Filter[];\n};\n\n/**\n * A document from a MongoDB collection\n */\nexport type Document<IdType = unknown> = {\n  /**\n   * The ID of the document.\n   */\n  _id: IdType;\n};\n\n/**\n * A new document with an optional _id defined.\n */\nexport type NewDocument<T extends Document> = Omit<T, \"_id\"> & Partial<Pick<T, \"_id\">>;\n\n/**\n * Result of inserting one document\n */\nexport type InsertOneResult<IdType> = {\n  /**\n   * The ID of the inserted document\n   */\n  readonly insertedId: IdType;\n};\n\n/**\n * Result of inserting many documents\n */\nexport type InsertManyResult<IdType> = {\n  /**\n   * The IDs of the inserted documents\n   */\n  readonly insertedIds: IdType[];\n};\n\n/**\n * Result of deleting documents\n */\nexport type DeleteResult = {\n  /**\n   * The number of documents that were deleted.\n   */\n  readonly deletedCount: number;\n};\n\n/**\n * Result of updating documents\n */\nexport type UpdateResult<IdType> = {\n  /**\n   * The number of documents that matched the filter.\n   */\n  readonly matchedCount: number;\n\n  /**\n   * The number of documents matched by the query.\n   */\n  readonly modifiedCount: number;\n\n  /**\n   * The identifier of the inserted document if an upsert took place.\n   *\n   * See [[RemoteUpdateOptions.upsert]].\n   */\n  readonly upsertedId?: IdType;\n};\n\n/**\n * A filter applied to limit the documents being queried for.\n */\nexport type Filter = Record<string, unknown>;\n\n/**\n * An object specifying the update operations to perform when updating a document.\n */\nexport type Update = Record<string, unknown>;\n\n/**\n * A stage of an aggregation pipeline.\n */\nexport type AggregatePipelineStage = Record<string, unknown>;\n\n/**\n * An operation performed on a document.\n */\nexport type OperationType =\n  /**\n   * A document got inserted into the collection.\n   */\n  | \"insert\"\n  /**\n   * A document got deleted from the collection.\n   */\n  | \"delete\"\n  /**\n   * A document got replaced in the collection.\n   */\n  | \"replace\"\n  /**\n   * A document got updated in the collection.\n   */\n  | \"update\"\n  /**\n   * A collection got dropped from a database.\n   */\n  | \"drop\"\n  /**\n   * A collection got renamed.\n   */\n  | \"rename\"\n  /**\n   * A database got dropped.\n   */\n  | \"dropDatabase\"\n  /**\n   * Invalidate events close the change stream cursor.\n   */\n  | \"invalidate\";\n\n/**\n * The namespace of a document.\n */\nexport type DocumentNamespace = {\n  /** The name of the database. */\n  db: string;\n  /** The name of the collection. */\n  coll: string;\n};\n\n/**\n * A detailed description of an update performed on a document.\n */\nexport type UpdateDescription = {\n  /** Names of fields that got updated. */\n  updatedFields: Record<string, unknown>;\n  /** Names of fields that got removed. */\n  removedFields: string[];\n};\n\n/**\n * Acts as the `resumeToken` for the `resumeAfter` parameter when resuming a change stream.\n */\nexport type ChangeEventId = unknown;\n\n/**\n * A document that contains the _id of the document created or modified by the insert, replace,\n * delete, update operations (i.e. CRUD operations). For sharded collections, also displays the full\n * shard key for the document. The _id field is not repeated if it is already a part of the shard key.\n */\nexport type DocumentKey<IdType> = {\n  /** The ID of the document. */\n  _id: IdType;\n} & Record<string, unknown>;\n\n/**\n * A base change event containing the properties which apply across operation types.\n */\nexport type BaseChangeEvent<T extends OperationType> = {\n  /** The ID of the change event. */\n  _id: ChangeEventId;\n  /** The type of operation which was performed on the document. */\n  operationType: T;\n  /** The timestamp from the oplog entry associated with the event. */\n  clusterTime: Timestamp;\n  /**\n   * The transaction number.\n   * Only present if the operation is part of a multi-document transaction.\n   */\n  txnNumber?: Long;\n  /**\n   * The identifier for the session associated with the transaction.\n   * Only present if the operation is part of a multi-document transaction.\n   */\n  lsid?: Record<string, unknown>;\n};\n\n/**\n * A document got inserted into the collection.\n */\nexport type InsertEvent<T extends Document> = {\n  /** The namespace (database and collection) of the document got inserted into. */\n  ns: DocumentNamespace;\n  /** A document that contains the _id of the inserted document. */\n  documentKey: DocumentKey<T[\"_id\"]>;\n  /** The new document created by the operation */\n  fullDocument: T;\n} & BaseChangeEvent<\"insert\">;\n\n/**\n * A document got updated in the collection.\n */\nexport type UpdateEvent<T extends Document> = {\n  /** The namespace (database and collection) of the updated document. */\n  ns: DocumentNamespace;\n  /** A document that contains the _id of the updated document. */\n  documentKey: DocumentKey<T[\"_id\"]>;\n  /** A document describing the fields that were updated or removed. */\n  updateDescription: UpdateDescription;\n  /**\n   * For change streams opened with the `fullDocument: updateLookup` option, this will represent\n   * the most current majority-committed version of the document modified by the update operation.\n   */\n  fullDocument?: T;\n} & BaseChangeEvent<\"update\">;\n\n/**\n * A document got replaced in the collection.\n */\nexport type ReplaceEvent<T extends Document> = {\n  /** The namespace (database and collection) of the document got replaced within. */\n  ns: DocumentNamespace;\n  /** A document that contains the _id of the replaced document. */\n  documentKey: DocumentKey<T[\"_id\"]>;\n  /** The document after the insert of the replacement document. */\n  fullDocument: T;\n} & BaseChangeEvent<\"replace\">;\n\n/**\n * A document got deleted from the collection.\n */\nexport type DeleteEvent<T extends Document> = {\n  /** The namespace (database and collection) which the document got deleted from. */\n  ns: DocumentNamespace;\n  /** A document that contains the _id of the deleted document. */\n  documentKey: DocumentKey<T[\"_id\"]>;\n} & BaseChangeEvent<\"delete\">;\n\n/**\n * Occurs when a collection is dropped from a database.\n */\nexport type DropEvent = {\n  /** The namespace (database and collection) of the collection that got dropped. */\n  ns: DocumentNamespace;\n} & BaseChangeEvent<\"drop\">;\n\n/**\n * Occurs when a collection is renamed.\n */\nexport type RenameEvent = {\n  /** The original namespace (database and collection) that got renamed. */\n  ns: DocumentNamespace;\n  /** The namespace (database and collection) going forward. */\n  to: DocumentNamespace;\n} & BaseChangeEvent<\"rename\">;\n\n/**\n * Occurs when a database is dropped.\n */\nexport type DropDatabaseEvent = {\n  /** The namespace (specifying only the database name) of the database that got dropped. */\n  ns: Omit<DocumentNamespace, \"coll\">;\n} & BaseChangeEvent<\"dropDatabase\">;\n\n/**\n * Invalidate events close the change stream cursor.\n */\nexport type InvalidateEvent = BaseChangeEvent<\"invalidate\">;\n\n/**\n * A change event communicated via a MongoDB change stream.\n * @see https://docs.mongodb.com/manual/reference/change-events/\n */\nexport type ChangeEvent<T extends Document> =\n  | InsertEvent<T>\n  | UpdateEvent<T>\n  | ReplaceEvent<T>\n  | DeleteEvent<T>\n  | DropEvent\n  | RenameEvent\n  | DropDatabaseEvent\n  | InvalidateEvent;\n\n/**\n * A remote collection of documents in a MongoDB database.\n */\nexport class MongoDBCollection<T extends Document> {\n  private functions: DefaultFunctionsFactory;\n\n  /** @internal */\n  constructor(\n    /** @internal */ private user: User,\n    public readonly serviceName: string,\n    public readonly databaseName: string,\n    private readonly collectionName: string,\n  ) {\n    this.functions = createFactory(user, serviceName);\n  }\n\n  /**\n   * The name of the collection.\n   */\n  get name(): string {\n    return this.collectionName;\n  }\n\n  /**\n   * Finds the documents which match the provided query.\n   * @param filter - An optional filter applied to narrow down the results.\n   * @param options - Additional options to apply.\n   * @returns A promise that resolves to the found documents.\n   */\n  find(filter: Filter = {}, options: FindOptions = {}): Promise<T[]> {\n    return this.functions.find({\n      database: this.databaseName,\n      collection: this.name,\n      query: filter,\n      project: options.projection,\n      sort: options.sort,\n      limit: options.limit,\n    }) as Promise<T[]>;\n  }\n\n  /**\n   * Finds a document which matches the provided filter.\n   * @param filter - A filter applied to narrow down the result.\n   * @param options - Additional options to apply.\n   * @returns A promise that resolves to the found document.\n   */\n  findOne(filter: Filter = {}, options: FindOneOptions = {}): Promise<T | null> {\n    return this.functions.findOne({\n      database: this.databaseName,\n      collection: this.name,\n      query: filter,\n      project: options.projection,\n      sort: options.sort,\n    }) as Promise<T | null>;\n  }\n\n  /**\n   * Finds a document which matches the provided query and performs the desired update to individual fields.\n   * @param filter - A filter applied to narrow down the result.\n   * @param update - The new values for the document.\n   * @param options - Additional options to apply.\n   * @returns A promise that resolves to the found document before applying the update.\n   */\n  findOneAndUpdate(filter: Filter, update: Update, options: FindOneAndModifyOptions = {}): Promise<T | null> {\n    return this.functions.findOneAndUpdate({\n      database: this.databaseName,\n      collection: this.name,\n      filter,\n      update,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument,\n    }) as Promise<T | null>;\n  }\n\n  /**\n   * Finds a document which matches the provided filter and replaces it with a new document.\n   * @param filter - A filter applied to narrow down the result.\n   * @param replacement - The new replacing document.\n   * @param options - Additional options to apply.\n   * @returns A promise that resolves to the found document found before replacement.\n   */\n  findOneAndReplace(filter: Filter, replacement: unknown, options: FindOneAndModifyOptions = {}): Promise<T | null> {\n    return this.functions.findOneAndReplace({\n      database: this.databaseName,\n      collection: this.name,\n      filter: filter,\n      update: replacement,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument,\n    }) as Promise<T | null>;\n  }\n\n  /**\n   * Finds a document which matches the provided filter and deletes it\n   * @param filter - A filter applied to narrow down the result.\n   * @param options - Additional options to apply.\n   * @returns A promise that resolves to the found document before deletion.\n   */\n  findOneAndDelete(filter: Filter = {}, options: FindOneOptions = {}): Promise<T | null> {\n    return this.functions.findOneAndDelete({\n      database: this.databaseName,\n      collection: this.name,\n      filter,\n      sort: options.sort,\n      projection: options.projection,\n    }) as Promise<T | null>;\n  }\n\n  /**\n   * Runs an aggregation framework pipeline against this collection.\n   * @param pipeline - An array of aggregation pipeline stages.\n   * @returns A promise that resolves to the aggregation result.\n   */\n  aggregate(pipeline: AggregatePipelineStage[]): Promise<unknown> {\n    return this.functions.aggregate({\n      database: this.databaseName,\n      collection: this.name,\n      pipeline,\n    });\n  }\n\n  /**\n   * Counts the number of documents in this collection matching the provided filter.\n   *\n   * Note: When calling this without a filter, you may receive inaccurate document counts\n   * as it returns results based on the collection's metadata, which may result in an\n   * approximate count. In particular:\n   *  - On a sharded cluster, the resulting count will not correctly filter out\n   *    {@link https://www.mongodb.com/docs/manual/reference/glossary/#std-term-orphaned-document orphaned documents}.\n   *  - After an unclean shutdown or file copy based initial sync, the count may be incorrect.\n   * @param filter - An optional filter applied to narrow down the results.\n   * @param options - Additional options to apply.\n   * @returns A promise that resolves to the number of documents matching the filter.\n   */\n  count(filter: Filter = {}, options: CountOptions = {}): Promise<number> {\n    return this.functions.count({\n      database: this.databaseName,\n      collection: this.name,\n      query: filter,\n      limit: options.limit,\n    }) as Promise<number>;\n  }\n\n  /**\n   * Inserts a single document into the collection.\n   * Note: If the document is missing an _id, one will be generated for it by the server.\n   * @param document - The document to insert.\n   * @returns A promise that resolves an object containing the inserted object ID (`insertedId`).\n   */\n  insertOne(document: NewDocument<T>): Promise<InsertOneResult<T[\"_id\"]>> {\n    return this.functions.insertOne({\n      database: this.databaseName,\n      collection: this.name,\n      document,\n    }) as Promise<InsertOneResult<T[\"_id\"]>>;\n  }\n\n  /**\n   * Inserts an array of documents into the collection.\n   * If any values are missing identifiers, they will be generated by the server.\n   * @param documents - The array of documents to insert.\n   * @returns A promise that resolves to an object containing an array of IDs inserted (`insertedIds`).\n   */\n  insertMany(documents: NewDocument<T>[]): Promise<InsertManyResult<T[\"_id\"]>> {\n    return this.functions.insertMany({\n      database: this.databaseName,\n      collection: this.name,\n      documents,\n    }) as Promise<InsertManyResult<T[\"_id\"]>>;\n  }\n\n  /**\n   * Deletes a single matching document from the collection.\n   * @param filter - A filter applied to narrow down the result.\n   * @returns A promise that resolves to an object containing the number of deleted documents (`deletedCount`).\n   */\n  deleteOne(filter: Filter = {}): Promise<DeleteResult> {\n    return this.functions.deleteOne({\n      database: this.databaseName,\n      collection: this.name,\n      query: filter,\n    }) as Promise<DeleteResult>;\n  }\n\n  /**\n   * Deletes multiple documents.\n   * @param filter - A filter applied to narrow down the result. If omitted, it defaults\n   *  to `{}` which deletes all documents in the collection.\n   * @returns A promise that resolves to an object containing the number of deleted documents (`deletedCount`).\n   */\n  deleteMany(filter: Filter = {}): Promise<DeleteResult> {\n    return this.functions.deleteMany({\n      database: this.databaseName,\n      collection: this.name,\n      query: filter,\n    }) as Promise<DeleteResult>;\n  }\n\n  /**\n   * Updates a single document matching the provided filter in this collection.\n   * @param filter - A filter applied to narrow down the result.\n   * @param update - The new values for the document.\n   * @param options - Additional options to apply.\n   * @returns A promise that resolves to an object containing:\n   * ```\n   * {\n   *  matchedCount: number;\n   *  modifiedCount: number;\n   *  upsertedId: IdType | undefined;\n   * }\n   * ```\n   */\n  updateOne(filter: Filter, update: Update, options: UpdateOptions = {}): Promise<UpdateResult<T[\"_id\"]>> {\n    return this.functions.updateOne({\n      database: this.databaseName,\n      collection: this.name,\n      query: filter,\n      update,\n      upsert: options.upsert,\n      arrayFilters: options.arrayFilters,\n    }) as Promise<UpdateResult<T[\"_id\"]>>;\n  }\n\n  /**\n   * Updates multiple documents matching the provided filter in this collection.\n   * @param filter - A filter applied to narrow down the result.\n   * @param update - The new values for the documents.\n   * @param options - Additional options to apply.\n   * @returns A promise that resolves to an object containing:\n   * ```\n   * {\n   *  matchedCount: number;\n   *  modifiedCount: number;\n   *  upsertedId: IdType | undefined;\n   * }\n   * ```\n   */\n  updateMany(filter: Filter, update: Update, options: UpdateOptions = {}): Promise<UpdateResult<T[\"_id\"]>> {\n    return this.functions.updateMany({\n      database: this.databaseName,\n      collection: this.name,\n      query: filter,\n      update,\n      upsert: options.upsert,\n      arrayFilters: options.arrayFilters,\n    }) as Promise<UpdateResult<T[\"_id\"]>>;\n  }\n\n  /**\n   * Creates an asynchronous change stream to monitor this collection for changes.\n   *\n   * By default, yields all change events for this collection. You may specify at most one of\n   * the `filter` or `ids` options.\n   *\n   * Important Note: To use this on React Native, you must install:\n   *\n   * 1. Polyfills for `fetch` and `ReadableStream`: https://www.npmjs.com/package/react-native-polyfill-globals\n   * 2. Babel plugin enabling async generator syntax: https://npmjs.com/package/@babel/plugin-proposal-async-generator-functions\n   * @param options.filter - A filter for which change events you want to watch.\n   * @param options.ids - A list of document IDs for which change events you want to watch.\n   * @returns An async generator of change events.\n   * @see https://docs.mongodb.com/manual/reference/change-events/\n   */\n  watch(): AsyncGenerator<ChangeEvent<T>>;\n  watch(options: { ids: T[\"_id\"][]; filter?: never }): AsyncGenerator<ChangeEvent<T>>;\n  watch(options: { ids?: never; filter: Filter }): AsyncGenerator<ChangeEvent<T>>;\n  async *watch({\n    ids,\n    filter,\n  }: {\n    ids?: T[\"_id\"][];\n    filter?: Filter;\n  } = {}): AsyncGenerator<ChangeEvent<T>> {\n    const iterator = await this.user.callFunctionStreaming(\"watch\", this.serviceName, {\n      database: this.databaseName,\n      collection: this.collectionName,\n      ids,\n      filter,\n    });\n\n    const watchStream = binding.WatchStream.make();\n    for await (const chunk of iterator) {\n      if (!chunk) continue;\n      // TODO: Remove `toArrayBuffer()` once https://jira.mongodb.org/browse/RJS-2124 gets solved\n      const buffer = toArrayBuffer(chunk);\n      binding.Helpers.feedBuffer(watchStream, buffer);\n      while (watchStream.state === binding.WatchStreamState.HaveEvent) {\n        yield watchStream.nextEvent() as unknown as ChangeEvent<T>;\n      }\n      if (watchStream.state === binding.WatchStreamState.HaveError) {\n        throw watchStream.error;\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { User } from \"../internal\";\n\n/**\n * A function which executes on the Atlas App Services server.\n */\nexport type AppServicesFunction<R, A extends unknown[]> = (...args: A) => Promise<R>;\n\n/**\n * The default functions factory, providing types for easily calling functions.\n */\nexport type DefaultFunctionsFactory = {\n  /**\n   * All the functions are accessible as members on this instance.\n   */\n  [name: string]: AppServicesFunction<unknown, unknown[]>;\n};\n\nexport function createFactory<T>(user: User, serviceName: string | undefined): T {\n  return new Proxy(\n    {},\n    {\n      get(target, name, receiver) {\n        if (typeof name === \"string\" && name != \"inspect\") {\n          return user.callFunctionOnService.bind(user, name, serviceName);\n        } else {\n          return Reflect.get(target, name, receiver);\n        }\n      },\n    },\n  ) as T;\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  AnyResults,\n  MutableSubscriptionSet,\n  Realm,\n  RealmObject,\n  Results,\n  Subscription,\n  SubscriptionSet,\n  assert,\n  binding,\n} from \"../internal\";\n\n/**\n * Enum representing the state of a {@link SubscriptionSet}.\n */\nexport enum SubscriptionSetState {\n  /**\n   * The subscription update has been persisted locally, but the server hasn't\n   * yet returned all the data that matched the updated subscription queries.\n   */\n  Pending = \"pending\",\n\n  /**\n   * The server has acknowledged the subscription and sent all the data that\n   * matched the subscription queries at the time the SubscriptionSet was\n   * updated. The server is now in steady-state synchronization mode where it\n   * will stream updates as they come.\n   */\n  Complete = \"complete\",\n\n  /**\n   * The server has returned an error and synchronization is paused for this\n   * Realm. To view the actual error, use `Subscriptions.error`.\n   *\n   * You can still use {@link SubscriptionSet.update} to update the subscriptions,\n   * and if the new update doesn't trigger an error, synchronization will be restarted.\n   */\n  Error = \"error\",\n\n  /**\n   * The SubscriptionSet has been superseded by an updated one. This typically means\n   * that someone has called {@link SubscriptionSet.update} on a different instance\n   * of the {@link SubscriptionSet}. You should not use a superseded SubscriptionSet,\n   * and instead obtain a new instance from {@link Realm.subscriptions}.\n   */\n  Superseded = \"superseded\",\n}\n\n/**\n * @deprecated Will be removed in v13.0.0. Please use {@link SubscriptionSetState}.\n */\nexport enum SubscriptionsState {\n  /**\n   * The subscription update has been persisted locally, but the server hasn't\n   * yet returned all the data that matched the updated subscription queries.\n   */\n  Pending = SubscriptionSetState.Pending,\n\n  /**\n   * The server has acknowledged the subscription and sent all the data that\n   * matched the subscription queries at the time the SubscriptionSet was\n   * updated. The server is now in steady-state synchronization mode where it\n   * will stream updates as they come.\n   */\n  Complete = SubscriptionSetState.Complete,\n\n  /**\n   * The server has returned an error and synchronization is paused for this\n   * Realm. To view the actual error, use `Subscriptions.error`.\n   *\n   * You can still use {@link SubscriptionSet.update} to update the subscriptions,\n   * and if the new update doesn't trigger an error, synchronization will be restarted.\n   */\n  Error = SubscriptionSetState.Error,\n\n  /**\n   * The SubscriptionSet has been superseded by an updated one. This typically means\n   * that someone has called {@link SubscriptionSet.update} on a different instance\n   * of the {@link SubscriptionSet}. You should not use a superseded SubscriptionSet,\n   * and instead obtain a new instance from {@link Realm.subscriptions}.\n   */\n  Superseded = SubscriptionSetState.Superseded,\n}\n\nconst DEFAULT_PROPERTY_DESCRIPTOR: PropertyDescriptor = { configurable: true, enumerable: true, writable: false };\nconst PROXY_HANDLER: ProxyHandler<BaseSubscriptionSet> = {\n  ownKeys(target) {\n    return Reflect.ownKeys(target).concat([...target.keys()].map(String));\n  },\n  getOwnPropertyDescriptor(target, prop) {\n    if (Reflect.has(target, prop)) {\n      return Reflect.getOwnPropertyDescriptor(target, prop);\n    }\n    if (typeof prop === \"string\") {\n      const BASE = 10;\n      const index = Number.parseInt(prop, BASE);\n      if (index >= 0 && index < target.length) {\n        return DEFAULT_PROPERTY_DESCRIPTOR;\n      }\n    }\n  },\n  // Not defining `set()` here will make e.g. `mySubscriptions[0] = someValue` a no-op\n  // if strict mode (`\"use strict\"`) is used, or throw a TypeError if it is not used.\n};\n\n/**\n * Class representing the common functionality for the {@link SubscriptionSet} and\n * {@link MutableSubscriptionSet} classes.\n *\n * SubscriptionSets can only be modified inside a {@link SubscriptionSet.update} callback.\n *\n * The SubscriptionSet is an iterable; thus, the contained {@link Subscription}s can be\n * accessed in `for-of` loops or spread into an `Array` for access to the ECMAScript\n * Array API, e.g. `[...realm.subscriptions][0]`.\n */\nexport abstract class BaseSubscriptionSet {\n  /** @internal */\n  protected constructor(/** @internal */ protected internal: binding.SyncSubscriptionSet) {\n    Object.defineProperty(this, \"internal\", {\n      enumerable: false,\n      configurable: false,\n      // `internal` needs to be writable due to `SubscriptionSet.updateNoWait()`\n      // overwriting `this.internal` with the new committed set.\n      writable: true,\n    });\n    return new Proxy<BaseSubscriptionSet>(this, PROXY_HANDLER);\n  }\n\n  /**\n   * Whether there are no subscriptions in the set.\n   * @returns `true` if there are no subscriptions in the set, `false` otherwise.\n   */\n  get isEmpty(): boolean {\n    return this.internal.size === 0;\n  }\n\n  /**\n   * The version of the SubscriptionSet. This is incremented every time a\n   * {@link SubscriptionSet.update} is applied.\n   * @returns The version of the {@link SubscriptionSet}.\n   */\n  get version(): number {\n    return Number(this.internal.version);\n  }\n\n  /**\n   * @returns The state of the SubscriptionSet.\n   */\n  get state(): SubscriptionSetState {\n    const state = this.internal.state;\n    switch (state) {\n      case binding.SyncSubscriptionSetState.Uncommitted:\n      case binding.SyncSubscriptionSetState.Pending:\n      case binding.SyncSubscriptionSetState.Bootstrapping:\n      case binding.SyncSubscriptionSetState.AwaitingMark:\n        return SubscriptionSetState.Pending;\n      case binding.SyncSubscriptionSetState.Complete:\n        return SubscriptionSetState.Complete;\n      case binding.SyncSubscriptionSetState.Error:\n        return SubscriptionSetState.Error;\n      case binding.SyncSubscriptionSetState.Superseded:\n        return SubscriptionSetState.Superseded;\n      default:\n        throw new Error(`Unsupported SubscriptionSetState value: ${state}`);\n    }\n  }\n\n  /**\n   * If `state` is {@link SubscriptionSetState.Error}, this will be a string representing\n   * why the {@link SubscriptionSet} is in an error state. It will be `null` if there is no error.\n   * @returns A string representing the error, or `null` if there is no error.\n   */\n  get error(): string | null {\n    return this.state === SubscriptionSetState.Error ? this.internal.errorStr : null;\n  }\n\n  /**\n   * @returns The number of subscriptions in the set.\n   */\n  get length(): number {\n    return this.internal.size;\n  }\n\n  /**\n   * Find a subscription by name.\n   * @param name - The name to search for.\n   * @returns The named subscription, or `null` if the subscription is not found.\n   */\n  findByName(name: string): Subscription | null {\n    assert.string(name, \"name\");\n\n    const subscription = this.internal.findByName(name);\n    return subscription ? new Subscription(subscription) : null;\n  }\n\n  /**\n   * Find a subscription by query. Will match both named and unnamed subscriptions.\n   * @param query - The query to search for, represented as a {@link Results} instance,\n   *  e.g. `Realm.objects(\"Cat\").filtered(\"age > 10\")`.\n   * @returns The subscription with the specified query, or `null` if the subscription is not found.\n   */\n  findByQuery<Subscription>(query: Results<Subscription & RealmObject<Subscription>>): Subscription | null {\n    assert.instanceOf(query, Results, \"query\");\n\n    const subscription = this.internal.findByQuery(query.internal.query);\n    return subscription ? (new Subscription(subscription) as Subscription) : null; // TODO: Remove the type assertion into Subscription\n  }\n\n  /** @internal */\n  exists(query: AnyResults): boolean {\n    if (query.subscriptionName === undefined) {\n      return !!this.internal.findByQuery(query.internal.query);\n    }\n    return !!this.internal.findByName(query.subscriptionName);\n  }\n\n  /**\n   * Makes the subscription set iterable.\n   * @returns Iterable of each value in the set.\n   * @example\n   * for (const subscription of subscriptions) {\n   *   // ...\n   * }\n   */\n  *[Symbol.iterator](): IterableIterator<Subscription> {\n    for (const subscription of this.internal) {\n      yield new Subscription(subscription);\n    }\n  }\n\n  /**\n   * Get an iterator that contains each index in the subscription set.\n   * @internal\n   */\n  *keys() {\n    const size = this.length;\n    for (let i = 0; i < size; i++) {\n      yield i;\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  AnyResults,\n  BaseSubscriptionSet,\n  Realm,\n  Results,\n  Subscription,\n  SubscriptionSet,\n  assert,\n  binding,\n} from \"../internal\";\n\n/**\n * Behavior when waiting for subscribed objects to be synchronized/downloaded.\n */\nexport enum WaitForSync {\n  /**\n   * Waits until the objects have been downloaded from the server\n   * the first time the subscription is created. If the subscription\n   * already exists, the `Results` is returned immediately.\n   */\n  FirstTime = \"first-time\",\n  /**\n   * Always waits until the objects have been downloaded from the server.\n   */\n  Always = \"always\",\n  /**\n   * Never waits for the download to complete, but keeps downloading the\n   * objects in the background.\n   */\n  Never = \"never\",\n}\n\n/**\n * Options for {@link MutableSubscriptionSet.add}.\n */\nexport type SubscriptionOptions = {\n  /**\n   * Sets the name of the subscription being added. This allows you to later refer\n   * to the subscription by name, e.g. when calling {@link MutableSubscriptionSet.removeByName}.\n   */\n  name?: string;\n  /**\n   * By default, adding a subscription with the same name as an existing one\n   * but a different query will update the existing subscription with the new\n   * query. If `throwOnUpdate` is set to true, adding a subscription with the\n   * same name but a different query will instead throw an exception.\n   * Adding a subscription with the same name and query is always a no-op.\n   */\n  throwOnUpdate?: boolean;\n  /**\n   * Specifies how to wait or not wait for subscribed objects to be downloaded.\n   * @default WaitForSync.FirstTime\n   */\n  behavior?: WaitForSync;\n  /**\n   * The maximum time (in milliseconds) to wait for objects to be downloaded.\n   * If the time exceeds this limit, the `Results` is returned and the download\n   * continues in the background.\n   */\n  timeout?: number;\n};\n\n/**\n * The mutable version of a given SubscriptionSet. The {@link MutableSubscriptionSet}\n * instance can only be used from inside the {@link SubscriptionSet.update} callback.\n */\nexport class MutableSubscriptionSet extends BaseSubscriptionSet {\n  // This class overrides the BaseSubscriptionSet's `internal` field (by having\n  // `declare internal`) in order to be able to write `this.internal.someOwnMember`\n  // rather than `(this.internal as binding.MutableSyncSubscriptionSet).someOwnMember`.\n  // (`this.internal = internal` cannot be used in the constructor due to the proxy\n  // handler in BaseSubscriptionSet making it non-writable.)\n  /** @internal */\n  protected declare internal: binding.MutableSyncSubscriptionSet;\n\n  /** @internal */\n  constructor(/** @internal */ internal: binding.MutableSyncSubscriptionSet) {\n    super(internal);\n  }\n\n  /**\n   * Add a query to the set of active subscriptions. The query will be joined via\n   * an `OR` operator with any existing queries for the same type.\n   *\n   * A query is represented by a {@link Results} instance returned from {@link Realm.objects},\n   * for example: `mutableSubs.add(realm.objects(\"Cat\").filtered(\"age > 10\"));`.\n   * @param query - A {@link Results} instance representing the query to subscribe to.\n   * @param options - An optional {@link SubscriptionOptions} object containing options to\n   * use when adding this subscription (e.g. to give the subscription a name).\n   * @returns A `Subscription` instance for the new subscription.\n   */\n  add(query: AnyResults, options?: SubscriptionOptions): Subscription {\n    assert.instanceOf(query, Results, \"query\");\n    if (options) {\n      validateSubscriptionOptions(options);\n    }\n\n    const subscriptions = this.internal;\n    const results = query.internal;\n    const queryInternal = results.query;\n\n    if (options?.throwOnUpdate && options.name !== undefined) {\n      const existingSubscription = subscriptions.findByName(options.name);\n      if (existingSubscription) {\n        const isSameQuery =\n          existingSubscription.queryString === queryInternal.description &&\n          existingSubscription.objectClassName === results.objectType;\n        assert(\n          isSameQuery,\n          `A subscription with the name '${options.name}' already exists but has a different query. If you meant to update it, remove 'throwOnUpdate: true' from the subscription options.`,\n        );\n      }\n    }\n\n    const [subscription] =\n      // Check for `undefined` rather than falsy since we treat empty names as named.\n      options?.name === undefined\n        ? subscriptions.insertOrAssignByQuery(queryInternal)\n        : subscriptions.insertOrAssignByName(options.name, queryInternal);\n\n    query.subscriptionName = subscription.name;\n\n    return new Subscription(subscription);\n  }\n\n  /**\n   * Remove a subscription with the given query from the SubscriptionSet.\n   * @param query - A {@link Results} instance representing the query to remove a subscription to.\n   * @returns `true` if the subscription was removed, `false` if it was not found.\n   */\n  remove(query: AnyResults): boolean {\n    assert.instanceOf(query, Results, \"query\");\n\n    return this.internal.eraseByQuery(query.internal.query);\n  }\n\n  /**\n   * Remove a subscription with the given name from the SubscriptionSet.\n   * @param name - The name of the subscription to remove.\n   * @returns `true` if the subscription was removed, `false` if it was not found.\n   */\n  removeByName(name: string): boolean {\n    assert.string(name, \"name\");\n\n    return this.internal.eraseByName(name);\n  }\n\n  /**\n   * Remove the specified subscription from the SubscriptionSet.\n   * @param subscription - The {@link Subscription} instance to remove.\n   * @returns `true` if the subscription was removed, `false` if it was not found.\n   */\n  removeSubscription(subscription: Subscription): boolean {\n    assert.instanceOf(subscription, Subscription, \"subscription\");\n\n    return binding.Helpers.eraseSubscription(this.internal, subscription.internal);\n  }\n\n  /**\n   * Remove all subscriptions for the specified object type from the SubscriptionSet.\n   * @param objectType - The string name of the object type to remove all subscriptions for.\n   * @returns The number of subscriptions removed.\n   */\n  removeByObjectType(objectType: string): number {\n    assert.string(objectType, \"objectType\");\n\n    return this.removeByPredicate((subscription) => subscription.objectClassName === objectType);\n  }\n\n  /**\n   * Remove all subscriptions from the SubscriptionSet.\n   * @returns The number of subscriptions removed.\n   */\n  removeAll(): number {\n    const numRemoved = this.internal.size;\n    this.internal.clear();\n\n    return numRemoved;\n  }\n\n  /**\n   * Remove all unnamed/anonymous subscriptions from the SubscriptionSet.\n   * @returns The number of subscriptions removed.\n   */\n  removeUnnamed(): number {\n    return this.removeByPredicate((subscription) => subscription.name === undefined);\n  }\n\n  /** @internal */\n  private removeByPredicate(predicate: (subscription: binding.SyncSubscription) => boolean): number {\n    // TODO: This is currently O(n^2) because each erase call is O(n). Once Core has\n    //       fixed https://github.com/realm/realm-core/issues/6241, we can update this.\n\n    // Removing the subscription (calling `eraseSubscription()`) invalidates all current\n    // iterators, so it would be illegal to continue iterating. Instead, we push it to an\n    // array to remove later.\n    const subscriptionsToRemove: binding.SyncSubscription[] = [];\n    for (const subscription of this.internal) {\n      if (predicate(subscription)) {\n        subscriptionsToRemove.push(subscription);\n      }\n    }\n    let numRemoved = 0;\n    for (const subscription of subscriptionsToRemove) {\n      const isRemoved = binding.Helpers.eraseSubscription(this.internal, subscription);\n      if (isRemoved) {\n        numRemoved++;\n      }\n    }\n\n    return numRemoved;\n  }\n}\n\nfunction validateSubscriptionOptions(input: unknown): asserts input is SubscriptionOptions {\n  assert.object(input, \"options\", { allowArrays: false });\n  if (input.name !== undefined) {\n    assert.string(input.name, \"'name' on 'SubscriptionOptions'\");\n  }\n  if (input.throwOnUpdate !== undefined) {\n    assert.boolean(input.throwOnUpdate, \"'throwOnUpdate' on 'SubscriptionOptions'\");\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  BaseSubscriptionSet,\n  FlexibleSyncConfiguration,\n  MutableSubscriptionSet,\n  Realm,\n  SubscriptionSetState,\n  assert,\n  binding,\n} from \"../internal\";\n\n/**\n * Represents the set of all active flexible sync subscriptions for a Realm instance.\n *\n * The server will continuously evaluate the queries that the instance is subscribed to\n * and will send data that matches them, as well as remove data that no longer does.\n *\n * The set of subscriptions can only be modified inside a {@link SubscriptionSet.update} callback,\n * by calling methods on the corresponding {@link MutableSubscriptionSet} instance.\n */\nexport class SubscriptionSet extends BaseSubscriptionSet {\n  /** @internal */\n  constructor(/** @internal */ private realm: Realm, internal: binding.SyncSubscriptionSet) {\n    super(internal);\n\n    Object.defineProperty(this, \"realm\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n    });\n  }\n\n  /**\n   * Wait for the server to acknowledge this set of subscriptions and return the\n   * matching objects.\n   *\n   * If `state` is {@link SubscriptionSetState.Complete}, the promise will be resolved immediately.\n   *\n   * If `state` is {@link SubscriptionSetState.Error}, the promise will be rejected immediately.\n   * @returns A promise which is resolved when synchronization is complete, or is\n   *  rejected if there is an error during synchronization.\n   */\n  async waitForSynchronization(): Promise<void> {\n    try {\n      const state = await this.internal.getStateChangeNotification(binding.SyncSubscriptionSetState.Complete);\n      if (state === binding.SyncSubscriptionSetState.Error) {\n        throw new Error(this.error || \"Encountered an error when waiting for synchronization.\");\n      }\n    } finally {\n      if (!this.realm.isClosed) {\n        this.internal.refresh();\n      }\n    }\n  }\n\n  /**\n   * Call this to make changes to this SubscriptionSet from inside the callback,\n   * such as adding or removing subscriptions from the set.\n   *\n   * The MutableSubscriptionSet argument can only be used from the callback and must\n   * not be used after it returns.\n   *\n   * All changes done by the callback will be batched and sent to the server. You can either\n   * `await` the call to `update`, or call {@link SubscriptionSet.waitForSynchronization}\n   * to wait for the new data to be available.\n   * @param callback A callback function which receives a {@link MutableSubscriptionSet}\n   *  instance as the first argument, which can be used to add or remove subscriptions\n   *  from the set, and the {@link Realm} associated with the SubscriptionSet as the\n   *  second argument (mainly useful when working with `initialSubscriptions` in\n   *  {@link FlexibleSyncConfiguration}).\n   * @returns A promise which resolves when the SubscriptionSet is synchronized, or is rejected\n   *  if there was an error during synchronization (see {@link SubscriptionSet.waitForSynchronization})\n   * @example\n   * await realm.subscriptions.update(mutableSubscriptions => {\n   *   mutableSubscriptions.add(realm.objects(\"Cat\").filtered(\"age > 10\"));\n   *   mutableSubscriptions.add(realm.objects(\"Dog\").filtered(\"age > 20\"), { name: \"oldDogs\" });\n   *   mutableSubscriptions.removeByName(\"youngDogs\");\n   * });\n   * // `realm` will now return the expected results based on the updated subscriptions\n   */\n  async update(callback: (mutableSubscriptions: MutableSubscriptionSet, realm: Realm) => void): Promise<void> {\n    this.updateNoWait(callback);\n    await this.waitForSynchronization();\n  }\n\n  /** @internal */\n  updateNoWait(callback: (mutableSubscriptions: MutableSubscriptionSet, realm: Realm) => void): void {\n    assert.function(callback, \"callback\");\n\n    // Create a mutable copy of this instance (which copies the original and upgrades\n    // its internal transaction to a write transaction) so that we can make updates to it.\n    const mutableSubscriptions = this.internal.makeMutableCopy();\n\n    callback(new MutableSubscriptionSet(mutableSubscriptions), this.realm);\n\n    // Commit the mutation, which downgrades its internal transaction to a read transaction\n    // so no more changes can be made to it, and returns a new (immutable) SubscriptionSet\n    // with the changes we made. Then update this SubscriptionSet instance to point to the\n    // updated version.\n    this.internal = mutableSubscriptions.commit();\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { BSON, SubscriptionSet, binding } from \"../internal\";\n\n/**\n * Class representing a single query subscription in a set of flexible sync\n * {@link SubscriptionSet}. This class contains readonly information about the\n * subscription – any changes to the set of subscriptions must be carried out\n * in a {@link SubscriptionSet.update} callback.\n */\nexport class Subscription {\n  /** @internal */\n  constructor(/** @internal */ public internal: binding.SyncSubscription) {\n    this.internal = internal;\n  }\n\n  /**\n   * The ObjectId of the subscription.\n   * @returns The ObjectId of the subscription.\n   */\n  get id(): BSON.ObjectId {\n    return this.internal.id;\n  }\n\n  /**\n   * The date when this subscription was created.\n   * @returns The date when this subscription was created.\n   */\n  get createdAt(): Date {\n    return this.internal.createdAt.toDate();\n  }\n\n  /**\n   * The date when this subscription was last updated.\n   * @returns The date when this subscription was last updated.\n   */\n  get updatedAt(): Date {\n    return this.internal.updatedAt.toDate();\n  }\n\n  /**\n   * The name given to this subscription when it was created.\n   * If no name was set, this will be `null`.\n   * @returns The name of the subscription or `null` if unnamed.\n   */\n  get name(): string | null {\n    const result = this.internal.name;\n    return result === undefined ? null : result;\n  }\n\n  /**\n   * The type of objects the subscription refers to.\n   * @returns The type of objects the subscription refers to.\n   */\n  get objectType(): string {\n    return this.internal.objectClassName;\n  }\n\n  /**\n   * The string representation of the query the subscription was created with.\n   * If no filter or sort was specified, this will be `\"TRUEPREDICATE\"`.\n   * @returns The string representation of the query the subscription was created with.\n   */\n  get queryString(): string {\n    return this.internal.queryString;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  App,\n  ConnectionState,\n  LogLevel,\n  Logger,\n  MutableSubscriptionSet,\n  NumericLogLevel,\n  OpenRealmBehaviorConfiguration,\n  OpenRealmBehaviorType,\n  OpenRealmTimeOutBehavior,\n  PartitionValue,\n  Realm,\n  Subscription,\n  SubscriptionSet,\n  SubscriptionSetState,\n  SyncSession,\n  User,\n  assert,\n  binding,\n  fromBindingLoggerLevelToNumericLogLevel,\n  toBindingLoggerLevel,\n  toBindingSyncConfig,\n  validateSyncConfiguration,\n} from \"../internal\";\n\nexport class Sync {\n  static Session = SyncSession;\n  static ConnectionState = ConnectionState;\n  static Subscription = Subscription;\n  static SubscriptionSet = SubscriptionSet;\n  static MutableSubscriptionSet = MutableSubscriptionSet;\n  static SubscriptionSetState = SubscriptionSetState;\n  /** @deprecated Please use {@link SubscriptionSetState} as a named import */\n  static SubscriptionsState = SubscriptionSetState;\n  static NumericLogLevel = NumericLogLevel;\n\n  /** @deprecated Will be removed in v13.0.0. Please use {@link Realm.setLogLevel}. */\n  static setLogLevel(app: App, level: LogLevel) {\n    const numericLevel = toBindingLoggerLevel(level);\n    app.internal.syncManager.setLogLevel(numericLevel);\n  }\n\n  /** @deprecated Will be removed in v13.0.0. Please use {@link Realm.setLogger}. */\n  static setLogger(app: App, logger: Logger) {\n    const factory = binding.Helpers.makeLoggerFactory((level, message) => {\n      logger(fromBindingLoggerLevelToNumericLogLevel(level), message);\n    });\n    app.internal.syncManager.setLoggerFactory(factory);\n  }\n  /**\n   * Get all sync sessions for a particular user.\n   * @since 10.0.0\n   */\n  static getAllSyncSessions(user: User): SyncSession[] {\n    return user.internal.allSessions.map((session) => new SyncSession(session));\n  }\n  /**\n   * Get the session associated with a particular user and partition value.\n   * @since 10.0.0\n   */\n  static getSyncSession(user: User, partitionValue: PartitionValue): SyncSession | null {\n    validateSyncConfiguration({ user, partitionValue });\n    const config = toBindingSyncConfig({ user, partitionValue });\n    const path = user.app.internal.syncManager.pathForRealm(config, undefined);\n    const session = user.internal.sessionForOnDiskPath(path);\n    if (session) {\n      return new SyncSession(session);\n    } else {\n      return null;\n    }\n  }\n  // TODO: Consider breaking the API, turning this into a property\n\n  /**\n   * Set the application part of the User-Agent string that will be sent to the Realm Object Server when a session\n   * is created.\n   *\n   * This method can only be called up to the point where the first Realm is opened. After that, the User-Agent\n   * can no longer be changed.\n   */\n  static setUserAgent(app: App, userAgent: string) {\n    app.internal.syncManager.setUserAgent(userAgent);\n  }\n  // TODO: Consider breaking the API, turning this into an instance method\n  /**\n   * Enable multiplexing multiple sync sessions over a single connection for a Realm app.\n   * When having a lot of synchronized realms open the system might run out of file\n   * descriptors because of all the open sockets to the server. Session multiplexing\n   * is designed to alleviate that, but it might not work with a server configured with\n   * fail-over. Only use if you're seeing errors about reaching the file descriptor limit\n   * and you know you are using many sync sessions.\n   */\n  static enableSessionMultiplexing(app: App) {\n    app.internal.syncManager.setSessionMultiplexing(true);\n  }\n\n  // TODO: Consider breaking the API, turning this into an instance method\n  /**\n   * Initiate a client reset. The Realm must be closed prior to the reset.\n   *\n   * A synced Realm may need to be reset if the communications with the Atlas Device Sync Server\n   * indicate an unrecoverable error that prevents continuing with normal synchronization. The\n   * most common reason for this is if a client has been disconnected for too long.\n   *\n   * The local copy of the Realm is moved into a recovery directory\n   * for safekeeping.\n   *\n   * Local writes that were not successfully synchronized to Atlas\n   * will be present in the local recovery copy of the Realm file. The re-downloaded Realm will\n   * initially contain only the data present at the time the Realm was synchronized up on the server.\n   * @deprecated\n   * @throws An {@link Error} if reset is not possible.\n   * @example\n   * {\n   *   // Once you have opened your Realm, you will have to keep a reference to it.\n   *   // In the error handler, this reference is called `realm`\n   *   const config = {\n   *     // schema, etc.\n   *     sync: {\n   *       user,\n   *       partitionValue,\n   *       error: (session, error) => {\n   *         if (error.name === 'ClientReset') {\n   *           let path = realm.path; // realm.path will no be accessible after realm.close()\n   *           realm.close();\n   *           Realm.App.Sync.initiateClientReset(app, path);\n   *           // - open Realm at `error.config.path` (oldRealm)\n   *           // - open Realm with `config` (newRealm)\n   *           // - copy required objects from oldRealm to newRealm\n   *           // - close both Realms\n   *         }\n   *       }\n   *     }\n   *   };\n   * }\n   */\n  static initiateClientReset(app: App, path: string) {\n    const success = app.internal.syncManager.immediatelyRunFileActions(path);\n    // TODO: Consider a better error message\n    assert(success, `Realm was not configured correctly. Client Reset could not be run for Realm at: ${path}`);\n  }\n  // TODO: Consider breaking the API, turning this into an instance method\n  /**\n   * Returns `true` if Realm still has a reference to any sync sessions regardless of their state.\n   * If `false` is returned it means that no sessions currently exist.\n   * @param [app] - The app where the Realm was opened.\n   * @internal\n   */\n  static _hasExistingSessions(app: App) {\n    return app.internal.syncManager.hasExistingSessions;\n  }\n  // TODO: Consider breaking the API, turning this into an instance method\n  static reconnect(app: App) {\n    app.internal.syncManager.reconnect();\n  }\n\n  /**\n   * The default behavior settings if you want to open a synchronized Realm immediately and start working on it.\n   * If this is the first time you open the Realm, it will be empty while the server data is being downloaded in the background.\n   * @deprecated since v12\n   */\n\n  static openLocalRealmBehavior: Readonly<OpenRealmBehaviorConfiguration> = {\n    type: OpenRealmBehaviorType.OpenImmediately,\n  };\n\n  /**\n   * The default behavior settings if you want to wait for downloading a synchronized Realm to complete before opening it.\n   * @deprecated since v12\n   */\n  static downloadBeforeOpenBehavior: Readonly<OpenRealmBehaviorConfiguration> = {\n    type: OpenRealmBehaviorType.DownloadBeforeOpen,\n    timeOut: 30 * 1000,\n    timeOutBehavior: OpenRealmTimeOutBehavior.ThrowException,\n  };\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  AnyUser,\n  Credentials,\n  DefaultFunctionsFactory,\n  DefaultObject,\n  EmailPasswordAuth,\n  Listeners,\n  Sync,\n  User,\n  assert,\n  binding,\n  createNetworkTransport,\n  deviceInfo,\n  fs,\n} from \"../internal\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type AnyApp = App<any, any>;\n\n/**\n * This describes the options used to create a Realm App instance.\n */\nexport type AppConfiguration = {\n  /**\n   * The Realm App ID\n   * @since v10.0.0\n   */\n  id: string;\n\n  /**\n   * An optional URL to use as a prefix when sending requests to the Atlas App Services server.\n   * @since v10.0.0\n   */\n  baseUrl?: string;\n\n  /**\n   * This describes the local app, sent to the server when a user authenticates.\n   * Specifying this will enable the server to respond differently to specific versions of specific apps.\n   * @since v10.0.0\n   */\n  app?: LocalAppConfiguration;\n\n  /**\n   * The timeout for requests (in milliseconds)\n   * @since v10.0.0\n   */\n  timeout?: number;\n\n  /**\n   * Use the same underlying connection towards the server across multiple sync sessions.\n   * This uses less resources on the server and provides a small increase in speed when opening subsequent synced Realms.\n   * @default true\n   */\n  multiplexSessions?: boolean;\n\n  /**\n   * Specify where synced Realms and metadata is stored. If not specified, the current work directory is used.\n   * @since v11.7.0\n   */\n  baseFilePath?: string;\n};\n\n/**\n * This describes the local app, sent to the server when a user authenticates.\n */\nexport type LocalAppConfiguration = {\n  /**\n   * The name / ID of the local app.\n   * Note: This should be the name or a bundle ID of your app, not the Atlas App Services application.\n   */\n  name?: string;\n\n  /**\n   * The version of the local app.\n   */\n  version?: string;\n};\n\nexport type AppChangeCallback = () => void;\n\ntype AppListenerToken = binding.AppSubscriptionToken;\n\n/**\n * The class represents an Atlas App Services Application.\n *\n * ```js\n * const app = new App({ id: \"my-app-qwert\" });\n * ```\n */\nexport class App<\n  FunctionsFactoryType extends DefaultFunctionsFactory = DefaultFunctionsFactory,\n  CustomDataType extends DefaultObject = DefaultObject,\n> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private static appById = new Map<string, binding.WeakRef<AnyApp>>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private static appByUserId = new Map<string, binding.WeakRef<AnyApp>>();\n\n  /**\n   * Get or create a singleton Realm App from an ID.\n   * Calling this function multiple times with the same ID will return the same instance.\n   * @deprecated Use {@link App.get}.\n   * @param id - The Realm App ID visible from the Atlas App Services UI or a configuration.\n   * @returns The Realm App instance.\n   */\n  public static getApp(id: string): App {\n    return this.get(id);\n  }\n\n  /**\n   * Get or create a singleton Realm App from an ID.\n   * Calling this function multiple times with the same ID will return the same instance.\n   * @param id - The Realm App ID visible from the Atlas App Services UI or a configuration.\n   * @returns The Realm App instance.\n   */\n  public static get(id: string): App {\n    const cachedApp = App.appById.get(id)?.deref();\n    if (cachedApp) {\n      return cachedApp;\n    }\n    const newApp = new App(id);\n    App.appById.set(id, new binding.WeakRef(newApp));\n    return newApp;\n  }\n\n  public static Sync = Sync;\n\n  /**\n   * All credentials available for authentication.\n   * @see https://www.mongodb.com/docs/atlas/app-services/authentication/\n   */\n  public static Credentials = Credentials;\n\n  /** @internal */\n  public static deviceInfo = deviceInfo.create();\n  /** @internal */\n  public static userAgent = `RealmJS/${App.deviceInfo.sdkVersion} (v${App.deviceInfo.platformVersion})`;\n\n  /** @internal */\n  public static getAppByUser(userInternal: binding.SyncUser): App {\n    const app = App.appByUserId.get(userInternal.identity)?.deref();\n    if (!app) {\n      throw new Error(`Cannot determine which app is associated with user (id = ${userInternal.identity})`);\n    }\n    return app;\n  }\n\n  /** @internal */\n  public static setAppByUser(userInternal: binding.SyncUser, currentApp: AnyApp): void {\n    App.appByUserId.set(userInternal.identity, new binding.WeakRef(currentApp));\n  }\n\n  /** @internal */\n  public internal: binding.App;\n\n  private listeners = new Listeners<AppChangeCallback, AppListenerToken>({\n    add: (callback: () => void): AppListenerToken => {\n      return this.internal.subscribe(callback);\n    },\n    remove: (token) => {\n      this.internal.unsubscribe(token);\n    },\n  });\n\n  /**\n   * Constructs a new {@link App} instance, used to connect to an Atlas App Services App.\n   * @param id - A string app ID.\n   * @throws an {@link Error} If no {@link id} is provided.\n   */\n  constructor(id: string);\n\n  /**\n   * Constructs a new {@link App} instance, used to connect to an Atlas App Services App.\n   * @param config - The configuration of the app.\n   * @throws an {@link Error} If no {@link AppConfiguration.id | app id} is provided.\n   */\n  constructor(config: AppConfiguration);\n\n  constructor(configOrId: AppConfiguration | string) {\n    const config: AppConfiguration = typeof configOrId === \"string\" ? { id: configOrId } : configOrId;\n    assert.object(config, \"config\");\n    const { id, baseUrl, app, timeout, multiplexSessions = true, baseFilePath } = config;\n    assert.string(id, \"id\");\n    if (timeout !== undefined) {\n      assert.number(timeout, \"timeout\");\n    }\n    assert.boolean(multiplexSessions, \"multiplexSessions\");\n    if (baseFilePath !== undefined) {\n      assert.string(baseFilePath, \"baseFilePath\");\n    }\n\n    fs.ensureDirectoryForFile(fs.joinPaths(baseFilePath || fs.getDefaultDirectoryPath(), \"mongodb-realm\"));\n    // TODO: This used getSharedApp in the legacy SDK, but it's failing AppTests\n    this.internal = binding.App.getUncachedApp(\n      {\n        appId: id,\n        deviceInfo: App.deviceInfo,\n        transport: createNetworkTransport(),\n        localAppName: app?.name,\n        localAppVersion: app?.version,\n        baseUrl,\n        defaultRequestTimeoutMs: timeout ? binding.Int64.numToInt(timeout) : undefined,\n      },\n      {\n        baseFilePath: baseFilePath ? baseFilePath : fs.getDefaultDirectoryPath(),\n        metadataMode: binding.MetadataMode.NoEncryption,\n        userAgentBindingInfo: App.userAgent,\n        multiplexSessions,\n      },\n    );\n  }\n\n  /**\n   * @returns The app ID.\n   */\n  public get id(): string {\n    return this.internal.config.appId;\n  }\n\n  /**\n   * Log in a user.\n   * @param credentials - A credentials object describing the type of authentication provider and its parameters.\n   * @returns A promise that resolves to the logged in {@link User}.\n   * @throws An {@link Error} if the login failed.\n   */\n  public async logIn(credentials: Credentials): Promise<User<FunctionsFactoryType, CustomDataType>> {\n    const userInternal = await this.internal.logInWithCredentials(credentials.internal);\n    return User.get(userInternal, this);\n  }\n\n  /**\n   * Perform operations related to the email/password auth provider.\n   * @returns An instance of the email password authentication provider.\n   */\n  public get emailPasswordAuth(): EmailPasswordAuth {\n    // TODO: Add memoization\n    const internal = this.internal.usernamePasswordProviderClient();\n    return new EmailPasswordAuth(internal);\n  }\n\n  /**\n   * The last user to log in or being switched to.\n   * @returns A {@link User} object representing the currently logged in user. If no user is logged in, `null` is returned.\n   */\n  public get currentUser(): User<FunctionsFactoryType, CustomDataType> | null {\n    const currentUser = this.internal.currentUser;\n    return currentUser ? User.get(currentUser, this) : null;\n  }\n\n  /**\n   * All users that have logged into the device and have not been removed.\n   * @returns A mapping from user ID to user.\n   */\n  public get allUsers(): Readonly<Record<string, User<FunctionsFactoryType, CustomDataType>>> {\n    return Object.fromEntries(this.internal.allUsers.map((user) => [user.identity, User.get(user, this)]));\n  }\n\n  /**\n   * Switches the current user to the one specified in {@link user}.\n   * @throws an {@link Error} if the new user is logged out or removed.\n   * @param user - The user to switch to.\n   */\n  public switchUser(user: AnyUser): void {\n    this.internal.switchUser(user.internal);\n  }\n\n  /**\n   * Logs out and removes a user from the client.\n   * @returns A promise that resolves once the user has been logged out and removed from the app.\n   */\n  public async removeUser(user: AnyUser): Promise<void> {\n    await this.internal.removeUser(user.internal);\n  }\n\n  /**\n   * Delete the user.\n   * NOTE: This irrecoverably deletes the user from the device as well as the server!\n   * @returns A promise that resolves once the user has been deleted.\n   */\n  public async deleteUser(user: AnyUser): Promise<void> {\n    await this.internal.deleteUser(user.internal);\n  }\n\n  /**\n   * Adds a listener that will be fired on various user events.\n   * This includes login, logout, switching users, linking users and refreshing custom data.\n   * @param callback - A callback function that will be called when the event occurs.\n   */\n  public addListener(callback: AppChangeCallback): void {\n    this.listeners.add(callback);\n  }\n\n  /**\n   * Removes an event listener previously added via {@link App.addListener}.\n   * @param callback - The callback to remove.\n   */\n  public removeListener(callback: AppChangeCallback): void {\n    this.listeners.remove(callback);\n  }\n\n  /**\n   * Removes all event listeners previously added via {@link App.addListener}.\n   */\n  public removeAllListeners() {\n    this.listeners.removeAll();\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  AggregatePipelineStage,\n  AnyList,\n  AnyRealmObject,\n  AnyResults,\n  ApiKey,\n  ApiKeyAuth,\n  App,\n  AppChangeCallback,\n  AppConfiguration,\n  AppServicesFunction,\n  BSON,\n  BaseChangeEvent,\n  BaseConfiguration,\n  BaseObjectSchema,\n  BaseSubscriptionSet,\n  BaseSyncConfiguration,\n  CanonicalGeoPoint,\n  CanonicalGeoPolygon,\n  CanonicalObjectSchema,\n  CanonicalObjectSchemaProperty,\n  CanonicalPropertiesTypes,\n  CanonicalPropertySchema,\n  ChangeEvent,\n  ChangeEventId,\n  ClassHelpers,\n  ClassMap,\n  ClientResetAfterCallback,\n  ClientResetBeforeCallback,\n  ClientResetConfig,\n  ClientResetDiscardUnsyncedChangesConfiguration,\n  ClientResetFallbackCallback,\n  ClientResetManualConfiguration,\n  ClientResetMode,\n  ClientResetRecoverOrDiscardUnsyncedChangesConfiguration,\n  ClientResetRecoverUnsyncedChangesConfiguration,\n  Collection,\n  CollectionChangeCallback,\n  CollectionChangeSet,\n  CollectionPropertyTypeName,\n  CompensatingWriteError,\n  CompensatingWriteInfo,\n  Configuration,\n  ConfigurationWithSync,\n  ConfigurationWithoutSync,\n  ConnectionNotificationCallback,\n  ConnectionState,\n  Constructor,\n  CountOptions,\n  Credentials,\n  DefaultFunctionsFactory,\n  DefaultObject,\n  DefaultUserProfileData,\n  DeleteEvent,\n  DeleteResult,\n  Dictionary,\n  DictionaryChangeCallback,\n  DictionaryChangeSet,\n  Document,\n  DocumentKey,\n  DocumentNamespace,\n  DropDatabaseEvent,\n  DropEvent,\n  EmailPasswordAuth,\n  ErrorCallback,\n  Filter,\n  FindOneAndModifyOptions,\n  FindOneOptions,\n  FindOptions,\n  FlexibleSyncConfiguration,\n  GeoBox,\n  GeoCircle,\n  GeoPoint,\n  GeoPolygon,\n  GeoPosition,\n  INTERNAL,\n  IndexDecorator,\n  InitialSubscriptions,\n  InsertEvent,\n  InsertManyResult,\n  InsertOneResult,\n  InvalidateEvent,\n  List,\n  LocalAppConfiguration,\n  LogLevel,\n  LoggerCallback,\n  MapToDecorator,\n  MigrationCallback,\n  MongoDB,\n  MongoDBCollection,\n  MongoDBDatabase,\n  MutableSubscriptionSet,\n  NewDocument,\n  NumericLogLevel,\n  ObjectChangeCallback,\n  ObjectChangeSet,\n  ObjectSchema,\n  ObjectSchemaProperty,\n  OpenRealmBehaviorConfiguration,\n  OpenRealmBehaviorType,\n  OpenRealmTimeOutBehavior,\n  OperationType,\n  OrderedCollection,\n  PartitionSyncConfiguration,\n  PartitionValue,\n  PrimaryKey,\n  PrimitivePropertyTypeName,\n  ProgressDirection,\n  ProgressMode,\n  ProgressNotificationCallback,\n  ProgressRealmPromise,\n  PropertiesTypes,\n  PropertySchema,\n  PropertySchemaParseError,\n  PropertySchemaShorthand,\n  PropertySchemaStrict,\n  PropertyTypeName,\n  ProviderType,\n  ProxyType,\n  PushClient,\n  REALM,\n  RealmEvent,\n  RealmListenerCallback,\n  RealmListeners,\n  RealmObject,\n  RealmObjectConstructor,\n  RealmSet,\n  RelationshipPropertyTypeName,\n  RenameEvent,\n  ReplaceEvent,\n  Results,\n  SSLConfiguration,\n  SSLVerifyCallback,\n  SSLVerifyObject,\n  SchemaParseError,\n  SessionState,\n  SessionStopPolicy,\n  SortDescriptor,\n  Subscription,\n  SubscriptionOptions,\n  SubscriptionSet,\n  SubscriptionSetState,\n  SyncConfiguration,\n  SyncError,\n  SyncSession,\n  TypeAssertionError,\n  Types,\n  Unmanaged,\n  Update,\n  UpdateDescription,\n  UpdateEvent,\n  UpdateMode,\n  UpdateOptions,\n  UpdateResult,\n  User,\n  UserChangeCallback,\n  UserState,\n  WaitForSync,\n  assert,\n  binding,\n  defaultLogger,\n  defaultLoggerLevel,\n  extendDebug,\n  flags,\n  fromBindingLoggerLevelToLogLevel,\n  fromBindingRealmSchema,\n  fs,\n  index,\n  kmToRadians,\n  mapTo,\n  miToRadians,\n  normalizeObjectSchema,\n  normalizeRealmSchema,\n  safeGlobalThis,\n  toArrayBuffer,\n  toBindingLoggerLevel,\n  toBindingSchema,\n  toBindingSyncConfig,\n  validateConfiguration,\n  validateObjectSchema,\n  validateRealmSchema,\n} from \"./internal\";\n\nconst debug = extendDebug(\"Realm\");\n\ntype RealmSchemaExtra = Record<string, ObjectSchemaExtra | undefined>;\n\ntype ObjectSchemaExtra = {\n  constructor?: RealmObjectConstructor;\n  defaults: Record<string, unknown>;\n  // objectTypes: Record<string, unknown>;\n};\n\nexport type RealmEventName = \"change\" | \"schema\" | \"beforenotify\";\n\n/**\n * Asserts the event passed as string is a valid RealmEvent value.\n * @throws A {@link TypeAssertionError} if an unexpected name is passed via {@link name}.\n * @param name - The name of the event.\n * @internal\n */\nfunction assertRealmEvent(name: RealmEventName): asserts name is RealmEvent {\n  const values = Object.values(RealmEvent);\n  if (!values.includes(name as RealmEvent)) {\n    throw new TypeAssertionError(\"One of \" + values.join(\", \"), name);\n  }\n}\n\n/** @internal */\ntype InternalConfig = {\n  internal?: binding.Realm;\n  schemaExtras?: RealmSchemaExtra;\n  realmExists?: boolean;\n};\n\n/**\n * The Realm database.\n */\nexport class Realm {\n  public static App = App;\n  public static Auth = { EmailPasswordAuth, ApiKeyAuth };\n  public static BSON = BSON;\n  public static ClientResetMode = ClientResetMode;\n  public static Collection = Collection;\n  public static CompensatingWriteError = CompensatingWriteError;\n  public static ConnectionState = ConnectionState;\n  public static Credentials = Credentials;\n  public static Dictionary = Dictionary;\n  public static flags = flags;\n  public static index = index;\n  public static List = List;\n  public static mapTo = mapTo;\n  public static NumericLogLevel = NumericLogLevel;\n  public static Object = RealmObject;\n  public static OpenRealmBehaviorType = OpenRealmBehaviorType;\n  public static OpenRealmTimeOutBehavior = OpenRealmTimeOutBehavior;\n  public static OrderedCollection = OrderedCollection;\n  public static ProgressDirection = ProgressDirection;\n  public static ProgressMode = ProgressMode;\n  public static PropertySchemaParseError = PropertySchemaParseError;\n  public static ProviderType = ProviderType;\n  public static ProxyType = ProxyType;\n  public static Results = Results;\n  public static SchemaParseError = SchemaParseError;\n  public static SessionState = SessionState;\n  public static SessionStopPolicy = SessionStopPolicy;\n  public static Set = RealmSet;\n  public static SubscriptionSetState = SubscriptionSetState;\n  public static SyncError = SyncError;\n  public static Types = Types;\n  public static UpdateMode = UpdateMode;\n  public static User = User;\n  public static UserState = UserState;\n  public static WaitForSync = WaitForSync;\n\n  public static kmToRadians = kmToRadians;\n  public static miToRadians = miToRadians;\n\n  public static defaultPath = Realm.normalizePath(\"default.realm\");\n\n  private static internals = new Set<binding.WeakRef<binding.Realm>>();\n\n  /**\n   * Sets the log level.\n   * @param level - The log level to be used by the logger. The default value is `info`.\n   * @note The log level can be changed during the lifetime of the application.\n   * @since 12.0.0\n   */\n  static setLogLevel(level: LogLevel) {\n    const bindingLoggerLevel = toBindingLoggerLevel(level);\n    binding.Logger.setDefaultLevelThreshold(bindingLoggerLevel);\n  }\n\n  /**\n   * Sets the logger callback.\n   * @param loggerCallback - The callback invoked by the logger. The default callback uses `console.log`, `console.warn` and `console.error`, depending on the level of the message.\n   * @note The logger callback needs to be setup before opening the first realm.\n   * @since 12.0.0\n   */\n  static setLogger(loggerCallback: LoggerCallback) {\n    const logger = binding.Helpers.makeLogger((level, message) => {\n      loggerCallback(fromBindingLoggerLevelToLogLevel(level), message);\n    });\n    binding.Logger.setDefaultLogger(logger);\n  }\n\n  /**\n   * Clears the state by closing and deleting any Realm in the default directory and logout all users.\n   * NOTE: Not a part of the public API and it's primarily used from the library's tests.\n   * @private\n   */\n  public static clearTestState(): void {\n    assert(flags.ALLOW_CLEAR_TEST_STATE, \"Set the flags.ALLOW_CLEAR_TEST_STATE = true before calling this.\");\n    // Close any realms not already closed\n    for (const realmRef of Realm.internals) {\n      const realm = realmRef.deref();\n      if (realm && !realm.isClosed) {\n        realm.close();\n      }\n    }\n    Realm.internals.clear();\n    binding.RealmCoordinator.clearAllCaches();\n    binding.App.clearCachedApps();\n    ProgressRealmPromise.cancelAll();\n\n    // Delete all Realm files in the default directory\n    const defaultDirectoryPath = fs.getDefaultDirectoryPath();\n    fs.removeRealmFilesFromDirectory(defaultDirectoryPath);\n  }\n\n  /**\n   * Delete the Realm file for the given configuration.\n   * @param config - The configuration for the Realm being deleted.\n   * @throws An {@link Error} if anything in the provided {@link config} is invalid.\n   */\n  public static deleteFile(config: Configuration): void {\n    validateConfiguration(config);\n    const path = Realm.determinePath(config);\n    fs.removeFile(path);\n    fs.removeFile(path + \".lock\");\n    fs.removeFile(path + \".fresh.lock\");\n    fs.removeFile(path + \".note\");\n    fs.removeDirectory(path + \".management\");\n  }\n\n  /**\n   * Checks if the Realm already exists on disk.\n   * @param arg - The configuration for the Realm or the path to it.\n   * @throws An {@link Error} if anything in the provided {@link config} is invalid.\n   * @returns `true` if the Realm exists on the device, `false` if not.\n   */\n  public static exists(arg: Configuration | string = {}): boolean {\n    const config = typeof arg === \"string\" ? { path: arg } : arg;\n    validateConfiguration(config);\n    const path = Realm.determinePath(config);\n    return fs.exists(path);\n  }\n\n  /**\n   * Open a Realm asynchronously with a promise. If the Realm is synced, it will be fully\n   * synchronized before it is available.\n   * In the case of query-based sync, {@link Configuration.scheme | config.schema} is required. An exception will be\n   * thrown if {@link Configuration.scheme | config.schema} is not defined.\n   * @param arg - The configuration for the Realm or the path to it.\n   * @returns A promise that will be resolved with the Realm instance when it's available.\n   * @throws An {@link Error} if anything in the provided {@link arg} is invalid.\n   */\n  public static open(arg: Configuration | string = {}): ProgressRealmPromise {\n    const config = typeof arg === \"string\" ? { path: arg } : arg;\n    return new ProgressRealmPromise(config);\n  }\n\n  /**\n   * Get the current schema version of the Realm at the given path.\n   * @param path - The path to the file where the Realm database is stored.\n   * @param encryptionKey - Required only when accessing encrypted Realms.\n   * @throws An {@link Error} if passing an invalid or non-matching encryption key.\n   * @returns Version of the schema as an integer, or `-1` if no Realm exists at {@link path}.\n   */\n  public static schemaVersion(path: string, encryptionKey?: ArrayBuffer | ArrayBufferView): number {\n    const config: Configuration = { path };\n    const absolutePath = Realm.determinePath(config);\n    const schemaVersion = binding.Realm.getSchemaVersion({\n      path: absolutePath,\n      encryptionKey: Realm.determineEncryptionKey(encryptionKey),\n    });\n    return binding.Int64.intToNum(schemaVersion);\n  }\n\n  /**\n   * Creates a template object for a Realm model class where all optional fields are undefined\n   * and all required fields have the default value for the given data type, either the value\n   * set by the default property in the schema or the default value for the datatype if the schema\n   * doesn't specify one, i.e. 0, false and \"\".\n   * @param objectSchema - Schema describing the object that should be created.\n   */\n  public static createTemplateObject<T extends Record<string, unknown>>(objectSchema: ObjectSchema): T {\n    validateObjectSchema(objectSchema);\n    const normalizedSchema = normalizeObjectSchema(objectSchema);\n    const result: Record<string, unknown> = {};\n\n    for (const [key, property] of Object.entries(normalizedSchema.properties)) {\n      // If a default value is explicitly set, always set the property\n      if (typeof property.default !== \"undefined\") {\n        result[key] = property.default;\n        continue;\n      }\n      // if optional is set, it wil take precedence over any `?` set on the type parameter\n      if (property.optional) {\n        continue;\n      }\n\n      // Set the default value for all required primitive types.\n      // Lists are always treated as empty if not specified and references to objects are always optional\n      switch (property.type) {\n        case \"bool\":\n          result[key] = false;\n          break;\n        case \"int\":\n          result[key] = 0;\n          break;\n        case \"float\":\n          result[key] = 0.0;\n          break;\n        case \"double\":\n          result[key] = 0.0;\n          break;\n        case \"string\":\n          result[key] = \"\";\n          break;\n        case \"data\":\n          result[key] = new ArrayBuffer(0);\n          break;\n        case \"date\":\n          result[key] = new Date(0);\n          break;\n      }\n    }\n    return result as T;\n  }\n\n  /**\n   * Copy any Realm files  (i.e. `*.realm`) bundled with the application from the application\n   * directory into the application's documents directory, so that they can be opened and used\n   * by Realm. If the file already exists in the documents directory, it will not be\n   * overwritten, so this can safely be called multiple times.\n   *\n   * This should be called before opening the Realm, in order to move the bundled Realm\n   * files into a place where they can be written to.\n   * @example\n   * ```\n   * // Given a bundled file, example.realm, this will copy example.realm (and any other .realm files)\n   * // from the app bundle into the app's documents directory. If the file already exists, it will\n   * // not be overwritten, so it is safe to call this every time the app starts.\n   * Realm.copyBundledRealmFiles();\n   *\n   * const realm = await Realm.open({\n   * // This will open example.realm from the documents directory, with the bundled data in.\n   * path: \"example.realm\"\n   * });\n   * ```\n   *\n   * This is only implemented for React Native.\n   * @throws an {@link Error} If an I/O error occurred or method is not implemented.\n   */\n  public static copyBundledRealmFiles() {\n    fs.copyBundledRealmFiles();\n  }\n\n  /**\n   * TODO: Consider breaking this by ensuring a \".realm\" suffix (coordinating with other SDK teams in the process)\n   */\n  private static normalizePath(path: string | undefined): string {\n    if (typeof path === \"undefined\") {\n      return Realm.defaultPath;\n    } else if (path.length === 0) {\n      throw new Error(\"Unexpected empty path\");\n    } else if (fs.isAbsolutePath(path)) {\n      return path;\n    } else {\n      return fs.joinPaths(fs.getDefaultDirectoryPath(), path);\n    }\n  }\n\n  /**\n   * @note When the path is relative and the config contains a sync object, Core will replace any existing file extension\n   * or add the \".realm\" suffix.\n   */\n  private static determinePath(config: Configuration): string {\n    if (config.sync && !config.openSyncedRealmLocally) {\n      if (config.path && fs.isAbsolutePath(config.path)) {\n        return Realm.normalizePath(config.path);\n      } else {\n        const bindingSyncConfig = toBindingSyncConfig(config.sync);\n        return config.sync.user.internal.syncManager.pathForRealm(bindingSyncConfig, config.path);\n      }\n    } else {\n      return Realm.normalizePath(config.path);\n    }\n  }\n\n  private static determineEncryptionKey(encryptionKey: Configuration[\"encryptionKey\"]): ArrayBuffer | undefined {\n    if (typeof encryptionKey === \"undefined\") {\n      return encryptionKey;\n    } else {\n      return toArrayBuffer(encryptionKey, false);\n    }\n  }\n\n  private static extractSchemaExtras(schemas: CanonicalObjectSchema[]): RealmSchemaExtra {\n    return Object.fromEntries(\n      schemas.map((schema) => {\n        const defaults = Object.fromEntries(\n          Object.entries(schema.properties).map(([name, property]) => {\n            return [name, property.default];\n          }),\n        );\n        return [schema.name, { defaults, constructor: schema.ctor }];\n      }),\n    );\n  }\n\n  /** @internal */\n  public static transformConfig(config: Configuration): {\n    schemaExtras: RealmSchemaExtra;\n    bindingConfig: binding.RealmConfig_Relaxed;\n  } {\n    const normalizedSchema = config.schema && normalizeRealmSchema(config.schema);\n    const schemaExtras = Realm.extractSchemaExtras(normalizedSchema || []);\n    const path = Realm.determinePath(config);\n    const { fifoFilesFallbackPath, shouldCompact, inMemory } = config;\n    const bindingSchema = normalizedSchema && toBindingSchema(normalizedSchema);\n    return {\n      schemaExtras,\n      bindingConfig: {\n        path,\n        cache: true,\n        fifoFilesFallbackPath,\n        schema: bindingSchema,\n        inMemory: inMemory === true,\n        schemaMode: Realm.determineSchemaMode(config),\n        schemaVersion: config.schema\n          ? binding.Int64.numToInt(typeof config.schemaVersion === \"number\" ? config.schemaVersion : 0)\n          : undefined,\n        migrationFunction: config.onMigration ? Realm.wrapMigration(schemaExtras, config.onMigration) : undefined,\n        shouldCompactOnLaunchFunction: shouldCompact\n          ? (totalBytes, usedBytes) => {\n              return shouldCompact(Number(totalBytes), Number(usedBytes));\n            }\n          : undefined,\n        disableFormatUpgrade: config.disableFormatUpgrade,\n        encryptionKey: Realm.determineEncryptionKey(config.encryptionKey),\n        syncConfig: config.sync ? toBindingSyncConfig(config.sync) : undefined,\n        forceSyncHistory: config.openSyncedRealmLocally,\n        automaticallyHandleBacklinksInMigrations: config.migrationOptions?.resolveEmbeddedConstraints ?? false,\n      },\n    };\n  }\n\n  private static determineSchemaMode(config: Configuration): binding.SchemaMode | undefined {\n    const { readOnly, deleteRealmIfMigrationNeeded, onMigration, sync } = config;\n    assert(\n      !readOnly || !deleteRealmIfMigrationNeeded,\n      \"Cannot set 'deleteRealmIfMigrationNeeded' when 'readOnly' is set.\",\n    );\n    assert(\n      !onMigration || !deleteRealmIfMigrationNeeded,\n      \"Cannot set 'deleteRealmIfMigrationNeeded' when 'onMigration' is set.\",\n    );\n    if (readOnly) {\n      return binding.SchemaMode.Immutable;\n    } else if (deleteRealmIfMigrationNeeded) {\n      return binding.SchemaMode.SoftResetFile;\n    } else if (sync) {\n      return binding.SchemaMode.AdditiveExplicit;\n    } else {\n      return undefined;\n    }\n  }\n\n  private static wrapMigration(\n    schemaExtras: RealmSchemaExtra,\n    onMigration: MigrationCallback,\n  ): binding.RealmConfig_Relaxed[\"migrationFunction\"] {\n    return (oldRealmInternal: binding.Realm, newRealmInternal: binding.Realm) => {\n      try {\n        const oldRealm = new Realm(null, { internal: oldRealmInternal, schemaExtras });\n        const newRealm = new Realm(null, { internal: newRealmInternal, schemaExtras });\n        onMigration(oldRealm, newRealm);\n      } finally {\n        oldRealmInternal.close();\n        oldRealmInternal.$resetSharedPtr();\n        newRealmInternal.$resetSharedPtr();\n      }\n    };\n  }\n\n  /**\n   * The Realms's representation in the binding.\n   * @internal\n   */\n  public readonly internal: binding.Realm;\n\n  /**\n   * The sync session if this is a synced Realm\n   */\n  public readonly syncSession: SyncSession | null;\n\n  private schemaExtras: RealmSchemaExtra = {};\n  private classes: ClassMap;\n  private changeListeners = new RealmListeners(this, RealmEvent.Change);\n  private beforeNotifyListeners = new RealmListeners(this, RealmEvent.BeforeNotify);\n  private schemaListeners = new RealmListeners(this, RealmEvent.Schema);\n  /** @internal */\n  public currentUpdateMode: UpdateMode | undefined;\n\n  /**\n   * Create a new {@link Realm} instance, at the default path.\n   * @throws An {@link Error} when an incompatible synced Realm is opened.\n   */\n  constructor();\n  /**\n   * Create a new {@link Realm} instance at the provided {@link path}.\n   * @param path - Required when first creating the Realm.\n   * @throws An {@link Error} if the Realm cannot be opened at the provided {@link path}.\n   * @throws An {@link Error} when an incompatible synced Realm is opened.\n   */\n  constructor(path: string);\n  /**\n   * Create a new {@link Realm} instance using the provided {@link config}. If a Realm does not yet exist\n   * at {@link Configuration.path | config.path} (or {@link Realm.defaultPath} if not provided), then this constructor\n   * will create it with the provided {@link Configuration.schema | config.schema} (which is _required_ in this case).\n   * Otherwise, the instance will access the existing Realm from the file at that path.\n   * In this case, {@link Configuration.schema | config.schema} is _optional_ or not have changed, unless\n   * {@link Configuration.schemaVersion | config.schemaVersion} is incremented, in which case the Realm will be automatically\n   * migrated to use the new schema.\n   * In the case of query-based sync, {@link Configuration.schema | config.schema} is required. An exception will be\n   * thrown if {@link Configuration.schema | config.schema} is not defined.\n   * @param config - Required when first creating the Realm.\n   * @throws An {@link Error} if anything in the provided {@link config} is invalid.\n   * @throws An {@link Error} when an incompatible synced Realm is opened.\n   */\n  constructor(config: Configuration);\n  /** @internal */\n  constructor(config: Configuration | null, internalConfig: InternalConfig);\n  constructor(arg?: Configuration | string | null, internalConfig: InternalConfig = {}) {\n    const config = typeof arg === \"string\" ? { path: arg } : arg || {};\n    // Calling `Realm.exists()` before `binding.Realm.getSharedRealm()` is necessary to capture\n    // the correct value when this constructor was called since `binding.Realm.getSharedRealm()`\n    // will open the realm. This is needed when deciding whether to update initial subscriptions.\n    const realmExists = internalConfig.realmExists ?? Realm.exists(config);\n    if (arg !== null) {\n      assert(!internalConfig.schemaExtras, \"Expected either a configuration or schemaExtras\");\n      validateConfiguration(config);\n      const { bindingConfig, schemaExtras } = Realm.transformConfig(config);\n      debug(\"open\", bindingConfig);\n      this.schemaExtras = schemaExtras;\n\n      fs.ensureDirectoryForFile(bindingConfig.path);\n      this.internal = internalConfig.internal ?? binding.Realm.getSharedRealm(bindingConfig);\n      if (flags.ALLOW_CLEAR_TEST_STATE) {\n        Realm.internals.add(new binding.WeakRef(this.internal));\n      }\n\n      binding.Helpers.setBindingContext(this.internal, {\n        didChange: (r) => {\n          r.verifyOpen();\n          this.changeListeners.notify();\n        },\n        schemaDidChange: (r) => {\n          r.verifyOpen();\n          this.classes = new ClassMap(this, this.internal.schema, this.schema);\n          this.schemaListeners.notify(this.schema);\n        },\n        beforeNotify: (r) => {\n          r.verifyOpen();\n          this.beforeNotifyListeners.notify();\n        },\n      });\n    } else {\n      const { internal, schemaExtras } = internalConfig;\n      assert.instanceOf(internal, binding.Realm, \"internal\");\n      this.internal = internal;\n      this.schemaExtras = schemaExtras || {};\n    }\n\n    Object.defineProperty(this, \"classes\", {\n      enumerable: false,\n      configurable: false,\n      writable: true,\n    });\n    Object.defineProperty(this, \"internal\", {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n    });\n\n    this.classes = new ClassMap(this, this.internal.schema, this.schema);\n\n    const syncSession = this.internal.syncSession;\n    this.syncSession = syncSession ? new SyncSession(syncSession) : null;\n\n    const initialSubscriptions = config.sync?.initialSubscriptions;\n    if (initialSubscriptions && !config.openSyncedRealmLocally) {\n      // Do not call `Realm.exists()` here in case the realm has been opened by this point in time.\n      this.handleInitialSubscriptions(initialSubscriptions, realmExists);\n    }\n  }\n\n  /**\n   * Indicates if this Realm contains any objects.\n   * @returns `true` if empty, `false` otherwise.\n   * @readonly\n   * @since 1.10.0\n   */\n  get isEmpty(): boolean {\n    return binding.Helpers.isEmptyRealm(this.internal);\n  }\n\n  /**\n   * The path to the file where this Realm is stored.\n   * @returns A string containing the path to the file where this Realm is stored.\n   * @readonly\n   * @since 0.12.0\n   */\n  get path(): string {\n    return this.internal.config.path;\n  }\n\n  /**\n   * Indicates if this Realm was opened as read-only.\n   * @returns `true` if this Realm is read-only, `false` otherwise.\n   * @readonly\n   * @since 0.12.0\n   */\n  get isReadOnly(): boolean {\n    return this.internal.config.schemaMode === binding.SchemaMode.Immutable;\n  }\n\n  /**\n   * Indicates if this Realm was opened in-memory.\n   * @returns `true` if this Realm is in-memory, `false` otherwise.\n   * @readonly\n   */\n  get isInMemory(): boolean {\n    return this.internal.config.inMemory;\n  }\n\n  /**\n   * A normalized representation of the schema provided in the {@link Configuration} when this Realm was constructed.\n   * @returns An array of {@link CanonicalObjectSchema} describing all objects in this Realm.\n   * @readonly\n   * @since 0.12.0\n   */\n  get schema(): CanonicalObjectSchema[] {\n    const schemas = fromBindingRealmSchema(this.internal.schema);\n    // Stitch in the constructors and defaults stored in this.schemaExtras\n    for (const objectSchema of schemas) {\n      const extras = this.schemaExtras[objectSchema.name];\n      if (extras) {\n        objectSchema.ctor = extras.constructor;\n      }\n      for (const property of Object.values(objectSchema.properties)) {\n        property.default = extras ? extras.defaults[property.name] : undefined;\n      }\n    }\n    return schemas;\n  }\n\n  /**\n   * The current schema version of the Realm.\n   * @returns The schema version of this Realm, as a `number`.\n   * @readonly\n   * @since 0.12.0\n   */\n  get schemaVersion(): number {\n    return Number(this.internal.schemaVersion);\n  }\n\n  /**\n   * Indicates if this Realm is in a write transaction.\n   * @returns `true` if in a write transaction, `false` otherwise.\n   * @readonly\n   * @since 1.10.3\n   */\n  get isInTransaction(): boolean {\n    // TODO: Consider keeping a local state in JS for this\n    return this.internal.isInTransaction;\n  }\n\n  /**\n   * Indicates if this Realm has been closed.\n   * @returns `true` if closed, `false` otherwise.\n   * @readonly\n   * @since 2.1.0\n   */\n  get isClosed(): boolean {\n    // TODO: Consider keeping a local state in JS for this\n    return this.internal.isClosed;\n  }\n\n  /**\n   * The latest set of flexible sync subscriptions.\n   * @returns A {@link SubscriptionSet} object.\n   * @throws An {@link Error} if flexible sync is not enabled for this app.\n   */\n  get subscriptions(): SubscriptionSet {\n    const { syncConfig } = this.internal.config;\n    assert(\n      syncConfig,\n      \"`subscriptions` can only be accessed if flexible sync is enabled, but sync is \" +\n        \"currently disabled for your app. Add a flexible sync config when opening the \" +\n        \"Realm, for example: { sync: { user, flexible: true } }.\",\n    );\n    assert(\n      syncConfig.flxSyncRequested,\n      \"`subscriptions` can only be accessed if flexible sync is enabled, but partition \" +\n        \"based sync is currently enabled for your Realm. Modify your sync config to remove any `partitionValue` \" +\n        \"and enable flexible sync, for example: { sync: { user, flexible: true } }\",\n    );\n\n    return new SubscriptionSet(this, this.internal.latestSubscriptionSet);\n  }\n\n  /**\n   * Closes this Realm so it may be re-opened with a newer schema version.\n   * All objects and collections from this Realm are no longer valid after calling this method.\n   * The method is idempotent.\n   */\n  close(): void {\n    this.internal.close();\n  }\n\n  // TODO: Support embedded objects\n  // TODO: Rollback by deleting the object if any property assignment fails (fixing #2638)\n  /**\n   * Create a new {@link RealmObject} of the given type and with the specified properties. For objects marked asymmetric,\n   * `undefined` is returned. The API for asymmetric objects is subject to changes in the future.\n   * @param type - The type of Realm object to create.\n   * @param values - Property values for all required properties without a\n   * default value.\n   * @param mode Optional update mode. The default is `UpdateMode.Never`.\n   * @returns A {@link RealmObject} or `undefined` if the object is asymmetric.\n   */\n  create<T = DefaultObject>(\n    type: string,\n    values: Partial<T> | Partial<Unmanaged<T>>,\n    mode?: UpdateMode.Never | UpdateMode.All | UpdateMode.Modified | boolean,\n  ): RealmObject<T> & T;\n  create<T extends AnyRealmObject>(\n    type: Constructor<T>,\n    values: Partial<T> | Partial<Unmanaged<T>>,\n    mode?: UpdateMode.Never | UpdateMode.All | UpdateMode.Modified | boolean,\n  ): T;\n  create<T extends AnyRealmObject>(\n    type: string | Constructor<T>,\n    values: DefaultObject,\n    mode: UpdateMode | boolean = UpdateMode.Never,\n  ): RealmObject<DefaultObject, never> | undefined {\n    // Supporting a boolean overload for mode\n    if (mode === true) {\n      mode = UpdateMode.All;\n    } else if (mode === false) {\n      mode = UpdateMode.Never;\n    }\n    // Implements https://github.com/realm/realm-js/blob/v11/src/js_realm.hpp#L1260-L1321\n    if (values instanceof RealmObject && !values[INTERNAL]) {\n      throw new Error(\"Cannot create an object from a detached RealmObject instance\");\n    }\n    if (!Object.values(UpdateMode).includes(mode)) {\n      throw new Error(\n        `Unsupported 'updateMode'. Only '${UpdateMode.Never}', '${UpdateMode.Modified}' or '${UpdateMode.All}' is supported.`,\n      );\n    }\n    this.internal.verifyOpen();\n    const helpers = this.classes.getHelpers(type);\n\n    this.currentUpdateMode = mode;\n    let realmObject: RealmObject;\n    try {\n      realmObject = RealmObject.create(this, values, mode, { helpers });\n    } finally {\n      this.currentUpdateMode = undefined;\n    }\n\n    return isAsymmetric(helpers.objectSchema) ? undefined : realmObject;\n  }\n\n  //FIXME: any should not be used, but we are staying compatible with previous versions\n  /**\n   * Deletes the provided Realm object, or each one inside the provided collection.\n   * @param subject - The Realm object to delete, or a collection containing multiple Realm objects to delete.\n   */\n  delete(subject: AnyRealmObject | AnyRealmObject[] | AnyList | AnyResults | any): void {\n    assert.inTransaction(this, \"Can only delete objects within a transaction.\");\n    assert.object(subject, \"subject\");\n    if (subject instanceof RealmObject) {\n      assert.isSameRealm(subject[REALM].internal, this.internal, \"Can't delete an object from another Realm\");\n      const { objectSchema } = this.classes.getHelpers(subject);\n      const obj = subject[INTERNAL];\n      assert.isValid(\n        obj,\n        \"Object is invalid. Either it has been previously deleted or the Realm it belongs to has been closed.\",\n      );\n      const table = binding.Helpers.getTable(this.internal, objectSchema.tableKey);\n      table.removeObject(obj.key);\n    } else if (subject instanceof List) {\n      subject.internal.deleteAll();\n    } else if (subject instanceof Results) {\n      subject.internal.clear();\n    } else if (Array.isArray(subject) || Symbol.iterator in subject) {\n      //@ts-expect-error the above check is good enough\n      for (const object of subject) {\n        assert.instanceOf(object, RealmObject);\n        assert.isSameRealm(object[REALM].internal, this.internal, \"Can't delete an object from another Realm\");\n        const { objectSchema } = this.classes.getHelpers(object);\n        const table = binding.Helpers.getTable(this.internal, objectSchema.tableKey);\n        table.removeObject(object[INTERNAL].key);\n      }\n    } else {\n      throw new Error(\"Can only delete objects, lists and results.\");\n    }\n  }\n\n  /**\n   * Deletes a Realm model, including all of its objects.\n   * If called outside a migration function, {@link schema} and {@link schemaVersion} are updated.\n   * @param name - The model name.\n   */\n  deleteModel(name: string): void {\n    assert.inTransaction(this, \"Can only delete objects within a transaction.\");\n    binding.Helpers.deleteDataForObject(this.internal, name);\n    if (!this.internal.isInMigration) {\n      const newSchema = this.internal.schema.filter((objectSchema) => objectSchema.name !== name);\n      this.internal.updateSchema(\n        newSchema,\n        binding.Int64.add(this.internal.schemaVersion, binding.Int64.numToInt(1)),\n        null,\n        null,\n        true,\n      );\n    }\n  }\n\n  /**\n   * **WARNING:** This will delete **all** objects in the Realm!\n   */\n  deleteAll(): void {\n    assert.inTransaction(this, \"Can only delete objects within a transaction.\");\n    for (const objectSchema of this.internal.schema) {\n      const table = binding.Helpers.getTable(this.internal, objectSchema.tableKey);\n      table.clear();\n    }\n  }\n\n  /**\n   * Searches for a Realm object by its primary key.\n   * @param type - The type of Realm object to search for.\n   * @param primaryKey - The primary key value of the object to search for.\n   * @throws An {@link Error} if type passed into this method is invalid, or if the object type did\n   * not have a {@link primaryKey} specified in the schema, or if it was marked asymmetric.\n   * @returns A {@link RealmObject} or `null` if no object is found.\n   * @since 0.14.0\n   */\n  objectForPrimaryKey<T = DefaultObject>(type: string, primaryKey: T[keyof T]): (RealmObject<T> & T) | null;\n  objectForPrimaryKey<T extends AnyRealmObject>(type: Constructor<T>, primaryKey: T[keyof T]): T | null;\n  objectForPrimaryKey<T extends AnyRealmObject>(type: string | Constructor<T>, primaryKey: unknown): T | null {\n    // Implements https://github.com/realm/realm-js/blob/v11/src/js_realm.hpp#L1240-L1258\n    const { objectSchema, properties, wrapObject } = this.classes.getHelpers(type);\n    if (!objectSchema.primaryKey) {\n      throw new Error(`Expected a primary key on '${objectSchema.name}'`);\n    }\n    if (isAsymmetric(objectSchema)) {\n      throw new Error(\"You cannot query an asymmetric object.\");\n    }\n    const table = binding.Helpers.getTable(this.internal, objectSchema.tableKey);\n    const value = properties.get(objectSchema.primaryKey).toBinding(primaryKey);\n    try {\n      const objKey = table.findPrimaryKey(value);\n      if (binding.isEmptyObjKey(objKey)) {\n        return null;\n      } else {\n        const obj = table.getObject(objKey);\n        return wrapObject(obj) as T;\n      }\n    } catch (err) {\n      // TODO: Match on something else than the error message, when exposed by the binding\n      if (err instanceof Error && err.message.startsWith(\"No object with key\")) {\n        throw new Error(`No '${objectSchema.name}' with key '${primaryKey}'`);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Returns all objects of the given {@link type} in the Realm.\n   * @param type - The type of Realm object to search for.\n   * @param objectKey - The object key of the Realm object to search for.\n   * @throws An {@link Error} if type passed into this method is invalid or if the type is marked embedded or asymmetric.\n   * @returns A {@link RealmObject} or `undefined` if the object key is not found.\n   * @internal\n   */\n  _objectForObjectKey<T = DefaultObject>(type: string, objectKey: string): (RealmObject<T> & T) | undefined;\n  _objectForObjectKey<T extends RealmObject>(type: Constructor<T>, objectKey: string): T | undefined;\n  _objectForObjectKey<T extends RealmObject>(type: string | Constructor<T>, objectKey: string): T | undefined {\n    const { objectSchema, wrapObject } = this.classes.getHelpers(type);\n    if (isEmbedded(objectSchema)) {\n      throw new Error(\"You cannot query an embedded object.\");\n    } else if (isAsymmetric(objectSchema)) {\n      throw new Error(\"You cannot query an asymmetric object.\");\n    }\n\n    assert.numericString(objectKey);\n\n    const table = binding.Helpers.getTable(this.internal, objectSchema.tableKey);\n    try {\n      const objKey = binding.stringToObjKey(objectKey);\n      const obj = table.tryGetObject(objKey);\n      const result = obj && (wrapObject(obj) as T);\n      return result === null ? undefined : result;\n    } catch (err) {\n      if (err instanceof binding.InvalidObjKey) {\n        return undefined;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Returns all objects of the given {@link type} in the Realm.\n   * @param type - The type of Realm objects to retrieve.\n   * @throws An {@link Error} if type passed into this method is invalid or if the type is marked embedded or asymmetric.\n   * @returns Results that will live-update as objects are created, modified, and destroyed.\n   */\n  objects<T = DefaultObject>(type: string): Results<RealmObject<T> & T>;\n  objects<T extends AnyRealmObject = RealmObject & DefaultObject>(type: Constructor<T>): Results<T>;\n  objects<T extends AnyRealmObject>(type: string | Constructor<T>): Results<T> {\n    const { objectSchema, wrapObject } = this.classes.getHelpers(type);\n    if (isEmbedded(objectSchema)) {\n      throw new Error(\"You cannot query an embedded object.\");\n    } else if (isAsymmetric(objectSchema)) {\n      throw new Error(\"You cannot query an asymmetric object.\");\n    }\n\n    const table = binding.Helpers.getTable(this.internal, objectSchema.tableKey);\n    const results = binding.Results.fromTable(this.internal, table);\n    return new Results<T>(this, results, {\n      get(results: binding.Results, index: number) {\n        return results.getObj(index);\n      },\n      fromBinding: wrapObject,\n      toBinding(value: unknown) {\n        assert.instanceOf(value, RealmObject);\n        return value[INTERNAL];\n      },\n    });\n  }\n\n  /**\n   * Add a listener {@link callback} for the specified {@link eventName}.\n   * @param eventName - The name of event that should cause the callback to be called.\n   * @param callback - Function to be called when a change event occurs.\n   * Each callback will only be called once per event, regardless of the number of times\n   * it was added.\n   * @param callback.realm - The Realm in which the change event occurred.\n   * @param callback.name - The name of the event that occurred.\n   * @param callback.schema - The schema of the Realm file when the event occurred.\n   * @throws An {@link Error} if an invalid event {@link eventName} is supplied, if Realm is closed or if {@link callback} is not a function.\n   */\n  addListener(eventName: RealmEventName, callback: RealmListenerCallback): void {\n    assert.open(this);\n    assert.function(callback);\n    if (eventName === \"change\") {\n      this.changeListeners.add(callback);\n    } else if (eventName === \"schema\") {\n      this.schemaListeners.add(callback);\n    } else if (eventName === \"beforenotify\") {\n      this.beforeNotifyListeners.add(callback);\n    } else {\n      throw new Error(`Unknown event name '${eventName}': only 'change', 'schema' and 'beforenotify' are supported.`);\n    }\n  }\n\n  /**\n   * Remove the listener {@link callback} for the specified event {@link eventName}.\n   * @param eventName - The event name.\n   * @param callback - Function that was previously added as a listener for this event through the {@link addListener} method.\n   * @throws an {@link Error} If an invalid event {@link eventName} is supplied, if Realm is closed or if {@link callback} is not a function.\n   */\n  removeListener(eventName: RealmEventName, callback: RealmListenerCallback): void {\n    assert.open(this);\n    assert.function(callback);\n    assertRealmEvent(eventName);\n    if (eventName === RealmEvent.Change) {\n      this.changeListeners.remove(callback);\n    } else if (eventName === RealmEvent.Schema) {\n      this.schemaListeners.remove(callback);\n    } else if (eventName === RealmEvent.BeforeNotify) {\n      this.beforeNotifyListeners.remove(callback);\n    } else {\n      assert.never(eventName, \"eventName\");\n    }\n  }\n\n  /**\n   * Remove all event listeners (restricted to the event {@link eventName}, if provided).\n   * @param eventName - The name of the event whose listeners should be removed.\n   * @throws An {@link Error} when invalid event {@link eventName} is supplied.\n   */\n  removeAllListeners(eventName?: RealmEventName): void {\n    assert.open(this);\n    if (typeof eventName === \"undefined\") {\n      this.changeListeners.removeAll();\n      this.schemaListeners.removeAll();\n      this.beforeNotifyListeners.removeAll();\n    } else {\n      assert.string(eventName, \"eventName\");\n      assertRealmEvent(eventName);\n      if (eventName === RealmEvent.Change) {\n        this.changeListeners.removeAll();\n      } else if (eventName === RealmEvent.Schema) {\n        this.schemaListeners.removeAll();\n      } else if (eventName === RealmEvent.BeforeNotify) {\n        this.beforeNotifyListeners.removeAll();\n      } else {\n        assert.never(eventName, \"eventName\");\n      }\n    }\n  }\n\n  /**\n   * Synchronously call the provided {@link callback} inside a write transaction. If an exception happens inside a transaction,\n   * you’ll lose the changes in that transaction, but the Realm itself won’t be affected (or corrupted).\n   * More precisely, {@link beginTransaction} and {@link commitTransaction} will be called\n   * automatically. If any exception is thrown during the transaction {@link cancelTransaction} will\n   * be called instead of {@link commitTransaction} and the exception will be re-thrown to the caller of {@link write}.\n   *\n   * Nested transactions (calling {@link write} within {@link write}) is not possible.\n   * @param callback - Function to be called inside a write transaction.\n   * @returns Returned value from the callback.\n   */\n  write<T>(callback: () => T): T {\n    let result = undefined;\n    this.internal.beginTransaction();\n    try {\n      result = callback();\n    } catch (err) {\n      this.internal.cancelTransaction();\n      throw err;\n    }\n    this.internal.commitTransaction();\n    return result;\n  }\n\n  /**\n   * Initiate a write transaction.\n   *\n   * When doing a transaction, it is highly recommended to do error handling.\n   * If you don't handle errors, your data might become inconsistent. Error handling\n   * will often involve canceling the transaction.\n   * @throws An {@link Error} if already in write transaction\n   * @see {@link cancelTransaction}\n   * @see {@link commitTransaction}\n   * @example\n   * realm.beginTransaction();\n   * try {\n   *   realm.create('Person', { name: 'Arthur Dent',  origin: 'Earth' });\n   *   realm.create('Person', { name: 'Ford Prefect', origin: 'Betelgeuse Five' });\n   *   realm.commitTransaction();\n   * } catch (e) {\n   *   realm.cancelTransaction();\n   *   throw e;\n   * }\n   */\n  beginTransaction(): void {\n    this.internal.beginTransaction();\n  }\n\n  /**\n   * Commit a write transaction.\n   * @see {@link beginTransaction}\n   */\n  commitTransaction(): void {\n    this.internal.commitTransaction();\n  }\n\n  /**\n   * Cancel a write transaction.\n   * @see {@link beginTransaction}\n   */\n  cancelTransaction(): void {\n    this.internal.cancelTransaction();\n  }\n\n  /**\n   * Replaces all string columns in this Realm with a string enumeration column and compacts the\n   * database file.\n   *\n   * Cannot be called from a write transaction.\n   *\n   * Compaction will not occur if other {@link Realm} instances exist.\n   *\n   * While compaction is in progress, attempts by other threads or processes to open the database will\n   * wait.\n   *\n   * Be warned that resource requirements for compaction is proportional to the amount of live data in\n   * the database. Compaction works by writing the database contents to a temporary database file and\n   * then replacing the database with the temporary one.\n   * @returns `true` if compaction succeeds, `false` if not.\n   */\n  compact(): boolean {\n    assert.outTransaction(this, \"Cannot compact a Realm within a transaction.\");\n    return this.internal.compact();\n  }\n\n  /**\n   * Writes a compacted copy of the Realm with the given configuration.\n   *\n   * The destination file cannot already exist.\n   * All conversions between synced and non-synced Realms are supported, and will be\n   * performed according to the {@link config} parameter, which describes the desired output.\n   *\n   * Note that if this method is called from within a write transaction, the current data is written,\n   * not the data from the point when the previous write transaction was committed.\n   * @param config - Realm configuration that describes the output realm.\n   */\n  writeCopyTo(config: Configuration): void {\n    assert.outTransaction(this, \"Can only convert Realms outside a transaction.\");\n    validateConfiguration(config);\n    const { bindingConfig } = Realm.transformConfig(config);\n    this.internal.convert(bindingConfig);\n  }\n\n  /**\n   * Update the schema of the Realm.\n   * @param schema The schema which the Realm should be updated to use.\n   * @internal\n   */\n  _updateSchema(schema: ObjectSchema[]): void {\n    validateRealmSchema(schema);\n    const normalizedSchema = normalizeRealmSchema(schema);\n    const bindingSchema = toBindingSchema(normalizedSchema);\n    if (!this.isInTransaction) {\n      throw new Error(\"Can only create object schema within a transaction.\");\n    }\n    this.internal.updateSchema(\n      bindingSchema,\n      binding.Int64.add(this.internal.schemaVersion, binding.Int64.numToInt(1)),\n      null,\n      null,\n      true,\n    );\n\n    // Note: The schema change listener is fired immediately after the call to\n    //       `this.internal.updateSchema()` (thus before `_updateSchema()` has\n    //       returned). Therefore, `this.classes` is updated in the `schemaDidChange`\n    //       callback and not here.\n  }\n\n  /** @internal */\n  public getClassHelpers<T>(\n    arg: string | binding.TableKey | RealmObject<T> | Constructor<RealmObject<T>>,\n  ): ClassHelpers {\n    return this.classes.getHelpers<T>(arg);\n  }\n\n  /**\n   * Update subscriptions with the initial subscriptions if needed.\n   * @param initialSubscriptions The initial subscriptions.\n   * @param realmExists Whether the realm already exists.\n   */\n  private handleInitialSubscriptions(initialSubscriptions: InitialSubscriptions, realmExists: boolean): void {\n    const shouldUpdateSubscriptions = initialSubscriptions.rerunOnOpen || !realmExists;\n    if (shouldUpdateSubscriptions) {\n      debug(\"handling initial subscriptions, %O\", { rerunOnOpen: initialSubscriptions.rerunOnOpen, realmExists });\n      this.subscriptions.updateNoWait(initialSubscriptions.update);\n    }\n  }\n}\n\n/**\n * @param objectSchema - The schema of the object.\n * @returns `true` if the object is marked for asymmetric sync, otherwise `false`.\n */\nfunction isAsymmetric(objectSchema: binding.ObjectSchema): boolean {\n  return objectSchema.tableType === binding.TableType.TopLevelAsymmetric;\n}\n\n/**\n * @param objectSchema - The schema of the object.\n * @returns `true` if the object is marked as embedded, otherwise `false`.\n */\nfunction isEmbedded(objectSchema: binding.ObjectSchema): boolean {\n  return objectSchema.tableType === binding.TableType.Embedded;\n}\n\n// Declare the Realm namespace for backwards compatibility\n// This declaration needs to happen in the same file which declares \"Realm\"\n// @see https://www.typescriptlang.org/docs/handbook/declaration-merging.html#merging-namespaces-with-classes-functions-and-enums\n\n// We need these type aliases because of https://github.com/Swatinem/rollup-plugin-dts/issues/223\n// We cannot move this to a different file and rely on module declarations because of https://github.com/Swatinem/rollup-plugin-dts/issues/168\n\ntype AppType<\n  FunctionsFactoryType extends DefaultFunctionsFactory = DefaultFunctionsFactory,\n  CustomDataType extends DefaultObject = DefaultObject,\n> = App<FunctionsFactoryType, CustomDataType>;\ntype BSONType = typeof BSON;\ntype ClientResetModeType = ClientResetMode;\ntype CollectionType<\n  KeyType = unknown,\n  ValueType = unknown,\n  EntryType = [KeyType, ValueType],\n  T = ValueType,\n  ChangeCallbackType = unknown,\n> = Collection<KeyType, ValueType, EntryType, T, ChangeCallbackType>;\ntype CompensatingWriteErrorType = CompensatingWriteError;\ntype ConnectionStateType = ConnectionState;\ntype CredentialsType = Credentials;\ntype DictionaryType<T> = Dictionary<T>;\ntype IndexDecoratorType = IndexDecorator;\ntype ListType<T = unknown> = List<T>;\ntype MapToDecoratorType = MapToDecorator;\ntype Mixed = unknown;\ntype ObjectType = string | RealmObjectConstructor;\ntype OpenRealmBehaviorTypeType = OpenRealmBehaviorType;\ntype OpenRealmTimeOutBehaviorType = OpenRealmTimeOutBehavior;\ntype ProgressDirectionType = ProgressDirection;\ntype ProgressModeType = ProgressMode;\ntype PropertySchemaParseErrorType = PropertySchemaParseError;\ntype ProviderTypeType = ProviderType;\ntype ProxyTypeType = ProxyType;\ntype ResultsType<T = unknown> = Results<T>;\ntype SchemaParseErrorType = SchemaParseError;\ntype SessionStateType = SessionState;\ntype SessionStopPolicyType = SessionStopPolicy;\ntype SetType<T = unknown> = RealmSet<T>;\ntype SSLConfigurationType = SSLConfiguration;\ntype SSLVerifyCallbackType = SSLVerifyCallback;\ntype SSLVerifyObjectType = SSLVerifyObject;\ntype SyncErrorType = SyncError;\ntype SyncSessionType = SyncSession;\ntype TypesType = typeof Types;\ntype UpdateModeType = UpdateMode;\ntype UserStateType = UserState;\ntype UserType<\n  UserFunctionsType extends DefaultFunctionsFactory = DefaultFunctionsFactory,\n  UserCustomDataType extends DefaultObject = DefaultObject,\n  UserProfileDataType extends DefaultUserProfileData = DefaultUserProfileData,\n> = User<UserFunctionsType, UserCustomDataType, UserProfileDataType>;\n\ntype BaseSubscriptionSetType = BaseSubscriptionSet;\ntype LogLevelType = LogLevel;\ntype NumericLogLevelType = NumericLogLevel;\ntype MutableSubscriptionSetType = MutableSubscriptionSet;\ntype PartitionValueType = PartitionValue;\ntype SubscriptionOptionsType = SubscriptionOptions;\ntype SubscriptionSetType = SubscriptionSet;\ntype SubscriptionSetStateType = SubscriptionSetState;\ntype SubscriptionType = Subscription;\n\ntype ObjectIdType = BSON.ObjectId;\ntype Decimal128Type = BSON.Decimal128;\ntype UUIDType = BSON.UUID;\n\ntype ApiKeyType = ApiKey;\ntype EmailPasswordAuthType = EmailPasswordAuth;\ntype ApiKeyAuthType = ApiKeyAuth;\n\ntype AggregatePipelineStageType = AggregatePipelineStage;\ntype BaseChangeEventType<T extends OperationType> = BaseChangeEvent<T>;\ntype ChangeEventType<T extends Document> = ChangeEvent<T>;\ntype ChangeEventIdType = ChangeEventId;\ntype CountOptionsType = CountOptions;\ntype DeleteEventType<T extends Document> = DeleteEvent<T>;\ntype DeleteResultType = DeleteResult;\ntype DocumentType<IdType> = Document<IdType>;\ntype DocumentKeyType<IdType> = DocumentKey<IdType>;\ntype DocumentNamespaceType = DocumentNamespace;\ntype DropDatabaseEventType = DropDatabaseEvent;\ntype DropEventType = DropEvent;\ntype FilterType = Filter;\ntype FindOneAndModifyOptionsType = FindOneAndModifyOptions;\ntype FindOneOptionsType = FindOneOptions;\ntype FindOptionsType = FindOptions;\ntype InsertEventType<T extends Document> = InsertEvent<T>;\ntype InsertManyResultType<IdType> = InsertManyResult<IdType>;\ntype InsertOneResultType<IdType> = InsertOneResult<IdType>;\ntype InvalidateEventType = InvalidateEvent;\ntype MongoDBType = MongoDB;\ntype MongoDBCollectionType<T extends Document> = MongoDBCollection<T>;\ntype MongoDBDatabaseType = MongoDBDatabase;\ntype NewDocumentType<T extends Document> = NewDocument<T>;\ntype OperationTypeType = OperationType;\ntype OrderedCollectionType<T = unknown> = OrderedCollection<T>;\ntype RenameEventType = RenameEvent;\ntype ReplaceEventType<T extends Document> = ReplaceEvent<T>;\ntype UpdateType = Update;\ntype UpdateDescriptionType = UpdateDescription;\ntype UpdateEventType<T extends Document> = UpdateEvent<T>;\ntype UpdateOptionsType = UpdateOptions;\ntype UpdateResultType<IdType> = UpdateResult<IdType>;\ntype WaitForSyncType = WaitForSync;\n\ntype GlobalDate = Date;\n\n// IMPORTANT: This needs to match the namespace below!\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport declare namespace Realm {\n  // TODO: Decide if we want to deprecate this as well\n  export type Object<T = DefaultObject> = RealmObject<T>;\n  export {\n    // Pure type exports below\n    AppType as App,\n    AppChangeCallback,\n    AppConfiguration,\n    AppServicesFunction,\n    /** @deprecated Will be removed in v13.0.0. Please use {@link AppServicesFunction} */\n    AppServicesFunction as RealmFunction,\n    BaseConfiguration,\n    BaseObjectSchema,\n    BaseSyncConfiguration,\n    BSONType as BSON,\n    CanonicalObjectSchema,\n    /** @deprecated Will be removed in v13.0.0. Please use {@link CanonicalPropertySchema} */\n    CanonicalObjectSchemaProperty,\n    CanonicalPropertySchema,\n    CanonicalPropertiesTypes,\n    ClientResetModeType as ClientResetMode,\n    ClientResetFallbackCallback,\n    ClientResetBeforeCallback,\n    ClientResetAfterCallback,\n    ClientResetManualConfiguration,\n    ClientResetDiscardUnsyncedChangesConfiguration,\n    ClientResetRecoverUnsyncedChangesConfiguration,\n    /** @deprecated Will be removed in v13.0.0. Please use {@link ClientResetRecoverUnsyncedChangesConfiguration} */\n    ClientResetRecoverUnsyncedChangesConfiguration as ClientResetRecoveryConfiguration,\n    ClientResetRecoverOrDiscardUnsyncedChangesConfiguration,\n    ClientResetConfig,\n    CollectionChangeCallback,\n    CollectionChangeSet,\n    CollectionPropertyTypeName,\n    CollectionType as Collection,\n    CompensatingWriteErrorType as CompensatingWriteError,\n    CompensatingWriteInfo,\n    ConfigurationWithoutSync,\n    ConfigurationWithSync,\n    Configuration,\n    ConnectionNotificationCallback,\n    ConnectionStateType as ConnectionState,\n    CredentialsType as Credentials,\n    DefaultFunctionsFactory,\n    DefaultUserProfileData,\n    DictionaryType as Dictionary,\n    DictionaryChangeCallback,\n    DictionaryChangeSet,\n    ErrorCallback,\n    FlexibleSyncConfiguration,\n    IndexDecoratorType as IndexDecorator,\n    ListType as List,\n    LocalAppConfiguration,\n    MapToDecoratorType as MapToDecorator,\n    MigrationCallback,\n    Mixed,\n    NumericLogLevelType as NumericLogLevel,\n    ObjectChangeCallback,\n    ObjectChangeSet,\n    ObjectSchema,\n    /** @deprecated Will be removed in v13.0.0. Please use {@link PropertySchema} */\n    ObjectSchemaProperty,\n    ObjectType,\n    OpenRealmBehaviorConfiguration,\n    OpenRealmBehaviorTypeType as OpenRealmBehaviorType,\n    OpenRealmTimeOutBehaviorType as OpenRealmTimeOutBehavior,\n    OrderedCollectionType as OrderedCollection,\n    PartitionSyncConfiguration,\n    PrimaryKey,\n    PrimitivePropertyTypeName,\n    ProgressDirectionType as ProgressDirection,\n    ProgressModeType as ProgressMode,\n    ProgressNotificationCallback,\n    PropertiesTypes,\n    PropertySchema,\n    PropertySchemaParseErrorType as PropertySchemaParseError,\n    PropertySchemaShorthand,\n    PropertySchemaStrict,\n    PropertyTypeName,\n    ProviderTypeType as ProviderType,\n    ProxyTypeType as ProxyType,\n    RealmObjectConstructor,\n    /** @deprecated Will be removed in v13.0.0. Please use {@link RealmObjectConstructor} */\n    RealmObjectConstructor as ObjectClass,\n    RelationshipPropertyTypeName,\n    ResultsType as Results,\n    SchemaParseErrorType as SchemaParseError,\n    SessionStateType as SessionState,\n    SessionStopPolicyType as SessionStopPolicy,\n    SetType as Set,\n    SortDescriptor,\n    SSLConfigurationType as SSLConfiguration,\n    SSLVerifyCallbackType as SSLVerifyCallback,\n    SSLVerifyObjectType as SSLVerifyObject,\n    SubscriptionSetStateType as SubscriptionSetState,\n    SyncConfiguration,\n    SyncErrorType as SyncError,\n    TypesType as Types,\n    UpdateModeType as UpdateMode,\n    UserChangeCallback,\n    UserStateType as UserState,\n    UserType as User,\n    WaitForSyncType as WaitForSync,\n    GeoBox,\n    GeoCircle,\n    GeoPoint,\n    GeoPolygon,\n    CanonicalGeoPolygon,\n    CanonicalGeoPoint,\n    GeoPosition,\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace App {\n    export type Credentials = CredentialsType;\n    // eslint-disable-next-line @typescript-eslint/no-namespace\n    export namespace Sync {\n      export type BaseSubscriptionSet = BaseSubscriptionSetType;\n      export type LogLevel = LogLevelType;\n      export type NumericLogLevel = NumericLogLevelType;\n      export type MutableSubscriptionSet = MutableSubscriptionSetType;\n      export type PartitionValue = PartitionValueType;\n      export type SubscriptionOptions = SubscriptionOptionsType;\n      export type SubscriptionSet = SubscriptionSetType;\n      export type SubscriptionSetState = SubscriptionSetStateType;\n      /** @deprecated Please use {@link SubscriptionSetState} */\n      export type SubscriptionsState = SubscriptionSetStateType;\n      export type Subscription = SubscriptionType;\n      export type SyncSession = SyncSessionType;\n      /**\n       * @deprecated Got renamed to {@SyncSession} and please use named imports\n       */\n      export type Session = SyncSessionType;\n    }\n  }\n\n  /**\n   * Re-export of a subset of the \"bson\" package, enabling access to the BSON types without requiring an explicit dependency on the \"bson\" package.\n   * @see {@link https://www.npmjs.com/package/bson#documentation|the BSON documentation} for more information.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace BSON {\n    export type ObjectId = ObjectIdType;\n    export type Decimal128 = Decimal128Type;\n    export type UUID = UUIDType;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace Auth {\n    export type EmailPasswordAuth = EmailPasswordAuthType;\n    export type ApiKey = ApiKeyType;\n    export type ApiKeyAuth = ApiKeyAuthType;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace Services {\n    export type MongoDB = MongoDBType;\n    export type MongoDBDatabase = MongoDBDatabaseType;\n    /** @deprecated Please read {@link https://www.mongodb.com/docs/atlas/app-services/reference/push-notifications/} */\n    export type Push = PushClient;\n    // eslint-disable-next-line @typescript-eslint/no-namespace\n    export namespace MongoDB {\n      export type AggregatePipelineStage = AggregatePipelineStageType;\n      export type BaseChangeEvent<T extends OperationType> = BaseChangeEventType<T>;\n      export type ChangeEvent<T extends Document> = ChangeEventType<T>;\n      export type ChangeEventId = ChangeEventIdType;\n      export type CountOptions = CountOptionsType;\n      export type DeleteEvent<T extends Document> = DeleteEventType<T>;\n      export type DeleteResult = DeleteResultType;\n      export type Document<IdType = any> = DocumentType<IdType>;\n      export type DocumentKey<IdType> = DocumentKeyType<IdType>;\n      export type DocumentNamespace = DocumentNamespaceType;\n      export type DropDatabaseEvent = DropDatabaseEventType;\n      export type DropEvent = DropEventType;\n      export type Filter = FilterType;\n      export type FindOneAndModifyOptions = FindOneAndModifyOptionsType;\n      export type FindOneOptions = FindOneOptionsType;\n      export type FindOptions = FindOptionsType;\n      export type InsertEvent<T extends Document> = InsertEventType<T>;\n      export type InsertManyResult<IdType> = InsertManyResultType<IdType>;\n      export type InsertOneResult<IdType> = InsertOneResultType<IdType>;\n      export type InvalidateEvent = InvalidateEventType;\n      export type MongoDBCollection<T extends Document> = MongoDBCollectionType<T>;\n      export type NewDocument<T extends Document> = NewDocumentType<T>;\n      export type OperationType = OperationTypeType;\n      export type RenameEvent = RenameEventType;\n      export type ReplaceEvent<T extends Document> = ReplaceEventType<T>;\n      export type Update = UpdateType;\n      export type UpdateDescription = UpdateDescriptionType;\n      export type UpdateEvent<T extends Document> = UpdateEventType<T>;\n      export type UpdateOptions = UpdateOptionsType;\n      export type UpdateResult<IdType> = UpdateResultType<IdType>;\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace Types {\n    export type Bool = boolean;\n    export type String = string;\n    export type Int = number;\n    export type Float = number;\n    export type Double = number;\n    export type Decimal128 = Realm.BSON.Decimal128;\n    export type ObjectId = Realm.BSON.ObjectId;\n    export type UUID = Realm.BSON.UUID;\n    export type Date = GlobalDate;\n    export type Data = ArrayBuffer;\n    export type List<T> = Realm.List<T>;\n    export type Set<T> = Realm.Set<T>;\n    export type Dictionary<T> = Realm.Dictionary<T>;\n    export type Mixed = unknown;\n    export type LinkingObjects<ObjectTypeT, LinkingPropertyName> = Realm.Results<ObjectTypeT>;\n  }\n}\n\n// Exporting a deprecated global for backwards compatibility\nconst RealmConstructor = Realm;\ndeclare global {\n  /** @deprecated Will be removed in v13.0.0. Please use an import statement. */\n  export class Realm extends RealmConstructor {}\n  // IMPORTANT: This needs to match the namespace above!\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace Realm {\n    // TODO: Decide if we want to deprecate this as well\n    export type Object<T = DefaultObject> = RealmObject<T>;\n    export {\n      // Pure type exports below\n      AppType as App,\n      AppChangeCallback,\n      AppConfiguration,\n      AppServicesFunction,\n      /** @deprecated Will be removed in v13.0.0. Please use {@link AppServicesFunction} */\n      AppServicesFunction as RealmFunction,\n      BaseConfiguration,\n      BaseObjectSchema,\n      BaseSyncConfiguration,\n      BSONType as BSON,\n      CanonicalObjectSchema,\n      /** @deprecated Will be removed in v13.0.0. Please use {@link CanonicalPropertySchema} */\n      CanonicalObjectSchemaProperty,\n      CanonicalPropertySchema,\n      CanonicalPropertiesTypes,\n      ClientResetModeType as ClientResetMode,\n      ClientResetFallbackCallback,\n      ClientResetBeforeCallback,\n      ClientResetAfterCallback,\n      ClientResetManualConfiguration,\n      ClientResetDiscardUnsyncedChangesConfiguration,\n      ClientResetRecoverUnsyncedChangesConfiguration,\n      /** @deprecated Will be removed in v13.0.0. Please use {@link ClientResetRecoverUnsyncedChangesConfiguration} */\n      ClientResetRecoverUnsyncedChangesConfiguration as ClientResetRecoveryConfiguration,\n      ClientResetRecoverOrDiscardUnsyncedChangesConfiguration,\n      ClientResetConfig,\n      CollectionChangeCallback,\n      CollectionChangeSet,\n      CollectionPropertyTypeName,\n      CollectionType as Collection,\n      CompensatingWriteErrorType as CompensatingWriteError,\n      CompensatingWriteInfo,\n      ConfigurationWithoutSync,\n      ConfigurationWithSync,\n      Configuration,\n      ConnectionNotificationCallback,\n      ConnectionStateType as ConnectionState,\n      CredentialsType as Credentials,\n      DefaultFunctionsFactory,\n      DefaultUserProfileData,\n      DictionaryType as Dictionary,\n      DictionaryChangeCallback,\n      DictionaryChangeSet,\n      ErrorCallback,\n      FlexibleSyncConfiguration,\n      IndexDecoratorType as IndexDecorator,\n      ListType as List,\n      LocalAppConfiguration,\n      MapToDecoratorType as MapToDecorator,\n      MigrationCallback,\n      Mixed,\n      NumericLogLevelType as NumericLogLevel,\n      ObjectChangeCallback,\n      ObjectChangeSet,\n      ObjectSchema,\n      /** @deprecated Will be removed in v13.0.0. Please use {@link PropertySchema} */\n      ObjectSchemaProperty,\n      ObjectType,\n      OpenRealmBehaviorConfiguration,\n      OpenRealmBehaviorTypeType as OpenRealmBehaviorType,\n      OpenRealmTimeOutBehaviorType as OpenRealmTimeOutBehavior,\n      PartitionSyncConfiguration,\n      PrimaryKey,\n      PrimitivePropertyTypeName,\n      ProgressDirectionType as ProgressDirection,\n      ProgressModeType as ProgressMode,\n      ProgressNotificationCallback,\n      PropertiesTypes,\n      PropertySchema,\n      PropertySchemaParseErrorType as PropertySchemaParseError,\n      PropertySchemaShorthand,\n      PropertySchemaStrict,\n      PropertyTypeName,\n      ProviderTypeType as ProviderType,\n      RealmObjectConstructor,\n      /** @deprecated Will be removed in v13.0.0. Please use {@link RealmObjectConstructor} */\n      RealmObjectConstructor as ObjectClass,\n      RelationshipPropertyTypeName,\n      ResultsType as Results,\n      SchemaParseErrorType as SchemaParseError,\n      SessionStateType as SessionState,\n      SessionStopPolicyType as SessionStopPolicy,\n      SetType as Set,\n      SortDescriptor,\n      SSLConfigurationType as SSLConfiguration,\n      SSLVerifyCallbackType as SSLVerifyCallback,\n      SSLVerifyObjectType as SSLVerifyObject,\n      SubscriptionSetStateType as SubscriptionSetState,\n      SyncConfiguration,\n      SyncErrorType as SyncError,\n      TypesType as Types,\n      UpdateModeType as UpdateMode,\n      UserChangeCallback,\n      UserStateType as UserState,\n      GeoBox,\n      GeoCircle,\n      GeoPoint,\n      GeoPolygon,\n      CanonicalGeoPolygon,\n      CanonicalGeoPoint,\n      GeoPosition,\n      UserType as User,\n      WaitForSyncType as WaitForSync,\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-namespace\n    export namespace App {\n      export type Credentials = CredentialsType;\n      // eslint-disable-next-line @typescript-eslint/no-namespace\n      export namespace Sync {\n        export type BaseSubscriptionSet = BaseSubscriptionSetType;\n        export type LogLevel = LogLevelType;\n        export type NumericLogLevel = NumericLogLevelType;\n        export type MutableSubscriptionSet = MutableSubscriptionSetType;\n        export type PartitionValue = PartitionValueType;\n        export type SubscriptionOptions = SubscriptionOptionsType;\n        export type SubscriptionSet = SubscriptionSetType;\n        export type SubscriptionSetState = SubscriptionSetStateType;\n        /** @deprecated Please use {@link SubscriptionSetState} */\n        export type SubscriptionsState = SubscriptionSetStateType;\n        export type Subscription = SubscriptionType;\n        export type SyncSession = SyncSessionType;\n        /**\n         * @deprecated Got renamed to {@SyncSession} and please use named imports\n         */\n        export type Session = SyncSessionType;\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-namespace\n    export namespace BSON {\n      export type ObjectId = ObjectIdType;\n      export type Decimal128 = Decimal128Type;\n      export type UUID = UUIDType;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-namespace\n    export namespace Auth {\n      export type EmailPasswordAuth = EmailPasswordAuthType;\n      export type ApiKey = ApiKeyType;\n      export type ApiKeyAuth = ApiKeyAuthType;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-namespace\n    export namespace Services {\n      export type MongoDB = MongoDBType;\n      export type MongoDBDatabase = MongoDBDatabaseType;\n      /** @deprecated Please read {@link https://www.mongodb.com/docs/atlas/app-services/reference/push-notifications/} */\n      export type Push = PushClient;\n      // eslint-disable-next-line @typescript-eslint/no-namespace\n      export namespace MongoDB {\n        export type AggregatePipelineStage = AggregatePipelineStageType;\n        export type BaseChangeEvent<T extends OperationType> = BaseChangeEventType<T>;\n        export type ChangeEvent<T extends Document> = ChangeEventType<T>;\n        export type ChangeEventId = ChangeEventIdType;\n        export type CountOptions = CountOptionsType;\n        export type DeleteEvent<T extends Document> = DeleteEventType<T>;\n        export type DeleteResult = DeleteResultType;\n        export type Document<IdType = any> = DocumentType<IdType>;\n        export type DocumentKey<IdType> = DocumentKeyType<IdType>;\n        export type DocumentNamespace = DocumentNamespaceType;\n        export type DropDatabaseEvent = DropDatabaseEventType;\n        export type DropEvent = DropEventType;\n        export type Filter = FilterType;\n        export type FindOneAndModifyOptions = FindOneAndModifyOptionsType;\n        export type FindOneOptions = FindOneOptionsType;\n        export type FindOptions = FindOptionsType;\n        export type InsertEvent<T extends Document> = InsertEventType<T>;\n        export type InsertManyResult<IdType> = InsertManyResultType<IdType>;\n        export type InsertOneResult<IdType> = InsertOneResultType<IdType>;\n        export type InvalidateEvent = InvalidateEventType;\n        export type MongoDBCollection<T extends Document> = MongoDBCollectionType<T>;\n        export type NewDocument<T extends Document> = NewDocumentType<T>;\n        export type OperationType = OperationTypeType;\n        export type RenameEvent = RenameEventType;\n        export type ReplaceEvent<T extends Document> = ReplaceEventType<T>;\n        export type Update = UpdateType;\n        export type UpdateDescription = UpdateDescriptionType;\n        export type UpdateEvent<T extends Document> = UpdateEventType<T>;\n        export type UpdateOptions = UpdateOptionsType;\n        export type UpdateResult<IdType> = UpdateResultType<IdType>;\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-namespace\n    export namespace Types {\n      export type Bool = boolean;\n      export type String = string;\n      export type Int = number;\n      export type Float = number;\n      export type Double = number;\n      export type Decimal128 = Realm.BSON.Decimal128;\n      export type ObjectId = Realm.BSON.ObjectId;\n      export type UUID = Realm.BSON.UUID;\n      export type Date = GlobalDate;\n      export type Data = ArrayBuffer;\n      export type List<T> = Realm.List<T>;\n      export type Set<T> = Realm.Set<T>;\n      export type Dictionary<T> = Realm.Dictionary<T>;\n      export type Mixed = unknown;\n      export type LinkingObjects<ObjectTypeT, LinkingPropertyName> = Realm.Results<ObjectTypeT>;\n    }\n  }\n}\n\n//Set default logger and log level.\nRealm.setLogger(defaultLogger);\nRealm.setLogLevel(defaultLoggerLevel);\n\n// Patch the global at runtime\nlet warnedAboutGlobalRealmUse = false;\nObject.defineProperty(safeGlobalThis, \"Realm\", {\n  get() {\n    if (flags.THROW_ON_GLOBAL_REALM) {\n      throw new Error(\n        \"Accessed global Realm, please update your code to ensure you import Realm:\\nimport Realm from 'realm';\",\n      );\n    } else if (!warnedAboutGlobalRealmUse) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"Your app is relying on a Realm global, which will be removed in realm-js v13, please update your code to ensure you import Realm:\\n\\n\",\n        'import Realm from \"realm\"; // For ES Modules\\n',\n        'const Realm = require(\"realm\"); // For CommonJS\\n\\n',\n        \"To determine where, put this in the top of your index file:\\n\",\n        `import Realm from \"realm\";\\n`,\n        `Realm.flags.THROW_ON_GLOBAL_REALM = true`,\n      );\n      warnedAboutGlobalRealmUse = true;\n    }\n    return RealmConstructor;\n  },\n  configurable: false,\n});\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { CanonicalObjectSchema, Realm } from \"./internal\";\n\nexport enum RealmEvent {\n  Change = \"change\",\n  Schema = \"schema\",\n  BeforeNotify = \"beforenotify\",\n}\n\nexport type RealmListenerCallback = (realm: Realm, name: RealmEvent, schema?: CanonicalObjectSchema[]) => void;\n\n// Temporary functions to work between event names and corresponding enums\n// TODO: We should update the external API to take a `RealmEvent` instead of a string.\nexport ////////////////////////////////////////////////////////////////////////////\n/** @internal */\nclass RealmListeners {\n  /**\n   * Keeps tracked of registered listener callbacks for Realm class notifications.\n   */\n\n  constructor(private realm: Realm, private eventType: RealmEvent) {\n    this.eventType = eventType;\n  }\n  private listeners = new Set<RealmListenerCallback>();\n\n  // Combined callback which runs all listener callbacks in one call.\n  notify(schema?: CanonicalObjectSchema[]): void {\n    // Spreading to an array to avoid firing listeners that gets added from another listener\n    for (const callback of [...this.listeners]) {\n      callback(this.realm, this.eventType, schema);\n    }\n  }\n\n  add(callback: RealmListenerCallback): void {\n    if (this.listeners.has(callback)) {\n      // No need to add a listener twice\n      return;\n    }\n    // Store the listener.\n    this.listeners.add(callback);\n  }\n\n  remove(callback: RealmListenerCallback): void {\n    this.listeners.delete(callback);\n  }\n\n  removeAll(): void {\n    this.listeners.clear();\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  AnyRealmObject,\n  ObjectSchema,\n  Realm,\n  RealmObjectConstructor,\n  SyncConfiguration,\n  TypeAssertionError,\n  assert,\n  validateRealmSchema,\n  validateSyncConfiguration,\n} from \"./internal\";\n\n/**\n * A function which can be called to migrate a Realm from one version of the schema to another.\n */\nexport type MigrationCallback = (oldRealm: Realm, newRealm: Realm) => void;\n\n/**\n * This describes options used during schema migration.\n */\nexport type MigrationOptions = {\n  /**\n   * A flag to indicate whether Realm should resolve\n   * embedded object constraints after migration. If this is `true` then all embedded objects\n   * without a parent will be deleted and every embedded object with every embedded object with\n   * one or more references to it will be duplicated so that every referencing object will hold\n   * its own copy of the embedded object.\n   * @default false\n   * @since 12.1.0\n   */\n  resolveEmbeddedConstraints?: boolean;\n};\n\n/**\n * The options used to create a {@link Realm} instance.\n */\nexport type BaseConfiguration = {\n  /**\n   * The path to the file where the Realm database should be stored. For synced Realms, a relative path\n   * is used together with the {@link AppConfiguration.id | app ID} and {@link User.id | user ID} in order\n   * to avoid collisions with other apps or users.\n   * An absolute path is left untouched and on some platforms (iOS and Android) the app might not have\n   * permissions to create or open the file - permissions are not validated.\n   * If a relative path is specified, it is relative to {@link AppConfiguration.baseFilePath}.\n   * @since 0.10.0\n   */\n  path?: string;\n  /**\n   * Specifies all the object types in this Realm. **Required** when first creating a Realm at this `path`.\n   * If omitted, the schema will be read from the existing Realm file.\n   * @since 0.10.0\n   */\n  schema?: (RealmObjectConstructor<AnyRealmObject> | ObjectSchema)[];\n  /**\n   * If changing the `schema`, this field is **required** and must be incremented. This only\n   * applies to local Realms.\n   * @since 0.11.0\n   */\n  schemaVersion?: number;\n  /**\n   * Specifies if this Realm should be opened in-memory. This\n   * still requires a path (can be the default path) to identify the Realm so other processes can\n   * open the same Realm. The file will also be used as swap space if the Realm becomes bigger than\n   * what fits in memory, but it is not persistent and will be removed when the last instance\n   * is closed. This option is incompatible with option `sync`.\n   * @default false\n   * @since 0.10.0\n   */\n  inMemory?: boolean;\n  /**\n   * Specifies if this Realm should be opened as read-only.\n   * @default false\n   * @since 0.10.0\n   */\n  readOnly?: boolean;\n  /**\n   * Opening a Realm creates a number of FIFO special files in order to\n   * coordinate access to the Realm across threads and processes. If the Realm file is stored in a location\n   * that does not allow the creation of FIFO special files (e.g. FAT32 file systems), then the Realm cannot be opened.\n   * In that case Realm needs a different location to store these files and this property defines that location.\n   * The FIFO special files are very lightweight and the main Realm file will still be stored in the location defined\n   * by the `path` property. This property is ignored if the directory defined by `path` allow FIFO special files.\n   * @since 2.23.0\n   */\n  fifoFilesFallbackPath?: string;\n  sync?: SyncConfiguration;\n  /** @internal */\n  openSyncedRealmLocally?: true;\n  /**\n   * The function called when opening a Realm for the first time during the life of\n   * a process to determine if it should be compacted before being returned to the user.\n   *\n   * It returns `true` to indicate that an attempt to compact the file should be made. The compaction\n   * will be skipped if another process is accessing it.\n   * @param totalBytes - The total file size (data + free space).\n   * @param usedBytes - The total bytes used by data in the file.\n   * @returns `true` if Realm file should be compacted before opening.\n   * @since 2.9.0\n   * @example\n   * // compact large files (>100 MB) with more than half is free space\n   * shouldCompact: (totalBytes, usedBytes) => {\n   *   const oneHundredMB = 100 * 1024 * 1024; // 100 MB\n   *   return totalBytes > oneHundredMB && usedBytes / totalBytes < 0.5;\n   * }\n   */\n  shouldCompact?: (totalBytes: number, usedBytes: number) => boolean;\n  /**\n   * Specifies if this Realm should be deleted if a migration is needed.\n   * The option is incompatible with option `sync`.\n   * @default: false\n   * @since 1.13.0\n   */\n  deleteRealmIfMigrationNeeded?: boolean;\n  /**\n   * Specifies if this Realm's file format should\n   * be automatically upgraded if it was created with an older version of the Realm library.\n   * If set to `true` and a file format upgrade is required, an error will be thrown instead.\n   * @default false\n   * @since 2.1.0\n   */\n  disableFormatUpgrade?: boolean;\n  /**\n   * The 512-bit (64-byte) encryption key used to encrypt and decrypt all data in the Realm.\n   * @since 0.11.1\n   */\n  encryptionKey?: ArrayBuffer | ArrayBufferView | Int8Array;\n  /**\n   * The function to run if a migration is needed.\n   *\n   * This function should provide all the logic for converting data models from previous schemas\n   * to the new schema. This option is incompatible with option `sync`.\n   *\n   * The function takes two arguments:\n   *   - `oldRealm` - The Realm before migration is performed.\n   *   - `newRealm` - The Realm that uses the latest `schema`, which should be modified as necessary.\n   * @since 0.12.0\n   */\n  onMigration?: MigrationCallback;\n  /**\n   * The function called when opening a Realm for the first time. The function can populate the Realm\n   * prior to opening it. When calling the callback, the Realm will be in a write transaction.\n   * @param realm - The newly created Realm.\n   * @since 10.14.0\n   */\n  onFirstOpen?: (realm: Realm) => void;\n  migrationOptions?: MigrationOptions;\n};\n\nexport type ConfigurationWithSync = BaseConfiguration & {\n  sync: SyncConfiguration;\n};\n\nexport type ConfigurationWithoutSync = BaseConfiguration & {\n  sync?: never;\n};\n\nexport type Configuration = ConfigurationWithSync | ConfigurationWithoutSync;\n\n/**\n * Validate the fields of a user-provided Realm configuration.\n * @internal\n */\nexport function validateConfiguration(config: unknown): asserts config is Configuration {\n  assert.object(config, \"realm configuration\", { allowArrays: false });\n  const {\n    path,\n    schema,\n    schemaVersion,\n    inMemory,\n    readOnly,\n    fifoFilesFallbackPath,\n    sync,\n    openSyncedRealmLocally,\n    shouldCompact,\n    deleteRealmIfMigrationNeeded,\n    disableFormatUpgrade,\n    encryptionKey,\n    onMigration,\n    migrationOptions,\n  } = config;\n\n  if (path !== undefined) {\n    assert.string(path, \"'path' on realm configuration\");\n    assert(path.length > 0, \"The path cannot be empty. Provide a path or remove the field.\");\n  }\n  if (schema !== undefined) {\n    validateRealmSchema(schema);\n  }\n  if (schemaVersion !== undefined) {\n    assert.number(schemaVersion, \"'schemaVersion' on realm configuration\");\n    assert(\n      schemaVersion >= 0 && Number.isInteger(schemaVersion),\n      \"'schemaVersion' on realm configuration must be 0 or a positive integer.\",\n    );\n  }\n  if (inMemory !== undefined) {\n    assert.boolean(inMemory, \"'inMemory' on realm configuration\");\n  }\n  if (readOnly !== undefined) {\n    assert.boolean(readOnly, \"'readOnly' on realm configuration\");\n  }\n  if (fifoFilesFallbackPath !== undefined) {\n    assert.string(fifoFilesFallbackPath, \"'fifoFilesFallbackPath' on realm configuration\");\n  }\n  if (onMigration !== undefined) {\n    assert.function(onMigration, \"'onMigration' on realm configuration\");\n  }\n  if (sync !== undefined) {\n    assert(!onMigration, \"The realm configuration options 'onMigration' and 'sync' cannot both be defined.\");\n    assert(!migrationOptions, \"The realm configuration options 'migrationOptions' and 'sync' cannot both be defined.\");\n    assert(inMemory === undefined, \"The realm configuration options 'inMemory' and 'sync' cannot both be defined.\");\n    assert(\n      deleteRealmIfMigrationNeeded === undefined,\n      \"The realm configuration options 'deleteRealmIfMigrationNeeded' and 'sync' cannot both be defined.\",\n    );\n    validateSyncConfiguration(sync);\n  }\n  if (openSyncedRealmLocally !== undefined) {\n    // Internal use\n    assert(\n      openSyncedRealmLocally === true,\n      \"'openSyncedRealmLocally' on realm configuration is only used internally and must be true if defined.\",\n    );\n  }\n  if (shouldCompact !== undefined) {\n    assert.function(shouldCompact, \"'shouldCompact' on realm configuration\");\n  }\n  if (deleteRealmIfMigrationNeeded !== undefined) {\n    assert.boolean(deleteRealmIfMigrationNeeded, \"'deleteRealmIfMigrationNeeded' on realm configuration\");\n  }\n  if (disableFormatUpgrade !== undefined) {\n    assert.boolean(disableFormatUpgrade, \"'disableFormatUpgrade' on realm configuration\");\n  }\n  if (encryptionKey !== undefined) {\n    assert(\n      encryptionKey instanceof ArrayBuffer || ArrayBuffer.isView(encryptionKey) || encryptionKey instanceof Int8Array,\n      `Expected 'encryptionKey' on realm configuration to be an ArrayBuffer, ArrayBufferView (Uint8Array), or Int8Array, got ${TypeAssertionError.deriveType(\n        encryptionKey,\n      )}.`,\n    );\n  }\n  if (migrationOptions) {\n    validateMigrationOptions(migrationOptions);\n  }\n}\n\nfunction validateMigrationOptions(options: unknown): asserts options is MigrationOptions {\n  assert.object(options, \"'migrationOptions'\", { allowArrays: false });\n  const { resolveEmbeddedConstraints } = options;\n\n  if (resolveEmbeddedConstraints !== undefined) {\n    assert.boolean(resolveEmbeddedConstraints, \"'resolveEmbeddedConstraints' on 'migrationOptions'\");\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  Configuration,\n  OpenRealmBehaviorType,\n  OpenRealmTimeOutBehavior,\n  ProgressNotificationCallback,\n  PromiseHandle,\n  Realm,\n  SubscriptionSetState,\n  TimeoutError,\n  TimeoutPromise,\n  assert,\n  binding,\n  flags,\n  validateConfiguration,\n} from \"./internal\";\n\ntype OpenBehavior = {\n  openBehavior: OpenRealmBehaviorType;\n  timeOut?: number;\n  timeOutBehavior?: OpenRealmTimeOutBehavior;\n};\n\nfunction determineBehavior(config: Configuration, realmExists: boolean): OpenBehavior {\n  const { sync, openSyncedRealmLocally } = config;\n  if (!sync || openSyncedRealmLocally) {\n    return { openBehavior: OpenRealmBehaviorType.OpenImmediately };\n  } else {\n    const configProperty = realmExists ? \"existingRealmFileBehavior\" : \"newRealmFileBehavior\";\n    const configBehavior = sync[configProperty];\n    if (configBehavior) {\n      const { type, timeOut, timeOutBehavior } = configBehavior;\n      if (typeof timeOut !== \"undefined\") {\n        assert.number(timeOut, \"timeOut\");\n      }\n      return { openBehavior: type, timeOut, timeOutBehavior };\n    } else {\n      return {\n        openBehavior: OpenRealmBehaviorType.DownloadBeforeOpen,\n        timeOut: 30 * 1000,\n        timeOutBehavior: OpenRealmTimeOutBehavior.ThrowException,\n      };\n    }\n  }\n}\n\nexport class ProgressRealmPromise implements Promise<Realm> {\n  /** @internal */\n  private static instances = new Set<binding.WeakRef<ProgressRealmPromise>>();\n  /**\n   * Cancels all unresolved `ProgressRealmPromise` instances.\n   * @internal\n   */\n  public static cancelAll() {\n    assert(flags.ALLOW_CLEAR_TEST_STATE, \"Set the flags.ALLOW_CLEAR_TEST_STATE = true before calling this.\");\n    for (const promiseRef of ProgressRealmPromise.instances) {\n      promiseRef.deref()?.cancel();\n    }\n    ProgressRealmPromise.instances.clear();\n  }\n  /** @internal */\n  private task: binding.AsyncOpenTask | null = null;\n  /** @internal */\n  private listeners = new Set<ProgressNotificationCallback>();\n  /** @internal */\n  private handle = new PromiseHandle<Realm>();\n  /** @internal */\n  private timeoutPromise: TimeoutPromise<Realm> | null = null;\n\n  /** @internal */\n  constructor(config: Configuration) {\n    if (flags.ALLOW_CLEAR_TEST_STATE) {\n      ProgressRealmPromise.instances.add(new binding.WeakRef(this));\n    }\n    try {\n      validateConfiguration(config);\n      // Calling `Realm.exists()` before `binding.Realm.getSynchronizedRealm()` is necessary to capture\n      // the correct value when this constructor was called since `binding.Realm.getSynchronizedRealm()`\n      // will open the realm. This is needed when calling the Realm constructor.\n      const realmExists = Realm.exists(config);\n      const { openBehavior, timeOut, timeOutBehavior } = determineBehavior(config, realmExists);\n      if (openBehavior === OpenRealmBehaviorType.OpenImmediately) {\n        const realm = new Realm(config);\n        this.handle.resolve(realm);\n      } else if (openBehavior === OpenRealmBehaviorType.DownloadBeforeOpen) {\n        const { bindingConfig } = Realm.transformConfig(config);\n        // Construct an async open task\n        this.task = binding.Realm.getSynchronizedRealm(bindingConfig);\n        // If the promise handle gets rejected, we should cancel the open task\n        // to avoid consuming a thread safe reference which is no longer registered\n        this.handle.promise.catch(() => this.task?.cancel());\n\n        this.createTimeoutPromise(config, { openBehavior, timeOut, timeOutBehavior });\n\n        this.task\n          .start()\n          .then(async (tsr) => {\n            const realm = new Realm(config, {\n              internal: binding.Helpers.consumeThreadSafeReferenceToSharedRealm(tsr),\n              // Do not call `Realm.exists()` here in case the realm has been opened by this point in time.\n              realmExists,\n            });\n            if (config.sync?.flexible && !config.openSyncedRealmLocally) {\n              const { subscriptions } = realm;\n              if (subscriptions.state === SubscriptionSetState.Pending) {\n                await subscriptions.waitForSynchronization();\n              }\n            }\n            return realm;\n          })\n          .then(this.handle.resolve, (err) => {\n            assert.undefined(err.code, \"Update this to use the error code instead of matching on message\");\n            if (err instanceof Error && err.message === \"Sync session became inactive\") {\n              // This can happen when two async tasks are opened for the same Realm and one gets canceled\n              this.rejectAsCanceled();\n            } else {\n              this.handle.reject(err);\n            }\n          });\n        // TODO: Consider storing the token returned here to unregister when the task gets cancelled,\n        // if for some reason, that doesn't happen internally\n        this.task.registerDownloadProgressNotifier(this.emitProgress);\n      } else {\n        throw new Error(`Unexpected open behavior '${openBehavior}'`);\n      }\n    } catch (err) {\n      this.handle.reject(err);\n    }\n  }\n\n  /**\n   * Cancels the download of the Realm\n   * If multiple `ProgressRealmPromise` instances are in progress for the same Realm, then canceling one of them\n   * will cancel all of them.\n   */\n  cancel(): void {\n    this.cancelAndResetTask();\n    this.timeoutPromise?.cancel();\n    // Clearing all listeners to avoid accidental progress notifications\n    this.listeners.clear();\n    // Tell anything awaiting the promise\n    this.rejectAsCanceled();\n  }\n\n  /**\n   * Register to receive progress notifications while the download is in progress.\n   * @param callback Called multiple times as the client receives data, with two arguments:\n   * 1. `transferred` The current number of bytes already transferred\n   * 2. `transferable` The total number of transferable bytes (i.e. the number of bytes already transferred plus the number of bytes pending transfer)\n   */\n  progress(callback: ProgressNotificationCallback): this {\n    this.listeners.add(callback);\n    return this;\n  }\n\n  then = this.handle.promise.then.bind(this.handle.promise);\n  catch = this.handle.promise.catch.bind(this.handle.promise);\n  finally = this.handle.promise.finally.bind(this.handle.promise);\n\n  private emitProgress = (transferredArg: binding.Int64, transferableArg: binding.Int64) => {\n    const transferred = binding.Int64.intToNum(transferredArg);\n    const transferable = binding.Int64.intToNum(transferableArg);\n    for (const listener of this.listeners) {\n      listener(transferred, transferable);\n    }\n  };\n\n  private createTimeoutPromise(config: Configuration, { timeOut, timeOutBehavior }: OpenBehavior) {\n    if (typeof timeOut === \"number\") {\n      this.timeoutPromise = new TimeoutPromise(\n        this.handle.promise, // Ensures the timeout gets cancelled when the realm opens\n        {\n          ms: timeOut,\n          message: `Realm could not be downloaded in the allocated time: ${timeOut} ms.`,\n        },\n      );\n      if (timeOutBehavior === OpenRealmTimeOutBehavior.ThrowException) {\n        // Make failing the timeout, reject the promise\n        this.timeoutPromise.catch(this.handle.reject);\n      } else if (timeOutBehavior === OpenRealmTimeOutBehavior.OpenLocalRealm) {\n        // Make failing the timeout, resolve the promise\n        this.timeoutPromise.catch((err) => {\n          if (err instanceof TimeoutError) {\n            this.cancelAndResetTask();\n            const realm = new Realm(config);\n            this.handle.resolve(realm);\n          } else {\n            this.handle.reject(err);\n          }\n        });\n      } else {\n        throw new Error(\n          `Invalid 'timeOutBehavior': '${timeOutBehavior}'. Only 'throwException' and 'openLocalRealm' is allowed.`,\n        );\n      }\n    }\n  }\n\n  private cancelAndResetTask() {\n    if (this.task) {\n      this.task.cancel();\n      this.task.$resetSharedPtr();\n      this.task = null;\n    }\n  }\n\n  private rejectAsCanceled() {\n    const err = new Error(\"Async open canceled\");\n    this.handle.reject(err);\n  }\n\n  get [Symbol.toStringTag]() {\n    return ProgressRealmPromise.name;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  ObjectSchema as BindingObjectSchema,\n  Property as BindingProperty,\n  PropertyType as BindingPropertyType,\n  TableType,\n} from \"../binding\";\nimport { assert } from \"../internal\";\n\nimport { CanonicalObjectSchema, CanonicalPropertySchema, PropertyTypeName } from \"./types\";\n\nconst TYPE_MAPPINGS: Record<BindingPropertyType, PropertyTypeName | null> = {\n  [BindingPropertyType.Int]: \"int\",\n  [BindingPropertyType.Bool]: \"bool\",\n  [BindingPropertyType.String]: \"string\",\n  [BindingPropertyType.Data]: \"data\",\n  [BindingPropertyType.Date]: \"date\",\n  [BindingPropertyType.Float]: \"float\",\n  [BindingPropertyType.Double]: \"double\",\n  [BindingPropertyType.Mixed]: \"mixed\",\n  [BindingPropertyType.ObjectId]: \"objectId\",\n  [BindingPropertyType.Decimal]: \"decimal128\",\n  [BindingPropertyType.Uuid]: \"uuid\",\n  [BindingPropertyType.Array]: \"list\",\n  [BindingPropertyType.Set]: \"set\",\n  [BindingPropertyType.Dictionary]: \"dictionary\",\n  [BindingPropertyType.LinkingObjects]: \"linkingObjects\",\n  [BindingPropertyType.Object]: \"object\",\n  // These have no direct\n  [BindingPropertyType.Nullable]: null,\n  //\n  [BindingPropertyType.Collection]: null,\n  [BindingPropertyType.Flags]: null,\n};\n\n/**\n * Get the string representation of a property type's base type (not including flags)\n * @internal\n */\nexport function getTypeName(type: BindingPropertyType, objectType: string | undefined): string {\n  const baseType = type & ~BindingPropertyType.Flags;\n  if (type & BindingPropertyType.Array) {\n    if (baseType === BindingPropertyType.Object) {\n      return `list<${objectType}>`;\n    } else {\n      return `list<${getTypeName(baseType, objectType)}>`;\n    }\n  } else if (type & BindingPropertyType.Set) {\n    return `set<${getTypeName(baseType, objectType)}>`;\n  } else if (type & BindingPropertyType.Dictionary) {\n    return `dictionary<${getTypeName(baseType, objectType)}>`;\n  } else if (baseType === BindingPropertyType.Object && objectType) {\n    assert.string(objectType, \"objectType\");\n    return `<${objectType}>`;\n  } else {\n    const result = TYPE_MAPPINGS[baseType as BindingPropertyType];\n    assert(result, `Unexpected type ${type}`);\n    return result;\n  }\n}\n\nconst COLLECTION_TYPES = [BindingPropertyType.Array, BindingPropertyType.Set, BindingPropertyType.Dictionary];\n\n/**\n * Implements https://github.com/realm/realm-js/blob/v11/src/js_schema.hpp#L433-L478\n * @internal\n */\nexport function fromBindingObjectSchema({\n  name,\n  computedProperties,\n  persistedProperties,\n  primaryKey,\n  tableType,\n}: BindingObjectSchema): CanonicalObjectSchema {\n  const properties = [...computedProperties, ...persistedProperties];\n  const result: CanonicalObjectSchema = {\n    ctor: undefined,\n    name,\n    properties: Object.fromEntries(\n      properties.map((property) => [property.publicName || property.name, fromBindingPropertySchema(property)]),\n    ),\n    embedded: tableType === TableType.Embedded,\n    asymmetric: tableType === TableType.TopLevelAsymmetric,\n  };\n  // The primary key from the binding is an empty string when not set\n  if (primaryKey) {\n    result.primaryKey = primaryKey;\n  }\n  return result;\n}\n\n/**\n * Implements https://github.com/realm/realm-js/blob/v11/src/js_schema.hpp#L480-L530\n * @internal\n */\nexport function fromBindingPropertySchema(propertySchema: BindingProperty): CanonicalPropertySchema {\n  const { name, isIndexed, isFulltextIndexed, publicName } = propertySchema;\n  const result: CanonicalPropertySchema = {\n    name,\n    indexed: isFulltextIndexed ? \"full-text\" : isIndexed,\n    mapTo: name,\n    ...fromBindingPropertyTypeName(propertySchema),\n  };\n  if (publicName) {\n    result.name = publicName;\n  }\n  return result;\n}\n\n/** @internal */\nfunction fromBindingPropertyTypeName(\n  propertySchema: BindingProperty,\n): Pick<CanonicalPropertySchema, \"type\" | \"optional\" | \"objectType\" | \"property\"> {\n  const { type, objectType, linkOriginPropertyName } = propertySchema;\n  const itemType = type & ~BindingPropertyType.Collection;\n\n  if (type & BindingPropertyType.Nullable) {\n    const item = fromBindingPropertyTypeName({ ...propertySchema, type: type & ~BindingPropertyType.Nullable });\n    return { ...item, optional: true };\n  }\n\n  if (itemType === BindingPropertyType.LinkingObjects) {\n    assert(type & BindingPropertyType.Array);\n    assert.string(linkOriginPropertyName, \"linkOriginPropertyName\");\n    return {\n      type: \"linkingObjects\",\n      optional: false,\n      objectType,\n      property: linkOriginPropertyName,\n    };\n  }\n\n  for (const collectionType of COLLECTION_TYPES) {\n    if (type & collectionType) {\n      const item = fromBindingPropertyTypeName({ ...propertySchema, type: itemType });\n      return {\n        type: TYPE_MAPPINGS[collectionType] as PropertyTypeName,\n        objectType: item.type === \"object\" ? item.objectType : item.type,\n        optional: item.type === \"object\" ? false : item.optional,\n      };\n    }\n  }\n\n  if (type === BindingPropertyType.Object) {\n    if (!objectType) {\n      throw new Error(\"Expected property with 'object' type to declare an objectType\");\n    }\n    // TODO: Decide if this change is reasonable\n    return { type: \"object\", objectType, optional: true }; // Implicitly nullable\n  } else if (type === BindingPropertyType.LinkingObjects) {\n    if (!objectType) {\n      throw new Error(\"Expected property with 'object' type to declare an objectType\");\n    }\n    return { type: \"linkingObjects\", objectType, optional: false };\n  }\n\n  const mappedType = TYPE_MAPPINGS[type];\n  if (mappedType) {\n    return { type: mappedType, optional: false };\n  } else {\n    throw new Error(`Unexpected type '${type}'`);\n  }\n}\n\n/** @internal */\nexport function fromBindingRealmSchema(schema: Readonly<BindingObjectSchema[]>): CanonicalObjectSchema[] {\n  return schema.map(fromBindingObjectSchema);\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  ObjectSchema_Relaxed as BindingObjectSchema,\n  Property_Relaxed as BindingProperty,\n  PropertyType as BindingPropertyType,\n  TableType,\n} from \"../binding\";\nimport { CanonicalObjectSchema, CanonicalPropertySchema, PropertyTypeName, assert } from \"../internal\";\n\n/** @internal */\nexport const TYPE_MAPPINGS: Record<PropertyTypeName, BindingPropertyType> = {\n  int: BindingPropertyType.Int,\n  bool: BindingPropertyType.Bool,\n  string: BindingPropertyType.String,\n  data: BindingPropertyType.Data,\n  date: BindingPropertyType.Date,\n  float: BindingPropertyType.Float,\n  double: BindingPropertyType.Double,\n  mixed: BindingPropertyType.Mixed,\n  objectId: BindingPropertyType.ObjectId,\n  decimal128: BindingPropertyType.Decimal,\n  uuid: BindingPropertyType.Uuid,\n  list: BindingPropertyType.Array,\n  set: BindingPropertyType.Set,\n  dictionary: BindingPropertyType.Dictionary,\n  linkingObjects: BindingPropertyType.LinkingObjects,\n  object: BindingPropertyType.Object,\n};\n\nfunction deriveTableType(schema: CanonicalObjectSchema) {\n  if (schema.embedded) {\n    assert.boolean(schema.asymmetric, `'${schema.name}' cannot be both embedded and asymmetric`);\n    return TableType.Embedded;\n  } else if (schema.asymmetric) {\n    return TableType.TopLevelAsymmetric;\n  } else {\n    return TableType.TopLevel;\n  }\n}\n\n/** @internal */\nexport function toBindingSchema(schema: CanonicalObjectSchema[]): BindingObjectSchema[] {\n  return schema.map(toBindingObjectSchema);\n}\n\n/** @internal */\nexport function toBindingObjectSchema(schema: CanonicalObjectSchema): BindingObjectSchema {\n  // TODO: Enable declaring the alias of the object schema\n  // TODO: Enable declaring computed properties\n  const properties = Object.entries(schema.properties)\n    .map(([name, property]) => toBindingPropertySchema(name, property))\n    .map((property) => {\n      // Ensure the primary property is marked accordingly\n      if (property.name === schema.primaryKey) {\n        property.isPrimary = true;\n      }\n      return property;\n    });\n  const result: BindingObjectSchema = {\n    name: schema.name,\n    tableType: deriveTableType(schema),\n    persistedProperties: properties.filter(\n      (p) => (p.type & ~BindingPropertyType.Flags) !== BindingPropertyType.LinkingObjects,\n    ),\n    computedProperties: properties.filter(\n      (p) => (p.type & ~BindingPropertyType.Flags) === BindingPropertyType.LinkingObjects,\n    ),\n  };\n  // The object schema itself must also know the name of the primary key\n  if (schema.primaryKey) {\n    result.primaryKey = schema.primaryKey;\n  }\n  return result;\n}\n\n/** @internal */\nexport function toBindingPropertySchema(name: string, schema: CanonicalPropertySchema): BindingProperty {\n  if (name !== schema.name) {\n    // TODO: Consider if this API should be used to support declaring an alias?\n    throw new Error(\"The key of a property must match its name property\");\n  }\n  const result: BindingProperty = {\n    name,\n    type: toBindingPropertyType(schema),\n    objectType: schema.objectType && schema.objectType in TYPE_MAPPINGS ? undefined : schema.objectType,\n    linkOriginPropertyName: schema.property,\n  };\n\n  if (schema.indexed === \"full-text\") {\n    result.isFulltextIndexed = true;\n  } else {\n    result.isIndexed = schema.indexed;\n  }\n\n  if (schema.mapTo && schema.mapTo !== schema.name) {\n    result.publicName = result.name;\n    result.name = schema.mapTo;\n  }\n  return result;\n}\n\n/** @internal */\nexport function toBindingPropertyType(schema: CanonicalPropertySchema): BindingPropertyType {\n  let type = TYPE_MAPPINGS[schema.type];\n  let isNullable = schema.optional;\n  if (type === BindingPropertyType.LinkingObjects) {\n    return type | BindingPropertyType.Array;\n  } else if (schema.objectType) {\n    if (schema.objectType in TYPE_MAPPINGS) {\n      type |= TYPE_MAPPINGS[schema.objectType as PropertyTypeName];\n      if (schema.objectType === \"mixed\") {\n        // Implicitly nullable - will throw if not sat\n        isNullable = true;\n      }\n    } else {\n      type |= BindingPropertyType.Object;\n      // Implicitly nullable - will throw if sat\n      if (!(type & BindingPropertyType.Dictionary)) {\n        isNullable = false;\n      }\n    }\n  }\n  if (schema.type === \"object\" || schema.type === \"mixed\") {\n    // Implicitly nullable - will throw if not sat\n    isNullable = true;\n  }\n  if (isNullable) {\n    type |= BindingPropertyType.Nullable;\n  }\n  return type;\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  CanonicalObjectSchema,\n  CanonicalPropertySchema,\n  CollectionPropertyTypeName,\n  ObjectSchema,\n  ObjectSchemaParseError,\n  PrimitivePropertyTypeName,\n  PropertiesTypes,\n  PropertySchema,\n  PropertySchemaParseError,\n  PropertySchemaShorthand,\n  PropertyTypeName,\n  RealmObjectConstructor,\n  SchemaParseError,\n  UserTypeName,\n  assert,\n  flags,\n} from \"../internal\";\n\ntype PropertyInfo = {\n  readonly objectName: string;\n  readonly propertyName: string;\n  readonly propertySchema: PropertySchema | PropertySchemaShorthand;\n  readonly isPrimaryKey?: boolean;\n};\n\ninterface PropertyInfoUsingObject extends PropertyInfo {\n  readonly propertySchema: PropertySchema;\n}\n\ninterface PropertyInfoUsingShorthand extends PropertyInfo {\n  readonly propertySchema: PropertySchemaShorthand;\n}\n\nconst PRIMITIVE_TYPES = new Set<PrimitivePropertyTypeName>([\n  \"bool\",\n  \"int\",\n  \"float\",\n  \"double\",\n  \"decimal128\",\n  \"objectId\",\n  \"string\",\n  \"data\",\n  \"date\",\n  \"mixed\",\n  \"uuid\",\n]);\n\nconst COLLECTION_TYPES = new Set<CollectionPropertyTypeName>([\"list\", \"dictionary\", \"set\"]);\n\nconst COLLECTION_SHORTHAND_TO_NAME: Readonly<Record<string, string>> = {\n  \"[]\": \"list\",\n  \"{}\": \"dictionary\",\n  \"<>\": \"set\",\n};\n\nconst COLLECTION_SUFFIX_LENGTH = \"[]\".length;\n\nfunction isPrimitive(type: string | undefined): type is PrimitivePropertyTypeName {\n  return PRIMITIVE_TYPES.has(type as PrimitivePropertyTypeName);\n}\n\nfunction isCollection(type: string | undefined): type is CollectionPropertyTypeName {\n  return COLLECTION_TYPES.has(type as CollectionPropertyTypeName);\n}\n\nfunction isUserDefined(type: string | undefined): type is UserTypeName {\n  return !!type && !(isPrimitive(type) || isCollection(type) || type === \"object\" || type === \"linkingObjects\");\n}\n\n/**\n * Transform a validated user-provided Realm schema into its canonical form.\n */\nexport function normalizeRealmSchema(\n  realmSchema: Readonly<(RealmObjectConstructor | ObjectSchema)[]>,\n): CanonicalObjectSchema[] {\n  return realmSchema.map(normalizeObjectSchema);\n}\n\n/**\n * Transform a validated user-provided object schema into its canonical form.\n */\nexport function normalizeObjectSchema(arg: RealmObjectConstructor | ObjectSchema): CanonicalObjectSchema {\n  if (typeof arg === \"function\") {\n    assert(arg.schema, () => new SchemaParseError(\"A static schema must be specified on this class.\"));\n    const objectSchema = normalizeObjectSchema(arg.schema);\n    objectSchema.ctor = arg;\n    return objectSchema;\n  }\n\n  // ---- THIS IF BLOCK HAS NOT YET BEEN REWRITTEN ----\n  // TODO: Determine if we still want to support this (should show warning to users of future deprecation)\n  if (Array.isArray(arg.properties)) {\n    if (flags.ALLOW_VALUES_ARRAYS) {\n      return normalizeObjectSchema({\n        ...arg,\n        // Build the PropertiesTypes object\n        properties: Object.fromEntries(arg.properties.map(({ name, ...rest }) => [name, rest])),\n      });\n    }\n    throw new Error(\"Array of properties are no longer supported. Use an object instead.\");\n  }\n  // --------------------------------------------------\n\n  const { name, primaryKey, asymmetric, embedded, properties } = arg;\n  assert(name.length > 0, objectError(\"\", \"'name' must be specified.\"));\n  const primaryKeyFieldIsMissing = primaryKey && !Object.prototype.hasOwnProperty.call(properties, primaryKey);\n  assert(\n    !primaryKeyFieldIsMissing,\n    objectError(name, `'${primaryKey}' is set as the primary key field but was not found in 'properties'.`),\n  );\n  assert(!asymmetric || !embedded, objectError(name, \"Cannot be both asymmetric and embedded.\"));\n\n  return {\n    name,\n    primaryKey,\n    asymmetric: !!asymmetric,\n    embedded: !!embedded,\n    properties: normalizePropertySchemas(name, properties, primaryKey),\n  };\n}\n\n/**\n * Transform user-provided property schemas into their canonical forms.\n */\nfunction normalizePropertySchemas(\n  objectName: string,\n  propertiesSchemas: PropertiesTypes,\n  primaryKey?: string,\n): Record<string, CanonicalPropertySchema> {\n  const normalizedSchemas: Record<string, CanonicalPropertySchema> = {};\n  for (const propertyName in propertiesSchemas) {\n    normalizedSchemas[propertyName] = normalizePropertySchema({\n      objectName,\n      propertyName,\n      propertySchema: propertiesSchemas[propertyName],\n      isPrimaryKey: primaryKey === propertyName,\n    });\n  }\n\n  return normalizedSchemas;\n}\n\n/**\n * Transform a user-provided property schema into its canonical form.\n */\nexport function normalizePropertySchema(info: PropertyInfo): CanonicalPropertySchema {\n  const isUsingShorthand = typeof info.propertySchema === \"string\";\n  const normalizedSchema = isUsingShorthand\n    ? normalizePropertySchemaShorthand(info as PropertyInfoUsingShorthand)\n    : normalizePropertySchemaObject(info as PropertyInfoUsingObject);\n\n  return normalizedSchema;\n}\n\n/**\n * Transform a validated user-provided property schema that is using\n * the shorthand string notation into its canonical form.\n */\nfunction normalizePropertySchemaShorthand(info: PropertyInfoUsingShorthand): CanonicalPropertySchema {\n  let { propertySchema } = info;\n  assert(propertySchema.length > 0, propError(info, \"The type must be specified.\"));\n\n  let type = \"\";\n  let objectType: string | undefined;\n  let optional: boolean | undefined;\n\n  if (hasCollectionSuffix(propertySchema)) {\n    const suffix = propertySchema.substring(propertySchema.length - COLLECTION_SUFFIX_LENGTH);\n    type = COLLECTION_SHORTHAND_TO_NAME[suffix];\n\n    propertySchema = propertySchema.substring(0, propertySchema.length - COLLECTION_SUFFIX_LENGTH);\n    assert(propertySchema.length > 0, propError(info, `The element type must be specified (Example: 'int${suffix}')`));\n\n    const isNestedCollection = hasCollectionSuffix(propertySchema);\n    assert(!isNestedCollection, propError(info, \"Nested collections are not supported.\"));\n  }\n\n  if (propertySchema.endsWith(\"?\")) {\n    optional = true;\n\n    propertySchema = propertySchema.substring(0, propertySchema.length - 1);\n    assert(propertySchema.length > 0, propError(info, \"The type must be specified. (Examples: 'int?' and 'int?[]')\"));\n\n    const usingOptionalOnCollection = hasCollectionSuffix(propertySchema);\n    assert(\n      !usingOptionalOnCollection,\n      propError(\n        info,\n        \"Collections cannot be optional. To allow elements of the collection to be optional, use '?' after the element type. (Examples: 'int?[]', 'int?{}', and 'int?<>')\",\n      ),\n    );\n  }\n\n  if (isPrimitive(propertySchema)) {\n    if (isCollection(type)) {\n      objectType = propertySchema;\n    } else {\n      type = propertySchema as PropertyTypeName;\n    }\n  } else if (isCollection(propertySchema)) {\n    throw new PropertySchemaParseError(\n      `Cannot use the collection name ${propertySchema}. (Examples: 'int[]' (list), 'int{}' (dictionary), and 'int<>' (set))`,\n      info,\n    );\n  } else if (propertySchema === \"object\") {\n    throw new PropertySchemaParseError(\n      \"To define a relationship, use either 'MyObjectType' or { type: 'object', objectType: 'MyObjectType' }\",\n      info,\n    );\n  } else if (propertySchema === \"linkingObjects\") {\n    throw new PropertySchemaParseError(\n      \"To define an inverse relationship, use { type: 'linkingObjects', objectType: 'MyObjectType', property: 'myObjectTypesProperty' }\",\n      info,\n    );\n  } else {\n    // User-defined types\n    objectType = propertySchema;\n    if (!isCollection(type)) {\n      type = \"object\";\n    }\n  }\n\n  if (isAlwaysOptional(type, objectType)) {\n    optional = true;\n  } else if (isNeverOptional(type, objectType)) {\n    assert(\n      !optional,\n      propError(\n        info,\n        \"User-defined types in lists and sets are always non-optional and cannot be made optional. Remove '?' or change the type.\",\n      ),\n    );\n    optional = false;\n  }\n\n  const normalizedSchema: CanonicalPropertySchema = {\n    name: info.propertyName,\n    type: type as PropertyTypeName,\n    optional: !!optional,\n    indexed: !!info.isPrimaryKey,\n    mapTo: info.propertyName,\n  };\n  // Add optional properties only if defined (tests expect no 'undefined' properties)\n  if (objectType !== undefined) normalizedSchema.objectType = objectType;\n\n  return normalizedSchema;\n}\n\n/**\n * Transform a validated user-provided property schema that is using\n * the relaxed object notation into its canonical form.\n */\nfunction normalizePropertySchemaObject(info: PropertyInfoUsingObject): CanonicalPropertySchema {\n  const { propertySchema } = info;\n  const { type, objectType, property, default: defaultValue } = propertySchema;\n  let { optional, indexed } = propertySchema;\n\n  assert(type.length > 0, propError(info, \"'type' must be specified.\"));\n  assertNotUsingShorthand(type, info);\n  assertNotUsingShorthand(objectType, info);\n\n  if (isPrimitive(type)) {\n    assert(objectType === undefined, propError(info, `'objectType' cannot be defined when 'type' is '${type}'.`));\n  } else if (isCollection(type)) {\n    assert(\n      isPrimitive(objectType) || isUserDefined(objectType),\n      propError(info, `A ${type} must contain only primitive or user-defined types specified through 'objectType'.`),\n    );\n  } else if (type === \"object\") {\n    assert(isUserDefined(objectType), propError(info, \"A user-defined type must be specified through 'objectType'.\"));\n  } else if (type === \"linkingObjects\") {\n    assert(isUserDefined(objectType), propError(info, \"A user-defined type must be specified through 'objectType'.\"));\n    assert(!!property, propError(info, \"The linking object's property name must be specified through 'property'.\"));\n  } else {\n    // 'type' is a user-defined type\n    throw new PropertySchemaParseError(\n      `If you meant to define a relationship, use { type: 'object', objectType: '${type}' } or { type: 'linkingObjects', objectType: '${type}', property: 'The ${type} property' }`,\n      info,\n    );\n  }\n\n  if (type !== \"linkingObjects\") {\n    assert(property === undefined, propError(info, \"'property' can only be specified if 'type' is 'linkingObjects'.\"));\n  }\n\n  if (isAlwaysOptional(type, objectType)) {\n    const displayed =\n      type === \"mixed\" || objectType === \"mixed\"\n        ? \"'mixed' types\"\n        : \"User-defined types as standalone objects and in dictionaries\";\n    assert(optional !== false, propError(info, `${displayed} are always optional and cannot be made non-optional.`));\n    optional = true;\n  } else if (isNeverOptional(type, objectType)) {\n    assert(\n      optional !== true,\n      propError(info, \"User-defined types in lists and sets are always non-optional and cannot be made optional.\"),\n    );\n    optional = false;\n  }\n\n  if (info.isPrimaryKey) {\n    assert(indexed !== false, propError(info, \"Primary keys must always be indexed.\"));\n    assert(indexed !== \"full-text\", propError(info, \"Primary keys cannot be full-text indexed.\"));\n    indexed = true;\n  }\n\n  const normalizedSchema: CanonicalPropertySchema = {\n    name: info.propertyName,\n    type: type as PropertyTypeName,\n    optional: !!optional,\n    indexed: indexed !== undefined ? indexed : false,\n    mapTo: propertySchema.mapTo || info.propertyName,\n  };\n\n  // Add optional properties only if defined (tests expect no 'undefined' properties)\n  if (objectType !== undefined) normalizedSchema.objectType = objectType;\n  if (property !== undefined) normalizedSchema.property = property;\n  if (defaultValue !== undefined) normalizedSchema.default = defaultValue;\n\n  return normalizedSchema;\n}\n\n/**\n * Determine whether a property always is implicitly optional (nullable).\n */\nfunction isAlwaysOptional(type: string, objectType: string | undefined): boolean {\n  return (\n    type === \"mixed\" ||\n    objectType === \"mixed\" ||\n    type === \"object\" ||\n    (type === \"dictionary\" && isUserDefined(objectType))\n  );\n}\n\n/**\n * Determine whether a property always is implicitly non-optional (non-nullable).\n */\nfunction isNeverOptional(type: string, objectType: string | undefined): boolean {\n  return (type === \"list\" || type === \"set\" || type === \"linkingObjects\") && isUserDefined(objectType);\n}\n\n/**\n * Determine whether a string ends with a shorthand collection ('[]' or '{}' or '<>').\n */\nfunction hasCollectionSuffix(input: string): boolean {\n  const suffix = input.substring(input.length - COLLECTION_SUFFIX_LENGTH);\n  return !!COLLECTION_SHORTHAND_TO_NAME[suffix];\n}\n\n/**\n * Assert that shorthand notation is not being used.\n */\nfunction assertNotUsingShorthand(input: string | undefined, info: PropertyInfo): void {\n  if (!input) {\n    return;\n  }\n\n  const shorthands = extractShorthands(input);\n  assert(\n    shorthands.length === 0,\n    propError(\n      info,\n      `Cannot use shorthand '${shorthands.join(\"' and '\")}' in 'type' or 'objectType' when defining property objects.`,\n    ),\n  );\n}\n\n/**\n * Extract the shorthand markers used in the input.\n */\nfunction extractShorthands(input: string): string[] {\n  const shorthands: string[] = [];\n  if (hasCollectionSuffix(input)) {\n    shorthands.push(input.substring(input.length - COLLECTION_SUFFIX_LENGTH));\n    input = input.substring(0, input.length - COLLECTION_SUFFIX_LENGTH);\n  }\n  if (input.endsWith(\"?\")) {\n    shorthands.push(\"?\");\n  }\n\n  return shorthands;\n}\n\n/**\n * Generate an error caused by an invalid property schema.\n * (Returning a function rather than the Error itself in order\n * for the Error to only be created if needed.)\n */\nfunction propError(info: PropertyInfo, message: string): () => PropertySchemaParseError {\n  return () => new PropertySchemaParseError(message, info);\n}\n\n/**\n * Generate an error caused by an invalid object schema.\n */\nfunction objectError(objectName: string, message: string): () => ObjectSchemaParseError {\n  return () => new ObjectSchemaParseError(message, { objectName });\n}\n\n/**\n * Extract the base type and the type argument from a generic string notation.\n */\nexport function extractGeneric(type: string): { typeBase: string; typeArgument?: string } {\n  const bracketStart = type.indexOf(\"<\");\n  const bracketEnd = type.indexOf(\">\", bracketStart);\n  if (bracketStart === -1) {\n    return { typeBase: type };\n  }\n  return { typeBase: type.substring(0, bracketStart), typeArgument: type.substring(bracketStart + 1, bracketEnd) };\n}\n","////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2023 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  CanonicalObjectSchema,\n  CanonicalPropertySchema,\n  Configuration,\n  DefaultObject,\n  ObjectSchema,\n  ObjectSchemaParseError,\n  PropertySchema,\n  PropertySchemaParseError,\n  RealmObject,\n  RealmObjectConstructor,\n  assert,\n} from \"../internal\";\n\n// Need to use `CanonicalObjectSchema` rather than `ObjectSchema` due to some\n// integration tests using `openRealmHook()`. That function sets `this.realm`\n// to the opened realm whose schema is a `CanonicalObjectSchema[]`. Consequently,\n// the key `\"ctor\"` (which doesn't exist on `ObjectSchema`) also needs to be allowed.\nconst OBJECT_SCHEMA_KEYS = new Set<keyof CanonicalObjectSchema>([\n  \"name\",\n  \"primaryKey\",\n  \"embedded\",\n  \"asymmetric\",\n  \"properties\",\n  // Not part of `ObjectSchema`\n  \"ctor\",\n]);\n\n// Need to use `CanonicalPropertySchema` rather than `PropertySchema`\n// due to the same reasons as above.\nconst PROPERTY_SCHEMA_KEYS = new Set<keyof CanonicalPropertySchema>([\n  \"type\",\n  \"objectType\",\n  \"property\",\n  \"default\",\n  \"optional\",\n  \"indexed\",\n  \"mapTo\",\n  // Not part of `PropertySchema`\n  \"name\",\n]);\n\n/**\n * Validate the data types of the fields of a user-provided realm schema.\n */\nexport function validateRealmSchema(realmSchema: unknown): asserts realmSchema is Configuration[\"schema\"][] {\n  assert.array(realmSchema, \"realm schema\");\n  for (const objectSchema of realmSchema) {\n    validateObjectSchema(objectSchema);\n  }\n  // TODO: Assert that backlinks point to object schemas that are actually declared\n}\n\n/**\n * Validate the data types of the fields of a user-provided object schema.\n */\nexport function validateObjectSchema(\n  objectSchema: unknown,\n): asserts objectSchema is RealmObjectConstructor | ObjectSchema {\n  try {\n    // Schema is passed via a class based model (RealmObjectConstructor)\n    if (typeof objectSchema === \"function\") {\n      const clazz = objectSchema as unknown as DefaultObject;\n      // We assert this later, but want a custom error message\n      if (!(objectSchema.prototype instanceof RealmObject)) {\n        const schemaName = clazz.schema && (clazz.schema as DefaultObject).name;\n        if (typeof schemaName === \"string\" && schemaName !== objectSchema.name) {\n          throw new TypeError(\n            `Class '${objectSchema.name}' (declaring '${schemaName}' schema) must extend Realm.Object`,\n          );\n        } else {\n          throw new TypeError(`Class '${objectSchema.name}' must extend Realm.Object`);\n        }\n      }\n      assert.object(clazz.schema, \"schema static\");\n      validateObjectSchema(clazz.schema);\n    }\n    // Schema is passed as an object (ObjectSchema)\n    else {\n      assert.object(objectSchema, \"object schema\", { allowArrays: false });\n      const { name: objectName, properties, primaryKey, asymmetric, embedded } = objectSchema;\n      assert.string(objectName, \"'name' on object schema\");\n      assert.object(properties, `'properties' on '${objectName}'`, { allowArrays: false });\n      if (primaryKey !== undefined) {\n        assert.string(primaryKey, `'primaryKey' on '${objectName}'`);\n      }\n      if (embedded !== undefined) {\n        assert.boolean(embedded, `'embedded' on '${objectName}'`);\n      }\n      if (asymmetric !== undefined) {\n        assert.boolean(asymmetric, `'asymmetric' on '${objectName}'`);\n      }\n\n      const invalidKeysUsed = filterInvalidKeys(objectSchema, OBJECT_SCHEMA_KEYS);\n      assert(\n        !invalidKeysUsed.length,\n        `Unexpected field(s) found on the schema for object '${objectName}': '${invalidKeysUsed.join(\"', '\")}'.`,\n      );\n\n      for (const propertyName in properties) {\n        const propertySchema = properties[propertyName];\n        const isUsingShorthand = typeof propertySchema === \"string\";\n        if (!isUsingShorthand) {\n          validatePropertySchema(objectName, propertyName, propertySchema);\n        }\n      }\n    }\n  } catch (err) {\n    // Rethrow as SchemaParseError(s) rather than a mix of Error, TypeError,\n    // TypeAssertionError, or AssertionError.\n    if (err instanceof PropertySchemaParseError) {\n      throw err;\n    } else if (err instanceof Error) {\n      // This first line is a workaround to satisfy TS. Runtime check needs to be\n      // `const objectName = objectSchema?.name || \"\"` where either `objectSchema`\n      // or `objectSchema.name` can be undefined or an incorrect type.\n      const objectName = (objectSchema as { name: string })?.name || \"\";\n      throw new ObjectSchemaParseError(err.message, { objectName });\n    }\n    throw err;\n  }\n}\n\n/**\n * Validate the data types of a user-provided property schema that ought to use the\n * relaxed object notation.\n */\nexport function validatePropertySchema(\n  objectName: string,\n  propertyName: string,\n  propertySchema: unknown,\n): asserts propertySchema is PropertySchema {\n  try {\n    assert.object(propertySchema, `'${propertyName}' on '${objectName}'`, { allowArrays: false });\n    const { type, objectType, optional, property, indexed, mapTo } = propertySchema;\n    assert.string(type, `'${propertyName}.type' on '${objectName}'`);\n    if (objectType !== undefined) {\n      assert.string(objectType, `'${propertyName}.objectType' on '${objectName}'`);\n    }\n    if (optional !== undefined) {\n      assert.boolean(optional, `'${propertyName}.optional' on '${objectName}'`);\n    }\n    if (property !== undefined) {\n      assert.string(property, `'${propertyName}.property' on '${objectName}'`);\n    }\n    if (indexed !== undefined) {\n      assert(\n        typeof indexed === \"boolean\" || indexed === \"full-text\",\n        `Expected '${propertyName}.indexed' on '${objectName}' to be a boolean or 'full-text'.`,\n      );\n    }\n    if (mapTo !== undefined) {\n      assert.string(mapTo, `'${propertyName}.mapTo' on '${objectName}'`);\n    }\n    const invalidKeysUsed = filterInvalidKeys(propertySchema, PROPERTY_SCHEMA_KEYS);\n    assert(\n      !invalidKeysUsed.length,\n      `Unexpected field(s) found on the schema for property '${propertyName}' on '${objectName}': '${invalidKeysUsed.join(\n        \"', '\",\n      )}'.`,\n    );\n  } catch (err) {\n    if (err instanceof Error) {\n      throw new PropertySchemaParseError(err.message, { objectName, propertyName });\n    }\n    throw err;\n  }\n}\n\n/**\n * Get the keys of an object that are not part of the provided valid keys.\n */\nfunction filterInvalidKeys(object: Record<string, unknown>, validKeys: Set<string>): string[] {\n  return Object.keys(object).filter((key) => !validKeys.has(key));\n}\n"],"names":["inject","debug","createRequire","Collection","Long","ObjectId","UUID","Decimal128","EJSON","Results","Realm","List","Set","Dictionary","App","PushClient","SyncSession","isAbsolute","join","existsSync","unlinkSync","rmSync","dirname","mkdirSync","readdirSync","REALM_ANONYMIZED_BUNDLE_ID","URL","NodeAbortController","BSON","bson","INTERNAL","binding.Helpers","binding.Results","binding.List","binding.Dictionary","binding.Set","REALM","binding.Timestamp","binding.Int64","binding.Float","UpdateMode","binding.ObjLink","binding.Obj","DEFAULT_PROPERTY_DESCRIPTOR","PROXY_HANDLER","binding.NotificationToken","WaitForSync","Types","binding.Geospatial","NumericLogLevel","OpenRealmBehaviorType","OpenRealmTimeOutBehavior","SessionStopPolicy","ClientResetMode","ProxyType","ProviderType","binding.AppCredentials","binding.GoogleAuthCode","binding.GoogleIdToken","UserState","ProgressDirection","ProgressMode","ConnectionState","SessionState","binding.WatchStream","SubscriptionSetState","SubscriptionsState","binding.WeakRef","binding.App","binding.Logger","binding.RealmCoordinator","binding.Realm","binding.isEmptyObjKey","binding.stringToObjKey","binding.InvalidObjKey","TYPE_MAPPINGS","COLLECTION_TYPES"],"mappings":"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","x_google_ignoreList":[11,12]}